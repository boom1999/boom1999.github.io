<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Haisenberg</title>
  
  
  <link href="https://boom1999.github.io/atom.xml" rel="self"/>
  
  <link href="https://boom1999.github.io/"/>
  <updated>2025-04-17T00:00:00.000Z</updated>
  <id>https://boom1999.github.io/</id>
  
  <author>
    <name>Zhicheng Ling</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>西藏自由行（青藏线-拉萨-山南-林芝）</title>
    <link href="https://boom1999.github.io/2025/04/17/TibetRound1/"/>
    <id>https://boom1999.github.io/2025/04/17/TibetRound1/</id>
    <published>2025-04-17T00:00:00.000Z</published>
    <updated>2025-04-17T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><span class="github-emoji"><span>📌</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>西藏自由行（青藏线—&gt;拉萨—&gt;山南—&gt;林芝），历时10天，于2025年3月中旬自南京出发，途径甘肃兰州，青海西宁，青藏线，西藏拉萨、山南、林芝。</p><span id="more"></span><hr><h2 id="1-Tibet-自由行简要行程"><a href="#1-Tibet-自由行简要行程" class="headerlink" title="1. $ Tibet $ 自由行简要行程"></a>1. $ Tibet $ 自由行简要行程</h2><p>南京—&gt;兰州—&gt;西宁—&gt;青藏线—&gt;拉萨—&gt;山南羊卓雍措—&gt;林芝巴宜区—&gt;色季拉山口、鲁朗、巴松措、新措、雅鲁藏布大峡谷—&gt;重庆—&gt;南京</p><h2 id="2-详细行程"><a href="#2-详细行程" class="headerlink" title="2. 详细行程"></a>2. 详细行程</h2><ul><li><strong>Day 1</strong>：南京禄口机场出发，下午抵达兰州中川机场，整备行李餐食，乘动车前往西宁站，西宁站青藏线始发。</li><li><strong>Day 2</strong>：<span class="github-emoji"><span>☀</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2600.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>青藏线至拉萨，途经格尔木、昆仑山口、可可西里、沱沱河、唐古拉山口、那曲、当雄、羊八井等地，日落后抵达拉萨站。</li><li><strong>Day 3</strong>：<span class="github-emoji"><span>☀</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2600.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>药王山观景台，千佛摩崖石刻，甘珠尔塔，西藏博物馆，扎基寺，布达拉宫广场，天上邮局，八廓街</li><li><strong>Day 4</strong>：<span class="github-emoji"><span>☀</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2600.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>布达拉宫，拉鲁湿地国家级自然保护区</li><li><strong>Day 5</strong>：<span class="github-emoji"><span>☀</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2600.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>大昭寺；拉萨出发走G4218雅叶高速、349国道，经山南市贡嘎县岗堆镇普努村，过加若拉山口到羊卓雍措，走县道306线过东拉乡到日托寺，经扎玉扎寺到达喀庆拉山、鲁日拉山，约160公里，3.5-4小时车程；返程走县道305线，经张达乡、江雄村、朗杰学乡到贡嘎县，走349国道和雅叶高速返回拉萨，约170公里，3.5-4小时车程。</li><li><strong>Day 6</strong>：<span class="github-emoji"><span>☁</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2601.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>拉萨城际铁路到林芝<span class="github-emoji"><span>☔</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2614.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>；走G4218雅叶高速、318国道，<span class="github-emoji"><span>❄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2744.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>翻越色季拉山口到鲁朗镇，扎西岗村，约75公里，1.5小时车程；走318国道，雅叶高速暴雨<span class="github-emoji"><span>☔</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2614.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>，工布江达县巴松措，结巴村，暴雪<span class="github-emoji"><span>❄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2744.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>，约200公里，4小时车程。</li><li><strong>Day 7</strong>：<span class="github-emoji"><span>☁</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2601.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>结巴村驱车前往新措，约27公里，2小时车程，新措徒步往返7公里，约2小时；<span class="github-emoji"><span>☀</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2600.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>新措返回结巴村遗忘码头；巴松措驱车前往雅鲁藏布大峡谷左岸<span class="github-emoji"><span>☔</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2614.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>，米林市派镇索松村<span class="github-emoji"><span>❄</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2744.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>，约220公里，4小时车程。</li><li><strong>Day 8</strong>：<span class="github-emoji"><span>☀</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2600.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>索松村至达林村徒步，单程约10公里，往返约4小时，返回林芝市区。</li><li><strong>Day 9-10</strong>：<span class="github-emoji"><span>☀</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2600.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>乘机场大巴至林芝机场，经重庆转机返回南京。</li></ul><h2 id="3-全程纪实"><a href="#3-全程纪实" class="headerlink" title="3. 全程纪实"></a>3. 全程纪实</h2><ul><li>本文相关坐标，若非特别说明，均为国测局GCJ-02坐标系，其他部分为WGS-84坐标系。</li></ul><h3 id="3-1-南京—-gt-兰州—-gt-西宁—-gt-青藏线—-gt-拉萨"><a href="#3-1-南京—-gt-兰州—-gt-西宁—-gt-青藏线—-gt-拉萨" class="headerlink" title="3.1 南京—>兰州—>西宁—>青藏线—>拉萨"></a>3.1 南京—&gt;兰州—&gt;西宁—&gt;青藏线—&gt;拉萨</h3><blockquote><p>从烟雨江南一路向西北进发，从丘陵到平原一望无际，再到黄土沟壑纵横，抵达兰州中川机场T2，恰好赶上T2航站楼最后几天运营，即将启用T3航站楼。不得不说中川机场的设计，拿完行李出门就是城轨的入口。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/01兰州机场.JPG" alt="中川机场T2"></p><blockquote><p>机场出发拼车到兰州站，一路黄土，第一次见到黄河，吃碗正宗的兰州牛肉面，整备行李，出发！</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/02兰州牛肉面.JPG" alt="兰州牛肉面"></p><blockquote><p>Y971次列车，天路格桑花西宁站欢迎您。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/03西宁站站台.JPG" alt="西宁站站台"></p><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/04Y971.JPG" alt="Y971"></p><blockquote><p>后半夜过<strong>察尔汗盐湖</strong>，灯火通明，卡车和路灯，睡梦中醒来感觉穿越到几十年前；<br>凌晨05:48抵达格尔木站，换美国进口内燃机车头，全车供氧，随车医生上车，下车擦车窗，四周已结冰。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/05格尔木站站台.JPG" alt="格尔木站站台"></p><blockquote><p>七点半左右蓝调时刻，雪国列车经过昆仑山口，窗外一片雪白，窗外<strong>玉珠峰</strong><code>(Yuzhu Peak, 35°39'8.53"N, 94°15'3.1"E, 6178m)</code>，昆仑山东段最高峰。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/06玉珠峰.JPG" alt="玉珠峰"></p><blockquote><p>即将进入昆仑山隧道</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/07昆仑山口.JPG" alt="昆仑山口"></p><blockquote><p>7:52昆仑山口日出<span class="github-emoji"><span>🌅</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f305.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>，照亮天际线。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/08雪山日出.JPG" alt="雪山日出"></p><blockquote><p>九点左右，可可西里无人区，青海、西藏、新疆交界的生命禁区，“守护可可西里，保护三江之源”。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/09可可西里.JPG" alt="可可西里"></p><blockquote><p>十一点左右，沱沱河，<strong>格拉丹东雪山</strong>冰川融雪滋养九州大地，汇入江海。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/10沱沱河.JPG" alt="沱沱河"></p><blockquote><p>随机刷新的藏野驴、藏牦牛</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/11野生动物.JPG" alt="野生动物"></p><blockquote><p>十二点多，翻越<strong>唐古拉山口</strong>，远处为<strong>唐古拉山龙匣宰陇巴</strong><code>(33°07'47.11"N, 92°01'51.72"E, 5940m)</code> <em>WGS-84</em>，科考队常于此钻探冰川破译“无字天书”，不久后经过青藏铁路海拔最高点5072米。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/12龙匣宰陇巴.JPG" alt="龙匣宰陇巴"></p><blockquote><p>下午两点，来到那曲市安多县境内，<strong>错那湖</strong>近在咫尺，铁路沿湖而过，海拔最高的淡水湖，冬春之交冰推。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/13错那湖.JPG" alt="错那湖"></p><blockquote><p>无人值守的底吾玛站。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/14底吾玛.JPG" alt="底吾玛"></p><blockquote><p>下午四点，那曲站ནག་ཆུ། ，在海拔四千五百米下车呼吸新鲜空气，兴奋掩盖了刺骨寒风。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/15那曲.JPG" alt="那曲"></p><blockquote><p>下午五点半，那曲县境内，列车右侧为念青唐古拉山脉中段，<strong>桑丹康桑峰</strong><code>(Samdain Kangsang, 30°50'12.98"N, 91°29'21.48"E, 6590m)</code>，主峰的辨识度极高。二十五位仙境居士之一，山神“夜叉岗布桑布”是法力无边的佛法保护神。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/16桑丹康桑.JPG" alt="桑丹康桑"></p><blockquote><p>列车驶过当雄，念青唐古拉山脉连绵不绝，藏语意为“灵应草原神”。临近七点，列车右侧是<strong>念青唐古拉峰</strong><code>(Nyainqêntanglha Feng, 30°22'57.47"N, 90°34'31.58"E, 7162m)</code>和<strong>念青唐古拉东南峰</strong><code>(Nyanchen Tanglha Southeast, 30°22'5.34"N, 90°36'2.92"E, 7046m)</code>，北麓是纳木错。强烈的第四纪冰川作用形成了陡峭的山岭，尤其西北坡山势笔直，陡峭异常，主峰顶部形似鹰嘴，多断岩峭壁。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/17念青唐古拉.JPG" alt="念青唐古拉"></p><blockquote><p>晚上八点半，列车驶过拉萨河，已可看见远处亮灯的布达拉宫，准点驶入拉萨站，历时21小时14分的青藏线结束。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/18拉萨站站台.JPG" alt="拉萨站站台"></p><h3 id="3-2-拉萨"><a href="#3-2-拉萨" class="headerlink" title="3.2 拉萨"></a>3.2 拉萨</h3><blockquote><p><strong>Day 3</strong>上午先到了药王山观景台，出发前还特意检查了钱包里的50元纸币，结果钱包没随身带。<br>走下观景台，左转绕一圈来到<strong>千佛摩崖石刻</strong>，信徒众多，几乎没有什么游客，跟着藏民们去<strong>甘珠尔塔</strong>。<br>继续向药王山高处走去，石壁上都是壁画，原计划去<strong>鲁普岩寺</strong>点酥油灯，逐渐发现和藏民的转经路线走反了，不能顺路到达，于是乎没去，<em>应当在观景台下山后右转</em>。</p><p>西藏博物馆，当天免费预约，在一楼的“离太阳最近的人—西藏民俗文化”展厅，主要是藏区各地的民俗文化，服饰、生产生活器具、节庆活动等，跟着讲解员的游客比较多，通风差，待久了感觉胸闷不适，赶紧到大厅缓一缓。二楼有解放西藏展厅，历朝历代的农奴制度、地方治理等内容较为详细。顶楼有观景露台，可以看到拉萨市区全景。</p><p>中午在<strong>光明岗琼甜茶馆</strong>喝1元一杯的甜茶，吃藏面搭配炸土豆，藏面比较硬，不一定所有人都吃得来。</p><p>回酒店休息后乘公交车前往<strong>扎基寺</strong>，免费参观，财神庙，香火旺盛。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/19扎基寺.JPG" alt="扎基寺"></p><blockquote><p>从扎基寺出来，想到早上漏掉了纸币的合影，于是继续坐公交到布达拉宫广场的<strong>前站酸奶坊</strong>，吃牦牛冰淇淋酸奶然后再去补卡。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/20五十元纸币.JPG" alt="五十元纸币"></p><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/21布宫广场.JPG" alt="布宫广场"></p><blockquote><p>一路步行穿过八廓街，瞎逛回酒店，途径<strong>大昭寺</strong>，朝拜的信徒络绎不绝，十岁左右的两姐弟衣衫褴褛，绕着大昭寺磕长头。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/22大昭寺.JPG" alt="大昭寺"></p><blockquote><p><strong>Day 4</strong> 一大早出发布达拉宫！</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/23布宫脚下.JPG" alt="布宫脚下"></p><blockquote><p>下午原计划去大昭寺，但同行的搭子高反比较严重去医院输液打乱了行程，调整到了<strong>Day 5</strong> 一大早。<br>于是即兴前往<strong>拉鲁湿地国家级自然保护区</strong>，拍下这两张布达拉宫远景。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/24拉鲁湿地布宫.JPG" alt="拉鲁湿地布宫"></p><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/25望远镜布宫.JPG" alt="望远镜布宫"></p><h3 id="3-3-山南羊卓雍措"><a href="#3-3-山南羊卓雍措" class="headerlink" title="3.3 山南羊卓雍措"></a>3.3 山南羊卓雍措</h3><blockquote><p>进藏第五天，自驾<strong>羊卓雍措</strong>。羊湖由亿年前冰川泥石流阻塞河道而形成，是藏南最大的封闭性内陆湖泊，西藏三大圣湖之一，湖面海拔4441米，面积638平方公里，湖水呈现出蓝色、绿色。<br>从普努村开始翻越<strong>加若拉山</strong>，随着盘山公路海拔急剧上升，山口狂风大作，山口经幡飘扬<code>(29°8'27.53"N, 90°49'18.83"E, 4700m)</code>。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/26加若拉山口.JPG" alt="加若拉山口"></p><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/27加若拉经幡.JPG" alt="加若拉经幡"></p><blockquote><p>翻越加若拉山口后就能看到远处的羊湖，下山左转来到羊湖岸边<code>(29°7'28.16"N, 90°44'3.48"E, 4443m)</code>，戴墨镜的白色藏獒（雪獒）被迫营业。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/28雪獒.JPG" alt="雪獒"></p><blockquote><p>湖水分层，一层层波浪起伏。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/29羊卓雍措湖岸.JPG" alt="羊卓雍措湖岸"></p><blockquote><p>远处是<strong>觉姆</strong><code>(29°16'34.10"N, 90°20'4.45"E, 6080m)</code>和<strong>觉波</strong><code>(29°15'2.41"N, 90°20'30.08"E, 6070m)</code>。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/30羊湖湖岸人像.JPG" alt="羊湖湖岸人像"></p><blockquote><p>公厕每人两元，不过没有进去体验。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/31羊湖公厕.JPG" alt="羊湖公厕"></p><blockquote><p>沿县道306线过东拉乡贡嘎村，一路碎石颠簸，尘土飞扬，路况非常差，牛羊成群，小学生皮肤黝黑。<br>在东拉村附的近岔路口右拐小路，到达<strong>日托寺</strong>，门票20元，世界上最孤独的寺庙。<br>此时远处已有云雾缭绕，但无遮挡的地方，阳光还是非常强烈。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/32日托寺.JPG" alt="日托寺"></p><blockquote><p>离开日托寺继续向前，一样还是碎石，尘土，坑洼，约半小时后在主路左转进入扎余村，在扎玉扎寺继续左转，沿盘山公路而上约半小时，于下午五点半到达<strong>喀庆拉山</strong><code>(29°3'29.26"N, 90°54'18.90"E, 5200m)</code>。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/33喀庆拉山.JPG" alt="喀庆拉山"></p><blockquote><p>春寒料峭，十级狂风。<strong>库拉岗日峰</strong><code>(Kula Kangri, 28°13'38.35"N, 90°36'54.94"E, 7538m)</code>，山南最高峰，库拉岗日是四大神山之一，绝佳视角被云雾遮挡。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/34喀庆拉山人像1.JPG" alt="喀庆拉山人像1"></p><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/35喀庆拉山人像2.JPG" alt="喀庆拉山人像2"></p><blockquote><p>山顶狂风不宜久留，返程下山，右侧岔路可到<strong>鲁日拉山</strong>。继续沿盘山公路而下，往朗杰学乡方向返回拉萨。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/36鲁日拉山.JPG" alt="鲁日拉山"></p><h3 id="3-4-林芝"><a href="#3-4-林芝" class="headerlink" title="3.4 林芝"></a>3.4 林芝</h3><h4 id="3-4-1-鲁朗"><a href="#3-4-1-鲁朗" class="headerlink" title="3.4.1 鲁朗"></a>3.4.1 鲁朗</h4><blockquote><p>一大早摸黑出发，从拉萨站乘坐拉萨城际铁路到林芝站，拉林铁路沿着<strong>雅鲁藏布江</strong>。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/37拉林铁路旁的雅江.JPG" alt="拉林铁路旁的雅江"></p><blockquote><p>走318国道翻越<strong>色季拉山口</strong><code>(29°36'38.20"N, 94°39'5.87"E, 4556m)</code>，云雾大，未能见到远处的纳迦巴瓦，下起了小雪，路面湿滑，大车比较多，爬坡行驶缓慢。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/38色季拉山口.JPG" alt="318国道色季拉山口"></p><blockquote><p>路旁刷新几只野猴，在吃游客投喂的食物，本不该打扰它们的。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/39野猴.JPG" alt="318国道野猴"></p><blockquote><p>翻越山口后下山就是鲁朗，在扎西岗村稍作停留，农场和雪山让人心旷神怡，远处山峰后面是被云雾遮挡的<strong>支巴岗日</strong><code>(29°49'26.65"N, 94°52'17.40"E, 6846m)</code>。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/40鲁朗.JPG" alt="鲁朗"></p><h4 id="3-4-2-巴松措、新措"><a href="#3-4-2-巴松措、新措" class="headerlink" title="3.4.2 巴松措、新措"></a>3.4.2 巴松措、新措</h4><blockquote><p>从鲁朗返程已接近五点，雅叶高速上暴雨，到工布江达县雨停了，天也黑了。<br>临近巴松措，又开始下雨，逐渐转为下雪，越往山里雪越大，晚上九点多到达民宿入住，民宿院子里的经幡。<br>放了半小时的热水仍然是冰凉的，洗了个冷水澡，好在民宿都有取暖器，没感冒也没高反。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/41巴松措经幡.JPG" alt="巴松措经幡"></p><blockquote><p>一晚上的狂风暴雪，经幡在第二天早上塌了，暴雪压断线路，断网断电，驱车前往<strong>新措</strong>。<br>本就是坑坑洼洼的非铺装路面，泥地积雪打滑，好几处上坡冲了好几次才上去，中午返程时路上居然都干了，太阳辐射强导致融雪也非常快。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/42出发新措.JPG" alt="出发新措"></p><blockquote><p>新措收取清洁费10元，加上巴松措门票淡季60，自认为这当中的大部分应当给新措才对。<br>冬春独有的雪景，和夏季的草甸牧场截然不同。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/43新措起点.JPG" alt="新措起点"></p><blockquote><p>徒步强度相对较小，往返7公里，一个多小时可以完成，但积雪比较厚，白天仍然飘着小雪，需要登山靴和冲锋衣。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/44新措人像1.JPG" alt="新措人像1"></p><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/45新措人像2.JPG" alt="新措人像2"></p><blockquote><p>牦牛成群，近距离靠近不会有危险，原始森林里的牦牛会主动往密林深处避开人群。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/46牦牛.JPG" alt="牦牛"></p><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/47一群牦牛.JPG" alt="一群牦牛"></p><blockquote><p>新措岸边，远处雪山被遮挡，雪后的湖水清澈见底，夏季应该呈蓝绿色。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/48新措岸边.JPG" alt="新措岸边"></p><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/49新措人像3.JPG" alt="新措人像3"></p><blockquote><p>密林深处积雪到小腿。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/50积雪.JPG" alt="积雪"></p><blockquote><p>直接躺下。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/51新措人像4.JPG" alt="新措人像4"></p><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/52新措人像5.JPG" alt="新措人像5"></p><blockquote><p>徒步结束，驱车返回，<strong>巴松措遗忘码头</strong><code>(30°0'35.24"N, 93°58'19.45"E)</code>。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/53巴松措1.JPG" alt="巴松措1"></p><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/54巴松措2.JPG" alt="巴松措2"></p><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/55巴松措人像.JPG" alt="巴松措人像"></p><blockquote><p>从遗忘码头离开时已经是下午两点多，结巴村仍然处于断电断网状态，只能开出巴松措景区找吃的，吃完后赶往雅江峡谷。<br>雨夜到达<strong>索松村</strong>，门票150元，途中被川牌大众急转弯强行加塞，遂截停讨要说法。<br>索松村雪夜觅食，找了一家藏餐，咖喱鸡饭，牛肉包子，奶茶，只有奶茶还挺好。<br>边上的酒吧震天响，真的很难想象世外桃源会这样。</p></blockquote><h4 id="3-4-3-雅鲁藏布大峡谷"><a href="#3-4-3-雅鲁藏布大峡谷" class="headerlink" title="3.4.3 雅鲁藏布大峡谷"></a>3.4.3 雅鲁藏布大峡谷</h4><blockquote><p>早晨依然在下雨下雪，九点多的时候开太阳了<span class="github-emoji"><span>☀</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2600.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>，立即收拾装备往峡谷岸边走，桃花<code>(29°34'21.65"N, 94°53'35.16")</code>和远处的<strong>多雄拉雪山</strong><code>(29°25'20.21"N, 94°54'2.05"E, 5780m)</code></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/56桃花和多雄拉.JPG" alt="桃花和多雄拉"></p><blockquote><p>继续沿着雅鲁藏布江的河岸往前走，来到自认为在索松村能到达的最佳观景地点<code>(29°34'30.61"N, 94°53'38.54"E)</code>，位于桃花林的尽头，工作人员正在加急装护栏。<br>前方是雅鲁藏布江和<strong>南迦巴瓦</strong><code>(Namcha Barwa, 29°38'2.76"N, 95°3'34.38"E, 7782m)</code>。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/57雅江和纳迦巴瓦.JPG" alt="雅江和纳迦巴瓦"></p><blockquote><p>背后是雅江和多雄拉。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/58雅江和多雄拉.JPG" alt="雅江和多雄拉"></p><blockquote><p>原计划是开车进达林村，但同行的搭子又闹了幺蛾子，得亏体力还行，收拾好行李寄存在前台，带上轻装背包独自徒步进<strong>达林村</strong>，预估来回四小时。紧贴峡谷向前，可以看到纳迦巴瓦近在眼前，全景非常震撼。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/59纳迦巴瓦全景.JPG" alt="纳迦巴瓦全景"></p><blockquote><p>拐弯处可见近景的冰川。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/60纳迦巴瓦近景.JPG" alt="纳迦巴瓦近景"></p><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/61南迦巴瓦人像.JPG" alt="南迦巴瓦人像"></p><blockquote><p>临近达林村，背后是南迦巴瓦峰和很具有辨识度的<strong>乃彭峰</strong><code>(Napung Peak, 29°37'1.2"N, 95°3'15.7"E, 7043m)</code></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/62达林村人像.JPG" alt="达林村人像"></p><blockquote><p>达林村相较于峡谷更外侧的村落要原始的多，秃鹫正在进食。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/63秃鹫1.JPG" alt="秃鹫1"></p><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/64秃鹫2.JPG" alt="秃鹫2"></p><blockquote><p>终于在达林村，有幸见到了<strong>加拉白垒</strong><code>(Gyala Peri, 29°48'51.62"N, 94°58'11.14"E, 7294m)</code>，念青唐古拉山脉的最高峰，在两侧山林的映衬下更加洁白，蓝天白云下的冰淇淋，隔着雅鲁藏布江与喜马拉雅山脉的纳迦巴瓦对峙。“加拉”取自加拉村，“白垒”意为高峰。<br>传说作为哥哥的纳迦巴瓦觊觎日益雄伟的加拉白垒，砍去弟弟的头颅，化作多雄拉雪山。<br>抛开传说，这两座雪山更像是在镇守着雅鲁藏布江。<br>加拉白垒峰的左侧紧贴着是<strong>白拉日</strong><code>(29°49'4.12"N, 95°57'42.80"E, 7100m)</code>；侧峰是<strong>森塘布</strong><code>(Sendapu, 29°50'23.1"N, 94°56'36.31"E, 6812m)</code>，尚未登峰。</p></blockquote><ul><li><strong>力古冬果冰川</strong>冰舌附近海拔2664米，距离加拉白垒峰直线距离6.2公里，落差达到四千六百米，比降达到86%，国内极大落差第一位。十余年前曾有十余人队伍穿越雅鲁藏布大峡谷左岸加拉白垒线，曾在力古冬果冰川<code>(29°47.072'N, 95°00.121'E, 3677M)</code>附近扎营。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/65加拉白垒.JPG" alt="加拉白垒"></p><ul><li>下午三点左右，准备从达林村返回索松村，再驾车回市区，同行搭子继续犯幺蛾子，被告知开着车先出村了。</li><li><strong>高原、峡谷、村落、牦牛、秃鹫</strong>，无法理解是何等的心智不成熟可以做出这种事，只能抱着试一试的心态联系民宿老板，回到索松村预计四点半，请求帮忙联系出村的司机，但被告知下午很少有出村的，大多都是上午出村。</li><li>遂做好最坏的打算，一边继续往峡谷外走，一边开始退当晚在林芝的酒店，准备改签第二天的机票。</li><li>幸运会眷顾有心之人，在Mammut猛犸象的守护下没有被秃鹫和野牦牛袭击，圣洁的Gyala Peri也保佑我很幸运地遇到了从达林村去派镇办事的村民小哥，将我带回了索松村，也顺便请他带我拿上行李回到派镇客运中心，很热情地帮我联系了派镇的线路车司机，一路和小哥聊着藏区和沿海城市的差异，也邀请他有机会来杭州。</li><li>搭上了从派镇回林芝市区的最后一班车，沿着雅江和尼洋河驶出峡谷，天黑前顺利回到了市区，筋疲力尽，吃了石锅鸡作为在西藏的最后一顿。</li><li>引用高中时一位数学老师的话“<strong>我简直是无法理解，难以想象</strong>”来形容这天的经历，既有见到纳迦巴瓦和加拉白垒的幸运，也有同行搭子的愚蠢，更有来不及看日照金山的遗憾，这遗憾和愚蠢的教训就当是下次进藏最好的经验吧。</li></ul><h4 id="3-4-4-飞机视角雪山"><a href="#3-4-4-飞机视角雪山" class="headerlink" title="3.4.4 飞机视角雪山"></a>3.4.4 飞机视角雪山</h4><blockquote><p>米林机场非常小，起飞和降落窗口基本都在上午，午后降落容易出现大雾，峡谷降落难度极大；军民两用，起飞滑行时还看到了翼龙。</p><p>起飞从峡谷迅速爬升飞至鲁朗上空，五千米遥望<strong>南迦巴瓦</strong></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/66高空纳迦巴瓦.JPG" alt="高空纳迦巴瓦"></p><blockquote><p>六千五百米遥望<strong>南迦巴瓦、加拉白垒同框</strong></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/67高空纳迦巴瓦和加拉白垒.JPG" alt="高空纳迦巴瓦和加拉白垒"></p><blockquote><p>继续爬升到八千米，来到加拉白垒西北侧，冰川右侧是<strong>支巴岗日</strong><code>(29°49'26.65"N, 94°52'17.40"E, 6846m)</code></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/68支巴岗日.JPG" alt="支巴岗日"></p><blockquote><p>近九千米可以看到完整的<strong>加拉白垒北坡冰川</strong></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/69加拉白垒北坡冰川.JPG" alt="加拉白垒北坡冰川"></p><blockquote><p>稍后可见<strong>雅鲁藏布大峡谷，完整的南迦巴瓦北坡和加拉白垒峰</strong></p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/70雅江峡谷和南迦巴瓦加拉白垒北坡.JPG" alt="雅江峡谷和南迦巴瓦加拉白垒北坡"></p><blockquote><p>四川省甘孜州巴塘县甲英镇上空，前方是凶险的金沙江；<br>远处是梅里雪山，<strong>卡瓦格博</strong><code>(Kawagarbo, 28°26'18.31"N, 98°40'56.06"E, 6740m)</code>，上世纪九十年代数次登峰失败，“卡瓦”意为雪，“格博”意为白色，藏族神山，2001年登山禁令；<br>右侧是<strong>他念他翁山脉</strong>，最高峰<strong>大米勇</strong><code>(Damiyong, 29°10'53.65"N, 98°27'36.22"E, 6324m)</code>，属横断山脉，是唐古拉山的南延，山体险峻挺拔，风化破碎严重，犹如一堵高墙分割澜沧江和怒江，<strong>藏东南秘境徒步线路</strong>。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/71梅里雪山卡瓦格博和金沙江.JPG" alt="梅里雪山卡瓦格博和金沙江"></p><blockquote><p>四川省甘孜州康定市上空，飞机正下方是<strong>大渡河</strong>和<strong>夹金山</strong><code>(Jiajin Shan, 30°35'15.22"N, 102°10'6.82"E, 5734m)</code>，“长征万里险，最忆夹金山”，35年6月强渡大渡河飞夺泸定桥后，最艰难的正是这长征路上的第一座大雪山。<br>远处最高峰是<strong>木雅贡嘎</strong><code>(Minya Konka, 29°35'45.76"N, 101°52'44"E, 7508.9m)</code>，贡嘎山脉主峰，海拔7556米，是横断山脉的最高峰，号称“蜀山之王”。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/72贡嘎和大渡河.JPG" alt="贡嘎和大渡河"></p><blockquote><p>四川省成都市温江区上空，远处是<strong>贡嘎山脉</strong>傲立在成都平原尽头，左侧云雾之中是<strong>峨眉山</strong><code>(Emei Shan, 29°30'37.26"N, 103°19'54.73"E, 3099m)</code>。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/73贡嘎远景.JPG" alt="贡嘎远景"></p><h3 id="3-5-番外：重庆"><a href="#3-5-番外：重庆" class="headerlink" title="3.5 番外：重庆"></a>3.5 番外：重庆</h3><blockquote><p>落地重庆江北，已经提前在<em>中转旅客服务通</em>填写了信息，航站楼内<em>重庆飞</em>柜台兑换住宿票据，等几分钟后就接到司机电话，一辆面包车满满当当六七人拉到航站楼附近的酒店，住宿条件勉强过得去，双人间，若要单人住宿可补差价。</p><p>在魁星楼附近的社区吃了火锅，微辣还<strong>辣辣辣辣辣辣</strong>，吃完后孃孃才说他们自己一般吃微微辣<span class="github-emoji"><span>😩</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f629.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/74火锅1.JPG" alt="火锅1"></p><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/75火锅2.JPG" alt="火锅2"></p><blockquote><p>为了补上次在重庆没看到的朝天门夜景，特地去了南滨路钟楼广场。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/76东水门长江大桥夜景.JPG" alt="东水门长江大桥夜景"></p><blockquote><p>路过了晚上的龙门浩老街，看到了亮灯的东水门长江大桥。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tibet/77朝天门夜景.JPG" alt="朝天门夜景"></p><h2 id="4-交通、线路强度、住宿、餐饮"><a href="#4-交通、线路强度、住宿、餐饮" class="headerlink" title="4. 交通、线路强度、住宿、餐饮"></a>4. 交通、线路强度、住宿、餐饮</h2><h3 id="4-1-交通"><a href="#4-1-交通" class="headerlink" title="4.1 交通"></a>4.1 交通</h3><ul><li>进藏/出藏大交通：南京直飞兰州，由动车<strong>D165</strong>转西宁（<strong>兰州站21:06-西宁站22:44</strong>），青藏线<strong>Y971</strong>次列车进藏（<strong>西宁站23:15-拉萨站20:29</strong>）；由林芝经重庆转机返回南京。<ul><li><em>为什么没选网红<strong>Z164/Z165</strong>次列车？</em><ul><li>时间：Z164/Z165由上海18:33始发，21:13过南京，Day+2的01:38抵达格尔木，15:30抵达拉萨，前半程将近一天半的时间都在青藏高原外，风景一般；昆仑山、可可西里、沱沱河等前半段在夜里（此行为3月中旬，夏季7/8月可选此次列车），<strong>青藏线西宁发车越晚，风景越多，Y971最优</strong>；</li><li>车票：网红班次车票紧张，大部分从上海出发，兰州甚至西宁上车几乎没票。</li></ul></li><li>为什么经兰州转？<ul><li>空铁联运时间可行，当日可赶上<strong>Y971</strong>；中川机场是西北枢纽，航班选择更多；<strong>兰州牛肉面</strong>。</li></ul></li><li>为什么由林芝米林机场返程？<ul><li>米林机场航班全在上/中午起飞，后续行程连贯；高原山谷起飞，航线途径鲁朗镇，<strong>近距离欣赏纳迦巴瓦和加拉白垒</strong>；自由行在林芝结束，返回贡嘎机场反而更远；</li><li>重庆转机停留5-48h机场提供住宿，<strong>重庆火锅</strong>。</li></ul></li></ul></li><li>拉萨市区交通：<ul><li>公交车：市区公交可到达大部分景点（哲蚌寺等山上和偏远的景点除外），票价1元，可刷联合交通卡。</li><li>网约车：基本10-15元/程，3-4人划算。</li></ul></li><li>山南羊湖/林芝交通：<ul><li>羊湖一日游<strong>租车自驾</strong>，走羊湖东侧日托寺方向，往返总共7-8小时车程（前文有具体线路）。<ul><li>需要注意的主要是天黑前离开普努村至芝龙村段的加若拉山，盘山公路；县道306线<strong>大多是搓衣板路</strong>，需SUV；返程从朗杰学乡走，理论上经过<em>甲日山沟-甲日普-朗杰林-沃拉</em>的线路更快，但是处于养护施工封路状态，出发前请确认。</li></ul></li><li><em>为什么没报团羊湖一日游/纳木错?</em><ul><li>羊湖一日游报团价格100-150元/人，包车票、首道门票和团餐，早出晚归，观景时间段路线单一，都是远景，卡若拉冰川个人感觉没必要，（淡季旺季价格应该会变）。</li><li>纳木错在念青唐古拉山脉北侧，青藏线已从南侧经过，可远观念青唐古拉山主峰；青藏线紧贴<strong>错那湖</strong>，有机会见<strong>冰推</strong>；从拉萨至纳木错来回两天才比较稳妥。</li></ul></li><li>去鲁朗的行程需要走318国道翻越色季拉山口，巴松措的行程主要是新措徒步，从结巴村到新措驿站约三十公里，包车往返预计500元，雅江峡谷的行程若不开车需要民宿老板接送费用另算，要不然就得坐景区观光车90元，这几个地方都比较远并且不在一个方向。林芝客运中心每天有几趟面包车营运（称之为线路车），但<strong>公共交通时间不可控</strong>，遂选择租车。租车成本和时间不可控产生的多住几天的费用，必须二选一。</li></ul></li><li>林芝机场交通<ul><li>米林机场大巴单程25元/人，约40分钟车程，上午由巴宜区民航基地发车；</li><li>前一夜适合住在<strong>民航基地</strong>附近，住食相对方便；机场附近住宿条件较差。</li></ul></li></ul><h3 id="4-2-线路强度"><a href="#4-2-线路强度" class="headerlink" title="4.2 线路强度"></a>4.2 线路强度</h3><ul><li>进藏前减少摄氧需求大的健身，适当增加耐氧训练；</li><li>青藏线格尔木站之后开始弥散式供氧，有紧急供养口，车内一般不会高反，不建议持续吸氧，产生依赖将导致下车后的反应更大；备可乐和电解质粉，充足的路餐及时进食，可能产生中耳不适和肚胀气，多进行吞咽动作；车内温度可能较高，及时增减衣物；停车时可下车适应低压低氧环境；</li><li>布达拉宫放在了Day 4也就是在拉萨的第二个白天，第一天安排爬升少一些的西藏博物馆等地，但事实是博物馆内通风较差，空气流通不畅，每逛一个场馆就觉得胸闷，出博物馆后自行缓解；</li><li>羊湖自驾/林芝自驾，路程长、路况复杂，不建议新手开，要有足够的安全常识；看季节备防滑链和雪胎；这次行程的所有自驾路线都建议开SUV，最好有涡轮增压；</li><li>天气变化快，风大雨大雪大，备冲锋衣和登山靴，速干打底避免出汗后着凉感冒；</li><li>洗澡/洗头，主要就是做好保温保湿，做好保暖措施，保湿乳液，头发吹干，基本没问题；进藏后第一天就洗澡洗头了，后续也每天洗，在林芝甚至洗了冷水澡，没出现高反，做好防护比较重要。</li><li>拉萨市区天气无所谓，山南和林芝需要一直关注天气改行程。</li></ul><h3 id="4-3-住宿"><a href="#4-3-住宿" class="headerlink" title="4.3 住宿"></a>4.3 住宿</h3><blockquote><p>住宿看个人需求见仁见智，总体来说拉萨市区住宿还可以，林芝几处村落的民宿条件较差，若介意可携带一次性洗漱用品，我是本着能睡就行的理念，该省省该花花。</p></blockquote><ul><li>拉萨市区推荐在<strong>北京东路</strong>，离布达拉宫、大昭寺、八廓街都很近，<strong>步行可达</strong>（但恰逢道路施工封路，打车和公交部分需要绕路，据说这条路经常修，旺季应该就修完了<span class="github-emoji"><span>👊</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f44a.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>）；</li><li>巴松措住宿可选结巴村、错高村和新措驿站；以<strong>结巴村</strong>为主，餐饮和住宿选择性较多，近巴松措景区；错高村住宿较少，可继续向里至杂拉村，原始村落；新措驿站是新措仅有的一家住宿，视行程安排可选；</li><li>雅江峡谷住宿左岸可选吞白村、索松村、达林村，右岸可选观光景区住宿和直白村；吞白村较靠外，除非索松村满房或价格差过大，不建议选；大部分住宿在<strong>索松村</strong>，价格就图一乐，和条件没有关联，波动较大；达林村有松赞酒店，贵但条件和视角确实好；右岸需另外付费乘坐景区观光车进入，直白村距纳迦巴瓦最近，但商业化开发较少，可能需要村民带进去。</li><li>林芝市区选择较多，第二天要去机场就住在民航基地附近方便，若住机场附近条件差且价格贵。</li></ul><h3 id="4-4-餐饮"><a href="#4-4-餐饮" class="headerlink" title="4.4 餐饮"></a>4.4 餐饮</h3><ul><li>藏餐：近似尼泊尔餐和印度菜，牛羊肉、青稞面食、奶制品为主，<strong>吉祥圣雪</strong>可以一试，店主情绪价值拉满</li><li>甜茶：口感近似香飘飘，入口舒服，推荐<strong>光明岗琼甜茶馆</strong>，1元/杯，倒茶收纸币，藏面较硬，味道不错，份量小，可以搭配炸土豆</li><li>青稞酒/拉萨啤酒/青稞啤酒：无特殊，没喝出来独特之处</li><li>酸奶：牦牛酸奶，确实酸，推荐<strong>前站牦牛酸奶坊</strong></li><li>阿刁奶茶：上层奶香更浓郁，其他近似茶颜</li><li>藏香猪：更香更弹，口感和普通肉猪差挺多</li><li>石锅鸡：本地鸡和一堆菌类混合，特色鸡煲，可以一试</li></ul><h2 id="5-后记"><a href="#5-后记" class="headerlink" title="5 后记"></a>5 后记</h2><blockquote><p>整个行程筹划了近半个月，从往返的交通到路线顺序，对比各种攻略，不断调整，力求有更好的体验。在拉萨的几天晚上都还在担心山南和林芝的天气，半夜调整后几天的行程顺序，把雨雪天可以去的新措提到了前面，把雅江峡谷放在了晴天，最终算是意料之中。</p><p><strong>敬畏自然</strong>是离开城市必须要遵守的法则，钢铁骨骼在无人区都是脆弱的，心智不成熟的人只会践踏亘古的威严，亿万年的雪山不由得你放肆。</p><p>进藏$ Tibet Round 2 $计划在五年内吧，<strong>日喀则地区</strong>和<strong>珠峰大本营</strong>，<strong>阿里地区</strong>和<strong>冈仁波齐</strong>；在此之前去<strong>雨崩</strong>，<strong>木雅贡嘎</strong>，藏东南的<strong>他念他翁</strong>重装徒步。</p><p>进藏$ Tibet Round 3 $计划在十年内吧，<strong>墨脱徒步</strong>和<strong>雅鲁藏布大峡谷左岸穿越</strong>。</p></blockquote><hr><blockquote><p>最后修改于2025/04/19</p></blockquote><!-- markdownlint-disable-file MD025 MD028 MD033 -->]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;📌&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png?v8&quot; aria-hidden=&quot;true&quot; onerror=&quot;this.parent.classList.add(&#39;github-emoji-fallback&#39;)&quot;&gt;&lt;/span&gt;西藏自由行（青藏线—&amp;gt;拉萨—&amp;gt;山南—&amp;gt;林芝），历时10天，于2025年3月中旬自南京出发，途径甘肃兰州，青海西宁，青藏线，西藏拉萨、山南、林芝。&lt;/p&gt;</summary>
    
    
    
    <category term="Summary" scheme="https://boom1999.github.io/categories/Summary/"/>
    
    
    <category term="Tibet" scheme="https://boom1999.github.io/tags/Tibet/"/>
    
  </entry>
  
  <entry>
    <title>ElasticSearch query performance optimization</title>
    <link href="https://boom1999.github.io/2024/08/13/ElasticSearch%20query%20performance%20optimization/"/>
    <id>https://boom1999.github.io/2024/08/13/ElasticSearch%20query%20performance%20optimization/</id>
    <published>2024-08-13T00:00:00.000Z</published>
    <updated>2024-08-13T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><span class="github-emoji"><span>📌</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><strong>Elasticsearch</strong>使原生的<strong>Lucene</strong>查询更加简单，同时提供了更多的功能，且可以通过<strong>RESTful API</strong>访问。<strong>Elasticsearch</strong>是一个分布式的搜索引擎，提供了一个分布式多用户能力的全文搜索引擎，基于<strong>RESTful</strong>的<strong>web</strong>接口。此外也可以扩展到几乎无限数量的服务器，以及能力去处理<strong>PB</strong>级别的数据。</p></blockquote><span id="more"></span><h2 id="books-核心概念"><a href="#books-核心概念" class="headerlink" title=":books: 核心概念"></a><span class="github-emoji"><span>📚</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4da.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 核心概念</h2><h3 id="lock-基本概念"><a href="#lock-基本概念" class="headerlink" title=":lock: 基本概念"></a><span class="github-emoji"><span>🔒</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f512.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 基本概念</h3><blockquote><p>为了方便理解Elasticsearch的一些基本概念，将其中的一些概念和关系型数据库做类比。<strong>但是请注意，这样类比并不是非常合适，甚至可能存在一些偏差，仅适用为初期提供更好的理解。</strong></p></blockquote><div class="table-container"><table><thead><tr><th style="text-align:center">Elasticsearch</th><th style="text-align:center">Mysql</th></tr></thead><tbody><tr><td style="text-align:center">索引库<code>Index</code></td><td style="text-align:center">数据库<code>Database</code></td></tr><tr><td style="text-align:center">文档类型<code>Type</code>（ES6.0开始逐渐弃用）</td><td style="text-align:center">数据表<code>Table</code></td></tr><tr><td style="text-align:center">文档<code>Document</code></td><td style="text-align:center">行数据<code>Row</code></td></tr><tr><td style="text-align:center">字段<code>Field</code></td><td style="text-align:center">具体到某一列<code>Column</code></td></tr><tr><td style="text-align:center">文档ID</td><td style="text-align:center">主键ID</td></tr><tr><td style="text-align:center">查询<code>Query DSL</code></td><td style="text-align:center">查询<code>SQL</code></td></tr><tr><td style="text-align:center"><code>Get http://...</code></td><td style="text-align:center"><code>SELECT * FROM...</code></td></tr><tr><td style="text-align:center"><code>PUT http://...</code></td><td style="text-align:center"><code>UPDATE TABLE SET...</code></td></tr></tbody></table></div><ul><li><code>Index</code>是文档的集合，相当于关系型数据库中的数据库，一个<code>Index</code>可以包含多个<code>Type</code>，但是在ES6.0版本中逐渐弃用<code>Type</code>，一个<code>Index</code>只能包含一个<code>Type</code><ul><li>索引名称必须是小写的，不能包含逗号、空格等特殊字符</li><li>索引有<code>mapping</code>和<code>setting</code>两个配置，<code>mapping</code>定义了文档的字段类型，<code>setting</code>定义了索引的配置例如分片、副本和自定义的<code>analyzer</code></li></ul></li><li><code>Document</code>是可搜索数据的最小单元，相当于关系型数据库中的一条记录，在ES中会被序列化成Json格式存储</li><li>存储的Json对象由各个字段组成，相当于关系型数据库中的列，同时每个字段也有其自己的类型（字符串、布尔、时间范围等）</li><li>创建文档时若不指定字段的类型，ES将自动匹配映射，但是在生产环境中最好自定义映射</li><li>每个文档都有一个ID相当于Mysql的主键，可以自定也可以自动生成</li><li>节点<code>Node</code>是一个单独的Elasticsearch实例，它属于一个集群<code>Cluster</code>，集群是由一个或多个节点组成的，本质上一个节点可简单看作是一个进程，在集群中建议在单机只部署一个高性能节点，单机多节点反而导致性能下降；同样也具有一般分布式架构的选举、<code>coor</code>等</li><li>分片<code>Shard</code>是ES中最小的工作单元，每个分片都是一个<code>Lucene</code>实例，分片是ES实现分布式和水平扩展的基础，分片的数量在索引创建时就已经确定，分片的数量只能增加不能减少，一般不建议后期再次修改</li><li>副本<code>Replica</code>是分片的副本，副本的作用是提高数据的可用性，副本的数量可以动态调整，副本的数量越多，读性能越好，但是写性能会下降，副本的数量不能超过节点的数量，默认副本系数为1，也就是给每个主分片创建一个copy</li><li><strong>关于<code>Type</code></strong>，多<code>Type</code>里的字段需要保持一致，也就是不同实体之间出现了很多冗余，导致分布稀疏，干扰了<code>Lucene</code>压缩文档的能力，影响存储性能；相对于<code>Mysql</code>中每个<code>Table</code>下的<code>Scheme</code>是没有限制要保持一致的，这也是区别之一<ul><li><code>6.x</code>之前可以有多个<code>Type</code></li><li><code>6.x</code>之后只能有一个自定义名字的文档类型</li><li><code>7.x</code>之后只能有一个且名字是<code>_doc</code></li><li>未来可能取消文档类型的概念，部分API将改动</li></ul></li></ul><h2 id="pencil2-查询性能优化"><a href="#pencil2-查询性能优化" class="headerlink" title=":pencil2: 查询性能优化"></a><span class="github-emoji"><span>✏</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/270f.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 查询性能优化</h2><h3 id="Filesystem-Cache-文件系统缓存"><a href="#Filesystem-Cache-文件系统缓存" class="headerlink" title="Filesystem Cache 文件系统缓存"></a>Filesystem Cache 文件系统缓存</h3><blockquote><p>数据写入流程：客户端选择一个Node发送请求，路由到主分片，主分片将数据先写入到<code>buffer</code>里，同时将数据写到<code>translog</code>日志（同步写入到副本分片），可选写到<code>translog</code>的同时同步写入磁盘或者等待后异步刷到磁盘；若<code>buffer</code>满了或是手动触发刷新<code>refresh</code>，就会刷新到<code>Filesystem Cache</code>，此时生成一个新的<code>segment</code>就可以被搜索到，一定时间或<code>translog</code>超出大小后触发<code>flush</code>将<code>Filesystem Cache</code>数据同步到磁盘然后清空<code>translog</code>。<strong>简而言之，写数据都写到磁盘里了，搜索从磁盘里搜索才是查询性能的瓶颈所在</strong></p></blockquote><ul><li>尽可能给<code>filesystem cache</code>分配更多内存，最佳情况是大于ES所需要搜索的数据大小，可以保证容纳所有索引数据，搜索全部走内存的话性能非常高</li><li>硬件配置的提升的有限度的，可以考虑减少存储的索引规模，只存储需要搜索的索引，将<code>id</code>、<code>name</code>、<code>age</code>等字段存入ES，将其他数据存在<code>HBase</code>等适合存放大规模在线数据的数据库，从ES中查询到关键字段再去Hbase中查完整的数据</li></ul><h3 id="数据冷热分离"><a href="#数据冷热分离" class="headerlink" title="数据冷热分离"></a>数据冷热分离</h3><blockquote><p>无法完全保证<code>Filesystem Cache</code>大于数据量时，考虑分离热点数据和冷数据</p></blockquote><ul><li>间隔一段时间自动搜索热点数据，保证热点数据始终在<code>Filesystem Cache</code>里，其实就是做一个预热的子系统</li><li>拆分冷热数据构建不同的索引，防止热数据被冷数据冲刷掉，其实就是做类似于Mysql的分库，以牺牲冷数据的查询性能来提升热数据的查询性能</li></ul><h3 id="分页查询优化"><a href="#分页查询优化" class="headerlink" title="分页查询优化"></a>分页查询优化</h3><ul><li>尽量避免复杂的操作，例如<code>join</code>查询</li><li>和Mysql类似，分页查询越后面越慢，深度分页性能很差，也就是需要先做一个过滤，那么过滤用什么方式？<ul><li>使用<code>scroll api</code>进行深度分页，但是作者不再推荐使用这个，<code>scroll</code>将一次性给出所有数据的快照谢谢，然后通过<code>scroll_id</code>移动查询，后续的查询基本都将是毫秒级，但不能实现跳转，同时数据实时性存在缺陷</li><li>使用<code>search_after</code>利用前一页的检索结果来帮助检索下一页，同样这也无法实现随意跳转，官方推荐使用 <code>_uid</code>作为全局唯一值，其实使用业务层的<code>id</code>也可以，在模型设计时需要考虑预留一个用于sort的字段</li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;📌&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png?v8&quot; aria-hidden=&quot;true&quot; onerror=&quot;this.parent.classList.add(&#39;github-emoji-fallback&#39;)&quot;&gt;&lt;/span&gt;&lt;strong&gt;Elasticsearch&lt;/strong&gt;使原生的&lt;strong&gt;Lucene&lt;/strong&gt;查询更加简单，同时提供了更多的功能，且可以通过&lt;strong&gt;RESTful API&lt;/strong&gt;访问。&lt;strong&gt;Elasticsearch&lt;/strong&gt;是一个分布式的搜索引擎，提供了一个分布式多用户能力的全文搜索引擎，基于&lt;strong&gt;RESTful&lt;/strong&gt;的&lt;strong&gt;web&lt;/strong&gt;接口。此外也可以扩展到几乎无限数量的服务器，以及能力去处理&lt;strong&gt;PB&lt;/strong&gt;级别的数据。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Summary" scheme="https://boom1999.github.io/categories/Summary/"/>
    
    
    <category term="ElasticSearch" scheme="https://boom1999.github.io/tags/ElasticSearch/"/>
    
  </entry>
  
  <entry>
    <title>Lucene search engine</title>
    <link href="https://boom1999.github.io/2024/08/10/Lucene%20search%20engine/"/>
    <id>https://boom1999.github.io/2024/08/10/Lucene%20search%20engine/</id>
    <published>2024-08-10T00:00:00.000Z</published>
    <updated>2024-08-10T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><span class="github-emoji"><span>📌</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><strong>Elasticsearch</strong>是一个基于<strong>Lucene</strong>的搜索引擎，提供了一个分布式多用户能力的全文搜索引擎，基于<code>RESTful API</code>接口，解决了原生<code>Lucene</code>使用上的缺陷。为了更好的理解<code>Elasticsearch</code>，先对<code>Lucene</code>进行了解。</p></blockquote><span id="more"></span><h2 id="books-全文检索"><a href="#books-全文检索" class="headerlink" title=":books: 全文检索"></a><span class="github-emoji"><span>📚</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4da.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 全文检索</h2><ul><li><p>结构化数据，具有固定格式或有限长度的数据，如数据库表中的字段和元数据。</p><ul><li>数据库用<code>SQL</code>语句搜索；元数据用类型、属性、标签等搜索。</li></ul></li><li><p>非结构化数据，不定长或无固定格式的数据，如邮件、Word 文档、PDF 文档等，又称<strong>全文数据</strong>。</p><ul><li><strong>顺序扫描法(Serial Scanning)</strong>，对每个文档从头到尾扫描，非结构化数据在数据量大时效率低下，不适合全文检索。</li><li><strong>全文检索(Full-text Search)</strong>，把非结构化数据转换为结构化数据，再用结构化数据的检索方法。首先将要查询的目标数据中的词提取出来，组成索引，通过查询索引达到搜索目标数据的目的。</li></ul></li></ul><p>StringField 和 TextField 是 Apache Lucene 中用于存储和索引文档字段的两种不同类型。  </p><ul><li>StringField：用于存储不需要进行全文搜索的字段。它不会被分词器处理，适用于精确匹配查询。例如，ID、日期、分类等字段。</li><li>TextField：用于存储需要进行全文搜索的字段。它会被分词器处理，适用于需要进行全文搜索的文本内容。例如，文章内容、描述等字段。<br>示例代码：</li></ul><h2 id="mag-right-Lucene基本原理"><a href="#mag-right-Lucene基本原理" class="headerlink" title=":mag_right:Lucene基本原理"></a><span class="github-emoji"><span>🔎</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f50e.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><code>Lucene</code>基本原理</h2><h3 id="倒排索引-Inverted-index"><a href="#倒排索引-Inverted-index" class="headerlink" title="倒排索引(Inverted index)"></a>倒排索引(Inverted index)</h3><blockquote><p>快速查询某个词在文档中的位置，将文档集合中的每个词都映射到出现在该次的文档列表，而不是将文档映射到词的列表</p></blockquote><ol><li>文档分词：将文档进行分词，得到词项列表，这里可以还有大小写转化、去停用词等操作。</li><li>构建索引表：将词项列表构建倒排索引表，记录每个词项出现在哪些文档中。遍历所有文档，对每个词将其映射到文档列表，可以用哈希表、树等数据结构。</li><li>优化索引：对索引表进行优化，如压缩、排序、合并等操作。</li><li>查询处理：用户输入一个检索词时，对查询进行分词，得到查询词项列表，然后在索引表中查找每个词项对应的文档列表，最后对文档列表进行筛选、排序、交集、并集等操作，得到最终的查询结果。</li></ol><h3 id="段落索引-Segment-index"><a href="#段落索引-Segment-index" class="headerlink" title="段落索引(Segment index)"></a>段落索引(Segment index)</h3><blockquote><p>为了提高搜索效率，将索引分为多个段落，每个段落都是一个独立的索引单元，每个段落都有自己的倒排索引表。</p></blockquote><ol><li>分割文本：分词器的组件将文本分割成若干个段落，可以按照具体的需求来定义分割规则，例如空格、标点符号等。</li><li>建立词汇表：Lucene对词汇表进行排序等以提高搜索效率。</li><li>构建倒排索引：对每个段落构建倒排索引表，记录每个词项出现在哪些文档中。倒排索引的数据结构包括索引词项(Term)、文档编号(Document ID)、位置(Position)等。</li><li>搜索：用户输入一个检索词时，Lucene在词汇表中查找，并获取到包含该单词的段落列表，然后根据这些段落列表计算相关度得分，并按照相关度排序返回搜索结果。</li></ol><h3 id="文本预处理"><a href="#文本预处理" class="headerlink" title="文本预处理"></a>文本预处理</h3><blockquote><p>在构建索引之前，需要对文本进行预处理，包括分词、大小写转化、去停用词等操作。</p></blockquote><ol><li>小写转换(Lowercasing)：将文本转换为小写，避免大小写不一致导致的搜索问题。</li><li>去除停用词(Stopwords)：去除常用词，如“的”、“是”、“在”、“and”、“the”等，避免这些词对搜索结果的影响。</li><li>词根提取(Stemming)：将词汇还原为词根，如“running”还原为“run”。</li><li>同义词扩展(Synonyms)：将同义词映射到同一个词项，如“car”和“automobile”映射到同一个词项。</li></ol><h2 id="bulb-搜索算法"><a href="#bulb-搜索算法" class="headerlink" title=":bulb:搜索算法"></a><span class="github-emoji"><span>💡</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a1.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>搜索算法</h2><h3 id="BM25算法"><a href="#BM25算法" class="headerlink" title="BM25算法"></a>BM25算法</h3><blockquote><p>BM25算法是一种基于概率检索模型的搜索算法，它是一种基于词频和文档长度的搜索算法，适用于大型文本数据集的搜索，考虑了文档中各项词的权重、词频、文档长度等因素，根据<strong>文档和查询</strong>之间的关系来评估文档的相关性，并按照相关性进行排序。</p></blockquote><p>评分公式：<script type="math/tex">\text{score}(D, Q) = \sum_{i=1}^{n} \text{IDF}(q_i) \cdot \frac{f(q_i, D) \cdot (k_1 + 1)}{f(q_i, D) + k_1 \cdot (1 - b + b \cdot \frac{|D|}{\text{avgdl}})}</script></p><p>其中：$D$表示文档，$Q$表示查询，$n$表示查询中的词项数量，$q_i$表示查询中的第$i$个词项，$f(q_i, D)$表示词项$q_i$在文档$D$中的词频，$k_1$和$b$是调节参数，$avgdl$表示文档集合的平均长度。</p><h3 id="TF-IDF算法-Term-Frequency-Inverse-Document-Frequency"><a href="#TF-IDF算法-Term-Frequency-Inverse-Document-Frequency" class="headerlink" title="TF-IDF算法(Term Frequency-Inverse Document Frequency)"></a>TF-IDF算法(Term Frequency-Inverse Document Frequency)</h3><blockquote><p>TF-IDF算法是一种用于评估一个词对于一个文件集或一个语料库中某个文件的重要程度的统计方法，基本思想是如果某个词在一篇文章中出现的频率高，并且在其他文章中出现的频率低，则认为这个词具有很好的区分能力，是这篇文章的关键词。</p></blockquote><ul><li>TF(Term Frequency)：词频，表示某个词在文档中出现的频率，计算公式为<script type="math/tex">\text{TF}(t, d) = \frac{f(t, d)}{\sum_{t' \in d} f(t', d)}</script></li><li>IDF(Inverse Document Frequency)：逆文档频率，表示某个词在文档集合中的区分能力，计算公式为<script type="math/tex">\text{IDF}(t, D) = \log \frac{N}{\text{DF}(t, D)}</script></li><li>TF-IDF：综合考虑词频和逆文档频率，计算公式为<script type="math/tex">\text{TF-IDF}(t, d, D) = \text{TF}(t, d) \cdot \text{IDF}(t, D)</script></li></ul><h3 id="空间向量模型-Vector-Space-Model"><a href="#空间向量模型-Vector-Space-Model" class="headerlink" title="空间向量模型(Vector Space Model)"></a>空间向量模型(Vector Space Model)</h3><blockquote><p>空间向量模型是一种基于向量空间的搜索算法，将文档和查询表示为向量，通过计算向量之间的相似度来评估文档的相关性。</p></blockquote><h4 id="余弦相似度-Cosine-Similarity"><a href="#余弦相似度-Cosine-Similarity" class="headerlink" title="余弦相似度(Cosine Similarity)"></a>余弦相似度(Cosine Similarity)</h4><ul><li>基于向量的夹角来衡量文档和查询的相似度，计算文档向量和查询向量的内积除以两个向量的模长的乘积，计算公式为<script type="math/tex">\text{Cosine Similarity}(D, Q) = \frac{D \cdot Q}{\|D\| \cdot \|Q\|}</script>，其中$D$表示文档向量，$Q$表示查询向量，取值范围为$[-1, 1]$，值越大表示相似度越高。</li></ul><h4 id="Jaccard相似度-Jaccard-Similarity"><a href="#Jaccard相似度-Jaccard-Similarity" class="headerlink" title="Jaccard相似度(Jaccard Similarity)"></a>Jaccard相似度(Jaccard Similarity)</h4><ul><li>基于向量的交集和并集来衡量文档和查询的相似度，计算文档向量和查询向量的交集除以两个向量的并集，计算公式为<script type="math/tex">\text{Jaccard Similarity}(D, Q) = \frac{|D \cap Q|}{|D \cup Q|}</script>，取值范围为$[0, 1]$，值越大表示相似度越高。</li></ul><h2 id="computer-Coding"><a href="#computer-Coding" class="headerlink" title=":computer:Coding"></a><span class="github-emoji"><span>💻</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bb.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>Coding</h2><h3 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h3><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- lucene核心包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.lucene<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lucene-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>${lunece.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- lucene查询解析包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.lucene<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lucene-queryparser<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>${lunece.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- lucene分词器包 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.lucene<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lucene-analyzers-common<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>${lunece.version}<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- test --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.8.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="从文件构建索引和检索"><a href="#从文件构建索引和检索" class="headerlink" title="从文件构建索引和检索"></a>从文件构建索引和检索</h3><h4 id="文档"><a href="#文档" class="headerlink" title="文档"></a>文档</h4><ul><li>在资源目录下创建一个<code>data</code>目录，用于存放文档数据，这里用了雅思的三段话作为示例数据$1.txt$，$2.txt$，$3.txt$。</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p ~/JavaProjects/luceneDemo/src/main/resources/data</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Many procedures are available for obtaining data about a language. They range from a carefully planned, intensive field investigation in a foreign country to a casual introspection about one’s mother tongue carried out in an armchair at home."</span> &gt; ~/JavaProjects/luceneDemo/src/main/resources/data/1.txt</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"In all cases, someone has to act as a source of language data – an informant. Informants are (ideally) native speakers of a language, who provide utterances for analysis and other kinds of information about the language (e.g. translations, comments about correctness, or judgements on usage). Often, when studying their mother tongue, linguists act as their own informants, judging the ambiguity, acceptability, or other properties of utterances against their own intuitions. The convenience of this approach makes it widely used, and it is considered the norm in the generative approach to linguistics. But a linguist’s personal judgements are often uncertain, or disagree with the judgements of other linguists, at which point recourse is needed to more objective methods of enquiry, using non-linguists as informants. The latter procedure is unavoidable when working on foreign languages, or child speech."</span> &gt; ~/JavaProjects/luceneDemo/src/main/resources/data/2.txt</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Many factors must be considered when selecting informants – whether one is working with single speakers (a common situation when languages have not been described before), two people interacting, small groups or large-scale samples. Age, sex, social background and other aspects of identity are important, as these factors are known to influence the kind of language used. The topic of conversation and the characteristics of the social setting (e.g. the level of formality) are also highly relevant, as are the personal qualities of the informants (e.g. their fluency and consistency). For larger studies, scrupulous attention has been paid to the sampling theory employed, and in all cases, decisions have to be made about the best investigative techniques to use."</span> &gt; ~/JavaProjects/luceneDemo/src/main/resources/data/3.txt</span><br></pre></td></tr></tbody></table></figure><h4 id="构建索引"><a href="#构建索引" class="headerlink" title="构建索引"></a>构建索引</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.lucene.analysis.standard.StandardAnalyzer;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.document.Document;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.document.TextField;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.index.IndexWriter;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.index.IndexWriterConfig;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.store.Directory;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.store.FSDirectory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Indexer</span> {</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> IndexWriter writer;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Indexer</span><span class="params">(String indexDir)</span> <span class="keyword">throws</span> IOException {</span><br><span class="line">        <span class="type">Directory</span> <span class="variable">dir</span> <span class="operator">=</span> FSDirectory.open(Paths.get(indexDir));</span><br><span class="line">        <span class="comment">// StandardAnalyzer标准分词器，将忽略is，a，the等单词</span></span><br><span class="line">        <span class="type">IndexWriterConfig</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IndexWriterConfig</span>(<span class="keyword">new</span> <span class="title class_">StandardAnalyzer</span>());</span><br><span class="line">        <span class="comment">// 实例化写索引对象</span></span><br><span class="line">        writer = <span class="keyword">new</span> <span class="title class_">IndexWriter</span>(dir, config);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 关闭索引写入</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">close</span><span class="params">()</span> <span class="keyword">throws</span> IOException {</span><br><span class="line">        writer.close();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 索引dataDir目录下的所有文件</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">indexALl</span><span class="params">(String dataDir)</span> <span class="keyword">throws</span> Exception {</span><br><span class="line">        File[] files = <span class="keyword">new</span> <span class="title class_">File</span>(dataDir).listFiles();</span><br><span class="line">        <span class="keyword">assert</span> files != <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">for</span> (File file : files) {</span><br><span class="line">            indexFile(file);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> writer.numDocs();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 索引单个文件</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">indexFile</span><span class="params">(File file)</span> <span class="keyword">throws</span> Exception {</span><br><span class="line">        System.out.println(<span class="string">"Indexing "</span> + file.getCanonicalPath());</span><br><span class="line">        <span class="type">Document</span> <span class="variable">doc</span> <span class="operator">=</span> getDocument(file);</span><br><span class="line">        <span class="comment">// 将文档写入索引</span></span><br><span class="line">        writer.addDocument(doc);</span><br><span class="line">        writer.commit();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取某个文件的文档</span></span><br><span class="line">    <span class="keyword">private</span> Document <span class="title function_">getDocument</span><span class="params">(File file)</span> <span class="keyword">throws</span> Exception {</span><br><span class="line">        <span class="type">Document</span> <span class="variable">doc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Document</span>();</span><br><span class="line">        doc.add(<span class="keyword">new</span> <span class="title class_">TextField</span>(<span class="string">"contents"</span>, <span class="keyword">new</span> <span class="title class_">FileReader</span>(file)));</span><br><span class="line">        doc.add(<span class="keyword">new</span> <span class="title class_">TextField</span>(<span class="string">"fileName"</span>, file.getName(), TextField.Store.YES));</span><br><span class="line">        doc.add(<span class="keyword">new</span> <span class="title class_">TextField</span>(<span class="string">"fullPath"</span>, file.getCanonicalPath(), TextField.Store.YES));</span><br><span class="line">        <span class="keyword">return</span> doc;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">String</span> <span class="variable">indexDir</span> <span class="operator">=</span> <span class="string">"~/JavaProjects/luceneDemo/src/main/resources/Index"</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">dataDir</span> <span class="operator">=</span> <span class="string">"~/JavaProjects/luceneDemo/src/main/resources/data"</span>;</span><br><span class="line">        <span class="type">Indexer</span> <span class="variable">indexer</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">indexNum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">long</span> <span class="variable">startTime</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            indexer = <span class="keyword">new</span> <span class="title class_">Indexer</span>(indexDir);</span><br><span class="line">            indexNum = indexer.indexALl(dataDir);</span><br><span class="line">        } <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        } <span class="keyword">finally</span> {</span><br><span class="line">            <span class="keyword">try</span> {</span><br><span class="line">                <span class="keyword">assert</span> indexer != <span class="literal">null</span>;</span><br><span class="line">                indexer.close();</span><br><span class="line">            } <span class="keyword">catch</span> (IOException e) {</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="type">long</span> <span class="variable">endTime</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">"Index "</span> + indexNum + <span class="string">" files, cost "</span> + (endTime - startTime) + <span class="string">" ms"</span>);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="检索"><a href="#检索" class="headerlink" title="检索"></a>检索</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.lucene.analysis.standard.StandardAnalyzer;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.document.Document;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.index.DirectoryReader;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.index.IndexReader;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.queryparser.classic.QueryParser;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.search.IndexSearcher;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.search.Query;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.search.ScoreDoc;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.search.TopDocs;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.store.Directory;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.store.FSDirectory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Searcher</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">search</span><span class="params">(String indexDir, String q)</span> <span class="keyword">throws</span> Exception {</span><br><span class="line">        <span class="comment">// 索引所在路径</span></span><br><span class="line">        <span class="type">Directory</span> <span class="variable">dir</span> <span class="operator">=</span> FSDirectory.open(Paths.get(indexDir));</span><br><span class="line">        <span class="type">IndexReader</span> <span class="variable">reader</span> <span class="operator">=</span> DirectoryReader.open(dir);</span><br><span class="line">        <span class="type">IndexSearcher</span> <span class="variable">searcher</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IndexSearcher</span>(reader);</span><br><span class="line">        <span class="comment">// 创建查询解析器</span></span><br><span class="line">        <span class="type">QueryParser</span> <span class="variable">parser</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">QueryParser</span>(<span class="string">"contents"</span>, <span class="keyword">new</span> <span class="title class_">StandardAnalyzer</span>());</span><br><span class="line">        <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> parser.parse(q);</span><br><span class="line"></span><br><span class="line">        <span class="type">long</span> <span class="variable">start</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">        <span class="comment">// 查询并记录前十条数据</span></span><br><span class="line">        <span class="type">TopDocs</span> <span class="variable">hits</span> <span class="operator">=</span> searcher.search(query, <span class="number">10</span>);</span><br><span class="line">        <span class="type">long</span> <span class="variable">end</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">"Found "</span> + hits.totalHits + <span class="string">" document(s) (in "</span> + (end - start) + <span class="string">" milliseconds) that matched query '"</span> + q + <span class="string">"':"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 从结果中取数据</span></span><br><span class="line">        <span class="keyword">for</span> (ScoreDoc scoreDoc : hits.scoreDocs) {</span><br><span class="line">            <span class="comment">// scoreDoc.doc即docID，根据这个docID来获取文档</span></span><br><span class="line">            <span class="type">Document</span> <span class="variable">doc</span> <span class="operator">=</span> searcher.doc(scoreDoc.doc);</span><br><span class="line">            System.out.println(doc.get(<span class="string">"fullPath"</span>));</span><br><span class="line">        }</span><br><span class="line">        reader.close();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">String</span> <span class="variable">indexDir</span> <span class="operator">=</span> <span class="string">"~/JavaProjects/luceneDemo/src/main/resources/Index"</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">q</span> <span class="operator">=</span> <span class="string">"speakers"</span>;</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            search(indexDir, q);</span><br><span class="line">        } <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="增删改查测试"><a href="#增删改查测试" class="headerlink" title="增删改查测试"></a>增删改查测试</h4><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.lucene.analysis.Analyzer;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.analysis.standard.StandardAnalyzer;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.document.Document;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.document.StringField;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.document.TextField;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.index.*;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.queryparser.classic.QueryParser;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.search.*;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.store.Directory;</span><br><span class="line"><span class="keyword">import</span> org.apache.lucene.store.FSDirectory;</span><br><span class="line"><span class="keyword">import</span> org.junit.jupiter.api.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.file.Paths;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IndexingTest</span> {</span><br><span class="line">    <span class="keyword">private</span> Directory dir;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String[] ids = {<span class="string">"1"</span>, <span class="string">"2"</span>, <span class="string">"3"</span>};</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String[] tools = {<span class="string">"Lucene"</span>, <span class="string">"ElasticSearch"</span>, <span class="string">"Solr"</span>};</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String[] positions = {<span class="string">"Java Engineer"</span>, <span class="string">"DevOps Engineer"</span>, <span class="string">"Data Engineer"</span>};</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String[] descs = {</span><br><span class="line">            <span class="string">"Lucene is a full-featured text search engine library written entirely in Java."</span>,</span><br><span class="line">            <span class="string">"ElasticSearch is a distributed, RESTful search and analytics engine capable of solving a growing number of use cases."</span>,</span><br><span class="line">            <span class="string">"Solr is the popular, blazing-fast, open source enterprise search platform built on Apache Lucene."</span></span><br><span class="line">    };</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testIndexAdd</span><span class="params">()</span> <span class="keyword">throws</span> Exception {</span><br><span class="line">        <span class="type">IndexWriter</span> <span class="variable">writer</span> <span class="operator">=</span> getWriter();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; ids.length; i++) {</span><br><span class="line">            <span class="type">Document</span> <span class="variable">doc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Document</span>();</span><br><span class="line">            doc.add(<span class="keyword">new</span> <span class="title class_">StringField</span>(<span class="string">"id"</span>, ids[i], StringField.Store.YES));</span><br><span class="line">            doc.add(<span class="keyword">new</span> <span class="title class_">StringField</span>(<span class="string">"tool"</span>, tools[i], StringField.Store.YES));</span><br><span class="line">            doc.add(<span class="keyword">new</span> <span class="title class_">TextField</span>(<span class="string">"position"</span>, positions[i], TextField.Store.YES));</span><br><span class="line">            <span class="comment">// TextField field = new TextField("position", poitions[i], StringField.Store.YES);</span></span><br><span class="line">            <span class="comment">// if("DevOps Engineer".equals(positions[i])){</span></span><br><span class="line">            <span class="comment">//     field.setBoost(1.5f);</span></span><br><span class="line">            <span class="comment">// }</span></span><br><span class="line">            <span class="comment">// doc.add(field);</span></span><br><span class="line">            doc.add(<span class="keyword">new</span> <span class="title class_">TextField</span>(<span class="string">"desc"</span>, descs[i], StringField.Store.YES));</span><br><span class="line">            writer.addDocument(doc);</span><br><span class="line">        }</span><br><span class="line">        writer.commit();</span><br><span class="line">        writer.close();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> IndexWriter <span class="title function_">getWriter</span><span class="params">()</span> <span class="keyword">throws</span> Exception {</span><br><span class="line">        <span class="type">String</span> <span class="variable">indexDir</span> <span class="operator">=</span> <span class="string">"~/JavaProjects/luceneDemo/src/main/resources/testIndex"</span>;</span><br><span class="line">        dir = FSDirectory.open(Paths.get(indexDir));</span><br><span class="line">        <span class="type">Analyzer</span> <span class="variable">analyzer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StandardAnalyzer</span>();</span><br><span class="line">        <span class="type">IndexWriterConfig</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IndexWriterConfig</span>(analyzer);</span><br><span class="line">        <span class="type">IndexWriter</span> <span class="variable">writer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IndexWriter</span>(dir, config);</span><br><span class="line">        <span class="keyword">return</span> writer;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testIndexWriterNum</span><span class="params">()</span> <span class="keyword">throws</span> Exception {</span><br><span class="line">        <span class="type">IndexWriter</span> <span class="variable">writer</span> <span class="operator">=</span> getWriter();</span><br><span class="line">        System.out.println(<span class="string">"Total number of documents in this testIndexAdd: "</span> + writer.numDocs());</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDeleteBeforeMerge</span><span class="params">()</span> <span class="keyword">throws</span> Exception {</span><br><span class="line">        <span class="type">IndexWriter</span> <span class="variable">writer</span> <span class="operator">=</span> getWriter();</span><br><span class="line">        System.out.println(<span class="string">"Total number of documents in this testIndexAdd before delete: "</span> + writer.numDocs());</span><br><span class="line">        writer.deleteDocuments(<span class="keyword">new</span> <span class="title class_">Term</span>(<span class="string">"id"</span>, <span class="string">"1"</span>));</span><br><span class="line">        writer.commit();</span><br><span class="line">        System.out.println(<span class="string">"Max number of documents in this testIndexAdd after delete: "</span> + writer.maxDoc());</span><br><span class="line">        System.out.println(<span class="string">"Total number of documents in this testIndexAdd after delete: "</span> + writer.numDocs());</span><br><span class="line">        writer.close();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testDeleteAfterMerge</span><span class="params">()</span> <span class="keyword">throws</span> Exception {</span><br><span class="line">        <span class="type">IndexWriter</span> <span class="variable">writer</span> <span class="operator">=</span> getWriter();</span><br><span class="line">        System.out.println(<span class="string">"Total number of documents in this testIndexAdd before delete: "</span> + writer.numDocs());</span><br><span class="line">        writer.deleteDocuments(<span class="keyword">new</span> <span class="title class_">Term</span>(<span class="string">"id"</span>, <span class="string">"1"</span>));</span><br><span class="line">        writer.forceMergeDeletes();</span><br><span class="line">        writer.commit();</span><br><span class="line">        System.out.println(<span class="string">"Max number of documents in this testIndexAdd after delete: "</span> + writer.maxDoc());</span><br><span class="line">        System.out.println(<span class="string">"Total number of documents in this testIndexAdd after delete: "</span> + writer.numDocs());</span><br><span class="line">        writer.close();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testUpdate</span><span class="params">()</span> <span class="keyword">throws</span> Exception {</span><br><span class="line">        <span class="type">IndexWriter</span> <span class="variable">writer</span> <span class="operator">=</span> getWriter();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// new a document</span></span><br><span class="line">        <span class="type">Document</span> <span class="variable">doc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Document</span>();</span><br><span class="line">        doc.add(<span class="keyword">new</span> <span class="title class_">StringField</span>(<span class="string">"id"</span>, <span class="string">"1"</span>, StringField.Store.YES));</span><br><span class="line">        doc.add(<span class="keyword">new</span> <span class="title class_">StringField</span>(<span class="string">"tool"</span>, <span class="string">"Lucene"</span>, StringField.Store.YES));</span><br><span class="line">        doc.add(<span class="keyword">new</span> <span class="title class_">TextField</span>(<span class="string">"position"</span>, <span class="string">"Java Engineer"</span>, StringField.Store.YES));</span><br><span class="line">        doc.add(<span class="keyword">new</span> <span class="title class_">TextField</span>(<span class="string">"desc"</span>, <span class="string">"Lucene is a full-text search engine library"</span>, StringField.Store.YES));</span><br><span class="line">        writer.updateDocument(<span class="keyword">new</span> <span class="title class_">Term</span>(<span class="string">"id"</span>, <span class="string">"1"</span>), doc);</span><br><span class="line"></span><br><span class="line">        writer.commit();</span><br><span class="line">        writer.close();</span><br><span class="line">        System.out.println(doc.getField(<span class="string">"desc"</span>));</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testIndexReader</span><span class="params">()</span> <span class="keyword">throws</span> Exception {</span><br><span class="line">        <span class="type">String</span> <span class="variable">indexDir</span> <span class="operator">=</span> <span class="string">"~/JavaProjects/luceneDemo/src/main/resources/testIndex"</span>;</span><br><span class="line">        dir = FSDirectory.open(Paths.get(indexDir));</span><br><span class="line">        <span class="type">IndexReader</span> <span class="variable">reader</span> <span class="operator">=</span> DirectoryReader.open(dir);</span><br><span class="line">        System.out.println(<span class="string">"Total number of documents in this testIndexAdd: "</span> + reader.numDocs());</span><br><span class="line">        System.out.println(<span class="string">"Total number of deleted documents in this testIndexAdd: "</span> + reader.numDeletedDocs());</span><br><span class="line">        System.out.println(<span class="string">"Total number of max docs in this testIndexAdd: "</span> + reader.maxDoc());</span><br><span class="line">        reader.close();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">testIndexSearch</span><span class="params">()</span> <span class="keyword">throws</span> Exception {</span><br><span class="line">        <span class="type">String</span> <span class="variable">indexDir</span> <span class="operator">=</span> <span class="string">"~/JavaProjects/luceneDemo/src/main/resources/testIndex"</span>;</span><br><span class="line">        dir = FSDirectory.open(Paths.get(indexDir));</span><br><span class="line">        <span class="type">IndexReader</span> <span class="variable">reader</span> <span class="operator">=</span> DirectoryReader.open(dir);</span><br><span class="line">        <span class="type">IndexSearcher</span> <span class="variable">searcher</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">IndexSearcher</span>(reader);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Query</span></span><br><span class="line">        <span class="type">QueryParser</span> <span class="variable">parse</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">QueryParser</span>(<span class="string">"desc"</span>, <span class="keyword">new</span> <span class="title class_">StandardAnalyzer</span>());</span><br><span class="line">        <span class="type">Query</span> <span class="variable">query</span> <span class="operator">=</span> parse.parse(<span class="string">"search"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 权重搜索排序</span></span><br><span class="line">        <span class="comment">// 创建TermQuery</span></span><br><span class="line">        <span class="type">TermQuery</span> <span class="variable">termQuery</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TermQuery</span>(<span class="keyword">new</span> <span class="title class_">Term</span>(<span class="string">"position"</span>, <span class="string">"DevOps"</span>.toLowerCase()));</span><br><span class="line">        <span class="comment">// 提升TermQuery的权重</span></span><br><span class="line">        <span class="type">BoostQuery</span> <span class="variable">boostQuery</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BoostQuery</span>(termQuery, <span class="number">1.5f</span>);</span><br><span class="line">        <span class="comment">// 创建BooleanQuery</span></span><br><span class="line">        BooleanQuery.<span class="type">Builder</span> <span class="variable">booleanQuery</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BooleanQuery</span>.Builder();</span><br><span class="line">        booleanQuery.add(query, BooleanClause.Occur.MUST);</span><br><span class="line">        booleanQuery.add(boostQuery, BooleanClause.Occur.SHOULD);</span><br><span class="line"></span><br><span class="line">        <span class="type">TopDocs</span> <span class="variable">hits</span> <span class="operator">=</span> searcher.search(booleanQuery.build(), <span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"Total number of hits: "</span> + hits.totalHits);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (ScoreDoc scoreDoc : hits.scoreDocs) {</span><br><span class="line">            <span class="type">Document</span> <span class="variable">doc</span> <span class="operator">=</span> searcher.doc(scoreDoc.doc);</span><br><span class="line">            System.out.println(doc.get(<span class="string">"id"</span>));</span><br><span class="line">            System.out.println(doc.get(<span class="string">"tool"</span>));</span><br><span class="line">            System.out.println(doc.get(<span class="string">"position"</span>));</span><br><span class="line">            System.out.println(doc.get(<span class="string">"desc"</span>));</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        reader.close();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h4 id="mag-Attention"><a href="#mag-Attention" class="headerlink" title=":mag:Attention"></a><span class="github-emoji"><span>🔍</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f50d.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>Attention</h4><ul><li><p><code>TextField</code>和<code>StringField</code>的区别</p><ul><li><code>StringField</code>：不会被分词器处理，适用于精确匹配查询，如ID、日期、分类等字段，<code>StringField.Store.YES</code>表示存储字段值。</li><li><p><code>TextField</code>：会被分词器处理，适用于需要进行全文搜索的文本内容，如文章内容、描述等字段，<code>TextField.Store.YES</code>表示存储字段值并进行分词处理。</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用StringField存储ID字段</span></span><br><span class="line">doc.add(<span class="keyword">new</span> <span class="title class_">StringField</span>(<span class="string">"id"</span>, <span class="string">"1"</span>, StringField.Store.YES));</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用TextField存储描述字段</span></span><br><span class="line">doc.add(<span class="keyword">new</span> <span class="title class_">TextField</span>(<span class="string">"desc"</span>, <span class="string">"Lucene is a full-featured text search engine library written entirely in Java."</span>, TextField.Store.YES));</span><br></pre></td></tr></tbody></table></figure></li></ul></li><li><p><code>IndexWriter</code>的<code>commit</code>和<code>close</code>方法</p><ul><li><code>commit</code>：提交索引，将内存中的索引写入磁盘，保证索引的一致性。</li><li><code>close</code>：关闭索引写入器，释放资源。</li></ul></li><li><p><code>TermQuery</code>中的文本可以是大写也可以是小写，但必须与索引中的文本完全匹配。因为<code>TermQuery</code>不会对查询文本进行分析或分词处理，所以如果索引中的文本是小写，那么查询文本也必须是小写。如果使用了<code>StandardAnalyzer</code>或其他分词器在索引时将文本转换为小写，那么在查询时也需要将文本转换为小写以确保匹配。可以使用<code>LowerCaseFilter</code>或<code>LowerCaseTokenizer</code>来确保查询文本是小写的。</p>  <figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建TermQuery并将文本转换为小写</span></span><br><span class="line"><span class="type">TermQuery</span> <span class="variable">termQuery</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TermQuery</span>(<span class="keyword">new</span> <span class="title class_">Term</span>(<span class="string">"position"</span>, <span class="string">"DevOps"</span>.toLowerCase()));</span><br></pre></td></tr></tbody></table></figure></li><li><p><code>TermQuery</code>不会进行分词处理，只会进行精确匹配查询，所以查询文本必须与索引中的文本完全匹配。如果需要查询包含多个词的字段，可以使用<code>PhraseQuery</code>或<code>BooleanQuery</code>。</p>  <figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用PhraseQuery查询包含多个词的字段</span></span><br><span class="line"><span class="type">PhraseQuery</span> <span class="variable">phraseQuery</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PhraseQuery</span>.Builder()</span><br><span class="line">    .add(<span class="keyword">new</span> <span class="title class_">Term</span>(<span class="string">"position"</span>, <span class="string">"DevOps"</span>))</span><br><span class="line">    .add(<span class="keyword">new</span> <span class="title class_">Term</span>(<span class="string">"position"</span>, <span class="string">"Engineer"</span>))</span><br><span class="line">    .build();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用BooleanQuery查询包含多个词的字段</span></span><br><span class="line"><span class="type">BooleanQuery</span> <span class="variable">booleanQuery</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BooleanQuery</span>.Builder()</span><br><span class="line">    .add(<span class="keyword">new</span> <span class="title class_">TermQuery</span>(<span class="keyword">new</span> <span class="title class_">Term</span>(<span class="string">"position"</span>, <span class="string">"DevOps"</span>)), BooleanClause.Occur.MUST)</span><br><span class="line">    .add(<span class="keyword">new</span> <span class="title class_">TermQuery</span>(<span class="keyword">new</span> <span class="title class_">Term</span>(<span class="string">"position"</span>, <span class="string">"Engineer"</span>)), BooleanClause.Occur.MUST)</span><br><span class="line">    .build();</span><br></pre></td></tr></tbody></table></figure></li><li><p>$lunece.version&gt;7.0$已经不再支持<code>setBoost</code>方法</p><ul><li><a href="https://issues.apache.org/jira/browse/LUCENE-6819">LUCENE-6819</a>: Index-time boosts are not supported anymore. As a replacement, index-time scoring factors should be indexed into a doc value field and combined at query time using eg. FunctionScoreQuery</li></ul></li><li>同样不建议使用<code>Query.setBoost()</code>或者<code>Query.createWeight()</code><ul><li><a href="https://issues.apache.org/jira/browse/LUCENE-6590">LUCENE-6590</a>: Query.setBoost(), Query.getBoost() and Query.clone() are gone. In order to apply boosts, you now need to wrap queries in a BoostQuery.</li></ul></li><li><p>建议用<code>BoostQuery</code>封装来写权重查询，可以通过设置权重值来调整查询的相关性，值越大表示相关性越高。可以将<code>TermQuery</code>或<code>BooleanQuery</code>包装在<code>BoostQuery</code>中，然后将<code>BoostQuery</code>添加到<code>BooleanQuery</code>中。</p>  <figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建TermQuery</span></span><br><span class="line"><span class="type">TermQuery</span> <span class="variable">termQuery</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">TermQuery</span>(<span class="keyword">new</span> <span class="title class_">Term</span>(<span class="string">"position"</span>, <span class="string">"DevOps"</span>.toLowerCase()));</span><br><span class="line"><span class="comment">// 提升TermQuery的权重</span></span><br><span class="line"><span class="type">BoostQuery</span> <span class="variable">boostQuery</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BoostQuery</span>(termQuery, <span class="number">1.5f</span>);</span><br><span class="line"><span class="comment">// 创建BooleanQuery</span></span><br><span class="line">BooleanQuery.<span class="type">Builder</span> <span class="variable">booleanQuery</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BooleanQuery</span>.Builder();</span><br><span class="line">booleanQuery.add(query, BooleanClause.Occur.MUST);</span><br><span class="line">booleanQuery.add(boostQuery, BooleanClause.Occur.SHOULD);</span><br></pre></td></tr></tbody></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;📌&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png?v8&quot; aria-hidden=&quot;true&quot; onerror=&quot;this.parent.classList.add(&#39;github-emoji-fallback&#39;)&quot;&gt;&lt;/span&gt;&lt;strong&gt;Elasticsearch&lt;/strong&gt;是一个基于&lt;strong&gt;Lucene&lt;/strong&gt;的搜索引擎，提供了一个分布式多用户能力的全文搜索引擎，基于&lt;code&gt;RESTful API&lt;/code&gt;接口，解决了原生&lt;code&gt;Lucene&lt;/code&gt;使用上的缺陷。为了更好的理解&lt;code&gt;Elasticsearch&lt;/code&gt;，先对&lt;code&gt;Lucene&lt;/code&gt;进行了解。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Summary" scheme="https://boom1999.github.io/categories/Summary/"/>
    
    
    <category term="Lucene" scheme="https://boom1999.github.io/tags/Lucene/"/>
    
  </entry>
  
  <entry>
    <title>Python unzip split zip</title>
    <link href="https://boom1999.github.io/2024/08/01/Python%20unzip%20split%20zip/"/>
    <id>https://boom1999.github.io/2024/08/01/Python%20unzip%20split%20zip/</id>
    <published>2024-08-01T00:00:00.000Z</published>
    <updated>2024-08-01T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><span class="github-emoji"><span>📌</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>开发中遇到 <code>.0z1, .z02, ..., .zip</code>格式的分卷压缩包需要自动解压，尝试了<code>zipfile</code>和<code>py7zr</code>都不行，后来看了文档说暂时不持支持分卷解压，网络上多数的实现方案是建临时文件然后往里面追加写入，试了不太行，最后采用调命令行执行<code>7z</code>的命令。</p></blockquote><span id="more"></span><h2 id="books-直接上手"><a href="#books-直接上手" class="headerlink" title=":books: 直接上手"></a><span class="github-emoji"><span>📚</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4da.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 直接上手</h2><figure class="highlight python"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">unzip_split_zip</span>(<span class="params">part_zip_list: <span class="built_in">list</span></span>) -&gt; <span class="type">Union</span>[<span class="built_in">bool</span>, <span class="type">Any</span>]:</span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    Unzip the split zip files</span></span><br><span class="line"><span class="string">    :param part_zip_list: List of paths to the split zip files</span></span><br><span class="line"><span class="string">    :return: unzip success or not and the unzip file path</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Find the main zip file</span></span><br><span class="line">    main_zip_file = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> part_zip_list:</span><br><span class="line">        <span class="keyword">if</span> file.endswith(<span class="string">'.zip'</span>):</span><br><span class="line">            main_zip_file = file</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> main_zip_file <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    directory_path = os.path.dirname(main_zip_file)</span><br><span class="line">    pre_name = main_zip_file.rsplit(<span class="string">'.zip'</span>, <span class="number">1</span>)[<span class="number">0</span>]</span><br><span class="line">    command = [<span class="string">'7z'</span>, <span class="string">'x'</span>, main_zip_file, <span class="string">f'-o<span class="subst">{directory_path}</span>'</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># TODO Python暂无直接支持分卷解压的包，需要本地下载7Zip且添加到系统Path，这里调用命令行执行分卷解压</span></span><br><span class="line">        subprocess.run(command, check=<span class="literal">True</span>, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=<span class="literal">True</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span>, pre_name + <span class="string">'.app'</span></span><br><span class="line">    <span class="keyword">except</span> subprocess.CalledProcessError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f"An error occurred: <span class="subst">{e.stderr}</span>"</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f"An unexpected error occurred: <span class="subst">{e}</span>"</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;📌&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png?v8&quot; aria-hidden=&quot;true&quot; onerror=&quot;this.parent.classList.add(&#39;github-emoji-fallback&#39;)&quot;&gt;&lt;/span&gt;开发中遇到 &lt;code&gt;.0z1, .z02, ..., .zip&lt;/code&gt;格式的分卷压缩包需要自动解压，尝试了&lt;code&gt;zipfile&lt;/code&gt;和&lt;code&gt;py7zr&lt;/code&gt;都不行，后来看了文档说暂时不持支持分卷解压，网络上多数的实现方案是建临时文件然后往里面追加写入，试了不太行，最后采用调命令行执行&lt;code&gt;7z&lt;/code&gt;的命令。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Summary" scheme="https://boom1999.github.io/categories/Summary/"/>
    
    
    <category term="Python" scheme="https://boom1999.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>PKIX path building failed</title>
    <link href="https://boom1999.github.io/2024/07/11/PKIX%20path%20building%20failed/"/>
    <id>https://boom1999.github.io/2024/07/11/PKIX%20path%20building%20failed/</id>
    <published>2024-07-11T00:00:00.000Z</published>
    <updated>2024-07-11T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><span class="github-emoji"><span>📌</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>开发中遇到 <code>javax.net.ssl.SSLHandshakeException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target</code>，猜测应该是SSL证书的问题，找了一些解决方式，在这里做总结。</p></blockquote><span id="more"></span><h2 id="books-1-前言"><a href="#books-1-前言" class="headerlink" title=":books: 1. 前言"></a><span class="github-emoji"><span>📚</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4da.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 1. 前言</h2><p>调用HTTPS接口时遇到的SSL证书相关问题，这里是<code>PKIX path building failed</code>。</p><h2 id="satellite-2-出现的背景"><a href="#satellite-2-出现的背景" class="headerlink" title=":satellite: 2. 出现的背景"></a><span class="github-emoji"><span>📡</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4e1.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 2. 出现的背景</h2><blockquote><p>捕获抛出的<code>IOException</code>，检查发现是<code>HttpURLConnection.getResponseCode();</code>出现了问题，当然在其他连接处也可能产生，具体表现为<code>sun.security.validator.ValidatorException: PKIX path building failed</code>，也就是说无法找到请求目标的有效认证路径导致的。</p></blockquote><ul><li>JDK缺少某个目标Server的安全证书</li></ul><h2 id="mag-right-3-解决方案"><a href="#mag-right-3-解决方案" class="headerlink" title=":mag_right: 3. 解决方案"></a><span class="github-emoji"><span>🔎</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f50e.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 3. 解决方案</h2><blockquote><p>JDK在<code>lib/security/</code>目录下存放着<code>cacerts</code>文件，这个文件是JDK的证书库，产生上述错误的原因就是未能找到目标服务器的SSL证书，需要做的就是找到证书或者禁用证书验证，下面提供几种解决方案。</p></blockquote><h3 id="3-1-将目标服务器的证书导入到Java的信任库"><a href="#3-1-将目标服务器的证书导入到Java的信任库" class="headerlink" title="3.1 将目标服务器的证书导入到Java的信任库"></a>3.1 将目标服务器的证书导入到Java的信任库</h3><ul><li><p>获取目标服务器的SSL证书，可以通过浏览器地址栏左侧的图标进行下载（crt或者pem文件）（<em>不会的话可以自行Google</em>），也可以通过命令行导出。</p><p>  <code>openssl s_client -connect &lt;your-server&gt;:443 -showcerts</code></p></li><li><p>导入证书到Java的信任库(记得先备份原始的信任库<code>cacerts</code>)</p><p>  <code>keytool -import -alias test_https_certificate -file D:\***.crt -keystore D:\java**\lib\security\cacerts</code></p><ul><li>密钥库口令默认为<code>changeit</code></li></ul></li><li><p>也可以把<code>-keystore</code>后的路径改为自己新建的信任库路径，然后在SpringBoot的启动类中修改<code>javax.net.ssl.trustStore</code>和<code>javax.net.ssl.trustStorePassword</code>的值。</p>  <figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">System.setProperty(<span class="string">"javax.net.ssl.trustStore"</span>, <span class="string">"D:\\yourCacerts"</span>);</span><br><span class="line">System.setProperty(<span class="string">"javax.net.ssl.trustStorePassword"</span>, <span class="string">"changeit"</span>);</span><br></pre></td></tr></tbody></table></figure></li></ul><h3 id="3-2-使用自定义的信任管理器"><a href="#3-2-使用自定义的信任管理器" class="headerlink" title="3.2 使用自定义的信任管理器"></a>3.2 使用自定义的信任管理器</h3><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.net.ssl.*;</span><br><span class="line"><span class="keyword">import</span> java.security.cert.X509Certificate;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CustomTrustManager</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception {</span><br><span class="line">        TrustManager[] trustAllCerts = <span class="keyword">new</span> <span class="title class_">TrustManager</span>[]{</span><br><span class="line">            <span class="keyword">new</span> <span class="title class_">X509TrustManager</span>() {</span><br><span class="line">                <span class="keyword">public</span> X509Certificate[] getAcceptedIssuers() { <span class="keyword">return</span> <span class="literal">null</span>; }</span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">checkClientTrusted</span><span class="params">(X509Certificate[] certs, String authType)</span> { }</span><br><span class="line">                <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">checkServerTrusted</span><span class="params">(X509Certificate[] certs, String authType)</span> { }</span><br><span class="line">            }</span><br><span class="line">        };</span><br><span class="line"></span><br><span class="line">        <span class="type">SSLContext</span> <span class="variable">sc</span> <span class="operator">=</span> SSLContext.getInstance(<span class="string">"SSL"</span>);</span><br><span class="line">        sc.init(<span class="literal">null</span>, trustAllCerts, <span class="keyword">new</span> <span class="title class_">java</span>.security.SecureRandom());</span><br><span class="line">        HttpsURLConnection.setDefaultSSLSocketFactory(sc.getSocketFactory());</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Your code to open connection and interact with the server</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="3-3-禁用证书验证"><a href="#3-3-禁用证书验证" class="headerlink" title="3.3 禁用证书验证"></a>3.3 禁用证书验证</h3><ul><li><p>建议仅在测试环境下使用</p><p>  <code>HttpsURLConnection.setDefaultHostnameVerifier((hostname, session) -&gt; true);</code></p></li></ul><h2 id="4-常见问题"><a href="#4-常见问题" class="headerlink" title="4. 常见问题"></a>4. 常见问题</h2><ul><li>可以使用 <code>keytool -list -keystore D:\java**\lib\security\cacerts</code> 命令来查看已导入的证书</li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;📌&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png?v8&quot; aria-hidden=&quot;true&quot; onerror=&quot;this.parent.classList.add(&#39;github-emoji-fallback&#39;)&quot;&gt;&lt;/span&gt;开发中遇到 &lt;code&gt;javax.net.ssl.SSLHandshakeException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target&lt;/code&gt;，猜测应该是SSL证书的问题，找了一些解决方式，在这里做总结。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Summary" scheme="https://boom1999.github.io/categories/Summary/"/>
    
    
    <category term="SSL" scheme="https://boom1999.github.io/tags/SSL/"/>
    
    <category term="HTTPS" scheme="https://boom1999.github.io/tags/HTTPS/"/>
    
  </entry>
  
  <entry>
    <title>Keepalived浅入浅出</title>
    <link href="https://boom1999.github.io/2024/07/04/Keepalived%E6%B5%85%E5%85%A5%E6%B5%85%E5%87%BA/"/>
    <id>https://boom1999.github.io/2024/07/04/Keepalived%E6%B5%85%E5%85%A5%E6%B5%85%E5%87%BA/</id>
    <published>2024-07-04T00:00:00.000Z</published>
    <updated>2024-07-04T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Record some about <code>Keepalived</code> installation and usage skills.</p></blockquote><span id="more"></span><h2 id="books-1-前言"><a href="#books-1-前言" class="headerlink" title=":books: 1. 前言"></a><span class="github-emoji"><span>📚</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4da.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 1. 前言</h2><h3 id="1-1-出现的背景"><a href="#1-1-出现的背景" class="headerlink" title="1.1. 出现的背景"></a>1.1. 出现的背景</h3><blockquote><p>起初用来监控虚拟服务器集群(Linux Virtual Server, LVS)中各服务节点的状态，剔除故障节点，重新加入恢复的节点；后又加入虚拟路由冗余协议(Vritrual Router Redundancy Protocol, VRRP)，解决静态路由出现单点故障。主要实现服务器状态检测和故障隔离，高可用集群。</p></blockquote><ul><li><code>Client</code>向<code>Server</code>发送请求，随着服务量的增加，单机<code>Server</code>无法支持</li><li>使用分布式架构，用<code>Nginx</code>反向代理和多<code>Server</code>实现分布式架构和负载均衡</li><li>流量全部打在<code>Nginx</code>上，出现宕机，导致无法访问<code>Server</code></li><li>使用<code>Keepalived</code>+多<code>Nginx</code>实现分布式的<code>Nginx</code>，主从架构实现高可用</li></ul><h3 id="1-2-和HeartBeat比较"><a href="#1-2-和HeartBeat比较" class="headerlink" title="1.2. 和HeartBeat比较"></a>1.2. 和HeartBeat比较</h3><ul><li><code>Keepalived</code>轻量级的高可用解决方案，通过VRRP实现，模拟路由器的多机，当主机的下一跳路由出现故障，由另一台主机替代工作，部署和使用相对简单，配置文件单一，无管理功能；<code>HeartBeat</code>基于主机或网络服务的高可用，拆分为多个子项目，安装配置以及使用相对复杂，具有管理功能，用户服务的多机。</li><li><code>HeartBeat</code>除了走网络通信还可以用串口通信，可靠性更高。</li><li>LVS高可用建议用<code>Keepalived</code>，业务高可用建议用<code>HeartBeat</code>。</li></ul><h2 id="2-VRRP"><a href="#2-VRRP" class="headerlink" title="2. VRRP"></a>2. VRRP</h2><blockquote><p>多主机之间通过静态路由完成通信，一旦路由器故障，可以通过VRRP协议进行切换，保证网络的连通性。VRRP由两台或多台物理路由器设备虚拟成一个虚拟路由器，通过虚拟IP对外提供服务。</p></blockquote><ul><li>虚拟路由器：对外服务，拥有虚拟IP+MAC地址</li><li>主路由器(master)：虚拟路由器内部通常只有一台物理路由器对外提供服务，由选举算法产生master</li><li>备份路由器(backup)：除主路由器外的所有路由器，不对外提供服务，只接受主路由的通知，master挂掉之后由选举算法产生新的master</li></ul><h3 id="2-1-VRRP工作模式"><a href="#2-1-VRRP工作模式" class="headerlink" title="2.1. VRRP工作模式"></a>2.1. VRRP工作模式</h3><ul><li>工作状态<ul><li><code>Initialize</code>状态</li><li><code>Master</code>状态</li><li><code>Backup</code>状态</li></ul></li><li>选举机制<ul><li>默认抢占模式，一旦有优先级高的路由器加入，立即成为Master。原来的Master重新恢复后，会重新接管服务，多了一次不必要的VirtualIP切换。</li><li>非抢占模式下，只要Master不挂掉，优先级高的路由器只能等待。原来的Master重新恢复后，状态会变为Backup，不会接管服务。</li></ul></li></ul><h3 id="2-2-抢占模式"><a href="#2-2-抢占模式" class="headerlink" title="2.2 抢占模式"></a>2.2 抢占模式</h3><ul><li><code>Example 1</code>，只要优先级更高，就会获取Master，与状态无关<ul><li><code>Server1</code>为<code>Master</code>，<code>Server2</code>为<code>Master</code>或<code>Backup</code>，且<code>Server1</code>优先级更高，启动后<code>Server1</code>成为<code>Master</code>，<code>Server2</code>降级成为<code>Backup</code>；若此时<code>Server1</code>宕机，将由<code>Server2</code>接管服务，后续当<code>Server1</code>恢复后又变为<code>Master</code>，<code>Server2</code>降级成为<code>Backup</code>，属于抢占式。</li><li><code>Server1</code>为<code>Master</code>，<code>Server2</code>为<code>Backup</code>，但<code>Server1</code>优先级低，启动后<code>Server2</code>成为<code>Master</code>，<code>Server1</code>降级成为<code>Backup</code>；若此时<code>Server2</code>宕机，将由<code>Server1</code>接管服务，后续当<code>Server2</code>回复后又变为<code>Master</code>，<code>Server1</code>降级成为<code>Backup</code>，属于抢占式。</li></ul></li><li><code>Example 2</code>，两个<code>Backup</code>节点，必须配置<code>nopreempt</code><ul><li><code>Server1</code>和<code>Server2</code>都为<code>Backup</code>，先启动的升级为<code>Master</code>，必须配置<code>nopreempt</code>，若<code>Server1</code>宕机，<code>Server2</code>会接管服务，<code>Server1</code>恢复后不会重新接管，<code>Server1</code>成为<code>Backup</code>，属于非抢占式。</li></ul></li></ul><h2 id="3-工作原理"><a href="#3-工作原理" class="headerlink" title="3. 工作原理"></a>3. 工作原理</h2><blockquote><p>工作在<code>TCP/IP</code>模型的第三、四和五层，即网络层、传输层和应用层。<br>网络层：通过<code>IMCP</code>协议向集群的每个节点发送数据包，检测节点的存活状态，若无响应则报告节点失效，从集群中剔除；<br>传输层:通过<code>TCP</code>协议的端口连接和扫描判断集群节点连接是否正常，若探测到没有响应数据判定为发生故障，从集群中剔除；<br>应用层：可以写脚本来检测服务是否正常以及剔除节点。</p></blockquote><ul><li>Scheduler I/O Multiplexer<ul><li>IO服用分发器，调度Keepalived所有的内部任务请求</li></ul></li><li>Memory Management<ul><li>内存管理机制，提供访问内从的通用方法</li></ul></li><li>Control Plane，Keepalived运行时会启动<code>core</code>、<code>check</code>和<code>vrrp</code>三个进程<ul><li>Core Components<ul><li>Watch Dog<ul><li>看门狗，针对被监视目标设置计数器和阈值，等待目标周期性重置计数器，若发生错误无法重置将被检测到。用来监控Checkers和VRRP进程</li></ul></li><li>Checkers<ul><li>实现对服务器的运行状态检测和故障隔离</li></ul></li><li>VRRP Stack<ul><li>实现失败切换功能，通过VRRP和LVS即可部署高性能的负载均衡集群</li></ul></li><li>IPVS Wrapper<ul><li>实现IPVS，将设置好的IPVS规则发送到内核空间并提交给IPVS模块，实现最终的负载均衡</li></ul></li><li>Netlink Reflector<ul><li>VIP的设置和切换</li></ul></li></ul></li></ul></li></ul><h2 id="4-选举策略"><a href="#4-选举策略" class="headerlink" title="4. 选举策略"></a>4. 选举策略</h2><ul><li>控制节点角色由两个值决定，配置文件中的<code>priority</code>；vrrp_scritp模块中配置的<code>weigth</code>，可正可负。<ul><li>不设置<code>weight</code>时，集群中的优先级由<code>priority</code>决定，优先级高的节点成为<code>Master</code>，优先级低的节点成为<code>Backup</code>；但如果<code>Master</code>出现故障后<code>Backup</code>的<code>priority</code>小于<code>Master</code>的<code>priority</code>，导致主备切换失败。</li><li>设置<code>weight</code><ul><li>若<code>weight</code>为正<ul><li>主成功，<code>master priority + weight &gt; backup priority + weight</code>时，主依然为主</li><li>主失败，<code>master priority &lt; backup priority + weight</code>时，主从切换</li></ul></li><li>若<code>weight</code>为负<ul><li>主成功<code>master priority &gt; backup priority</code>时，主依然为主</li><li>主失败，<code>master priority - abs(weight) &lt; backup priority</code>时，主从切换</li></ul></li></ul></li></ul></li></ul><h2 id="5-相关配置"><a href="#5-相关配置" class="headerlink" title="5. 相关配置"></a>5. 相关配置</h2><ul><li><p>备份配置</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> /etc/keepalived/keepalived.conf /etc/keepalived/keepalived.conf.bak</span><br></pre></td></tr></tbody></table></figure></li><li><p>全局配置</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">! Configuration File <span class="keyword">for</span> keepalived</span><br><span class="line"></span><br><span class="line">global_defs {</span><br><span class="line">  notification_email {</span><br><span class="line">    acassen@firewall.loc</span><br><span class="line">    failover@firewall.loc</span><br><span class="line">    sysadmin@firewall.loc</span><br><span class="line">  }</span><br><span class="line">  notification_email_from Alexandre.Cassen@firewall.loc</span><br><span class="line">  smtp_server 192.168.200.1</span><br><span class="line">  smtp_connect_timeout 30</span><br><span class="line">  router_id LVS_DEVEL</span><br><span class="line">  vrrp_skip_check_adv_addr</span><br><span class="line">  vrrp_strict</span><br><span class="line">  vrrp_garp_interval 0</span><br><span class="line">  vrrp_gna_interval 0</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">global_defs #全局配置标识</span><br><span class="line">notification_email #用于设置报警的邮件地址，可以设置多个，每行一个。如果要开启邮件报警，需要开启本机的sendmail服务</span><br><span class="line">notification_email_from #邮件的发送地址</span><br><span class="line">smtp_server #设置邮件的smtp server地址</span><br><span class="line">smtp_connect_timeout #设置连接smtp server的超时时间</span><br><span class="line">router_id # 运行keepalived的一个标识，唯一</span><br><span class="line">vrrp_skip_check_adv_addr ##对所有通告报文都检查，会比较消耗性能，启用此配置后，如果收到的通告报文和上一个报文是同一个路由器，则跳过检查，默认值为全检查</span><br><span class="line">vrrp_strict ##严格遵守VRRP协议,启用此项后以下状况将无法启动服务:1.无VIP地址 2.配置了单播邻居 3.在VRRP版本2中有IPv6地址，开启动此项并且没有配置vrrp_iptables时会自动开启iptables防火墙规则，默认导致VIP无法访问,建议不加此项配置</span><br><span class="line">vrrp_iptables #此项和vrrp_strict同时开启时，则不会添加防火墙规则,如果无配置vrrp_strict项,则无需启用此项配置</span><br><span class="line">vrrp_garp_interval 0 #gratuitous ARP messages 报文发送延迟，0表示不延迟</span><br><span class="line">vrrp_gna_interval 0 ##unsolicited NA messages （不请自来）消息发送延迟</span><br></pre></td></tr></tbody></table></figure></li><li><p>VRRP配置</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">vrrp_script nginx_check {</span><br><span class="line">    script<span class="string">"/tools/nginx_check.sh"</span></span><br><span class="line">    interval 1</span><br><span class="line">}</span><br><span class="line">vrrp_instance VI_1 {</span><br><span class="line">    state MASTER</span><br><span class="line">    interface ens33</span><br><span class="line">    virtual_router_id 52</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication {</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass <span class="built_in">test</span></span><br><span class="line">    }</span><br><span class="line">    virtual_ipaddress {</span><br><span class="line">        192.168.149.100</span><br><span class="line">    }</span><br><span class="line">    track_script {</span><br><span class="line">        nginx_check</span><br><span class="line">    }</span><br><span class="line">    notify_master /tools/master.sh</span><br><span class="line">    notify_backup /tools/backup.sh</span><br><span class="line">    notify_fault /tools/fault.sh</span><br><span class="line">    notify_stop /tools/stop.sh</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">vrrp_instance VI_1 #VRRP实例开始的标识 VI_1为实例名称</span><br><span class="line">state #指定keepalived的角色，MASTER表示此主机是主服务器，BACKUP表示此主机是备服务器</span><br><span class="line">interface #指定检测网络的网卡接口</span><br><span class="line">virtual_router_id #虚拟路由标识，数字形式，同一个VRRP实例使用唯一的标识，即在同一个vrrp_instance下，master和backup必须一致</span><br><span class="line">priority #节点优先级，数字越大表示节点的优先级越高，在一个VRRP实例下，MASTER的优先级必须要比BACKUP高，不然就会切换角色</span><br><span class="line">advert_int #用于设定MASTER与BACKUP之间同步检查的时间间隔，单位为秒</span><br><span class="line">auth_type PASS #预共享密钥认证，同一个虚拟路由器的keepalived节点必须一样</span><br><span class="line">auth_pass #设置密钥</span><br><span class="line">virtual_ipaddress #设置虚拟IP地址，可以设置多种形式：10.0.0.100不指定网卡，默认为eth0,注意：不指定/prefix,默认为/32；10.0.0.101/24 dev eth1 指定VIP的网卡；10.0.0.102/24 dev eth2 label eth2:1  #指定VIP的网卡label</span><br><span class="line">nopreempt # 设置为非抢占模式，同一实例下主备设置必须一样</span><br><span class="line">preemtp_delay # 设置抢占模式的延时时间，单位为秒</span><br></pre></td></tr></tbody></table></figure></li></ul><h2 id="6-集群资源监控"><a href="#6-集群资源监控" class="headerlink" title="6. 集群资源监控"></a>6. 集群资源监控</h2><blockquote><p>通过<code>track_script</code>和<code>vrrp_script</code>实现集群资源监控及改变优先级，实现主从切换</p></blockquote><ul><li><code>killall</code>探测服务运行状态</li></ul><blockquote><p>定义服务监控模块<code>nginx_check</code>，如果发现进程异常或关闭返回状态码<code>1</code></p></blockquote>  <figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vrrp_script nginx_check {</span><br><span class="line">    script<span class="string">"killall -0 nginx"</span></span><br><span class="line">    interval 1</span><br><span class="line">}</span><br><span class="line">track_script {</span><br><span class="line">    nginx_check</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>检测端口状态</li></ul><blockquote><p><code>fail</code>表示检测到失败的最大次数，也就是说如果请求失败两次，就认为此节点资源发生故障，进行切换操作；<code>rise</code>表示请求一次成功，就认为此节点资源恢复正常</p></blockquote>  <figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">vrrp_script nginx_check {</span><br><span class="line">    script <span class="string">"&lt;/dev/tcp/127.0.0.1/80"</span></span><br><span class="line">    interval 1</span><br><span class="line">    fail 2</span><br><span class="line">    rise 1</span><br><span class="line">}</span><br><span class="line">track_script {</span><br><span class="line">    nginx_check</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Record some about &lt;code&gt;Keepalived&lt;/code&gt; installation and usage skills.&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Summary" scheme="https://boom1999.github.io/categories/Summary/"/>
    
    
    <category term="Keepalived" scheme="https://boom1999.github.io/tags/Keepalived/"/>
    
    <category term="Load Balance" scheme="https://boom1999.github.io/tags/Load-Balance/"/>
    
  </entry>
  
  <entry>
    <title>ClickHouse初探</title>
    <link href="https://boom1999.github.io/2024/06/29/ClickHouse%E5%88%9D%E6%8E%A2/"/>
    <id>https://boom1999.github.io/2024/06/29/ClickHouse%E5%88%9D%E6%8E%A2/</id>
    <published>2024-06-29T00:00:00.000Z</published>
    <updated>2024-06-29T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><span class="github-emoji"><span>📌</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 最近的项目用到了<code>ClickHouse</code>，全称<code>Click Stream, Data Warehouse</code>，是用于联机分析的列式数据库，由Russian的Yandex开发逐渐演进而来，在这里记录一些初次使用ClickHouse时摸索的一些特性和坑。</p><p><span class="github-emoji"><span>💨</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a8.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>🕙</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f559.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😴</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f634.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><span id="more"></span><h2 id="1-优缺点"><a href="#1-优缺点" class="headerlink" title="1. 优缺点"></a>1. 优缺点</h2><h3 id="1-1-Benefits"><a href="#1-1-Benefits" class="headerlink" title="1.1 Benefits"></a>1.1 Benefits</h3><ul><li>ROLAP实时分析、实时查询、列式存储、完善的SQL支持、高可用，适合大数据量的数据分析，支持PB级别的数据量</li></ul><h3 id="1-2-Drawbacks"><a href="#1-2-Drawbacks" class="headerlink" title="1.2 Drawbacks"></a>1.2 Drawbacks</h3><ul><li>不支持事务</li><li>join的语法不够完善</li><li>采用并行处理，不支持高并发</li><li>稀疏索引导致查询性能不稳定，删改数据性能较差</li></ul><h2 id="2-应用场景"><a href="#2-应用场景" class="headerlink" title="2. 应用场景"></a>2. 应用场景</h2><ul><li>主要用于数据分析领域，适合OLAP场景，不适合OLTP场景</li></ul><h2 id="3-安装"><a href="#3-安装" class="headerlink" title="3. 安装"></a>3. 安装</h2><blockquote><p>在Ubuntu的环境下用apt安装</p></blockquote><ul><li><p>Use repository from Yandex</p><ul><li><p>Add key</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv E0C56BD4</span><br></pre></td></tr></tbody></table></figure><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">OutputExecuting: /tmp/apt-key-gpghome.JkkcKnBAFY/gpg.1.sh --keyserver keyserver.ubuntu.com --recv E0C56BD4</span><br><span class="line"></span><br><span class="line">gpg: key C8F1E19FE0C56BD4: public key "ClickHouse Repository Key &lt;milovidov@yandex-team.ru&gt;" imported</span><br><span class="line">gpg: Total number processed: 1</span><br><span class="line">gpg:               imported: 1</span><br></pre></td></tr></tbody></table></figure></li><li><p>Add repository and update</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo "deb http://repo.yandex.ru/clickhouse/deb/stable/ main/" | sudo tee /etc/apt/sources.list.d/clickhouse.list</span><br><span class="line"></span><br><span class="line">sudo apt update</span><br></pre></td></tr></tbody></table></figure></li></ul></li><li><p>Install ClickHouse<br>  You need to enter the password for the <code>default</code> user when installiation in 75% progress.</p>  <figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install clickhouse-server clickhouse-client</span><br></pre></td></tr></tbody></table></figure></li><li><p>Start ClickHouse</p>  <figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo service clickhouse-server start</span><br><span class="line">sudo service clickhouse-server status</span><br></pre></td></tr></tbody></table></figure></li></ul><h2 id="4-防火墙设置和远程连接"><a href="#4-防火墙设置和远程连接" class="headerlink" title="4. 防火墙设置和远程连接"></a>4. 防火墙设置和远程连接</h2><blockquote><p>如果仅在同一服务器访问ClickHouse，则无需设置防火墙<br>如果需要远程访问，则需要配置用户权限</p></blockquote><ul><li><p>修改ClickHouse配置文件，监听所有IP地址</p><ul><li><p>取消注释，大约在配置文件的一百五十多行</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/clickhouse-server/config.xml</span><br></pre></td></tr></tbody></table></figure><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">listen_host</span>&gt;</span>::<span class="tag">&lt;/<span class="name">listen_host</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li></ul></li><li><p>重启ClickHouse</p>  <figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart clickhouse-server.service</span><br></pre></td></tr></tbody></table></figure></li><li><p>远程访问</p></li></ul><blockquote><p>无法使用<code>default</code>用户远程访问，需要增加<code>default</code>的管理权限后创建新用户</p></blockquote><ul><li><p>修改<code>default</code>用户权限，取消<code>access_management&gt;1&lt;/access_management&gt;</code>的注释</p>  <figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /etc/clickhouse-server/users.xml</span><br></pre></td></tr></tbody></table></figure>  <figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">users</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">default</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- ... --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- ... --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- ... --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- User can create other users and grant rights to them. --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;access_management&gt;1&lt;/access_management&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">default</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">users</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>  <figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart clickhouse-server.service</span><br></pre></td></tr></tbody></table></figure></li><li><p>创建只读权限和新用户</p>  <figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clickhouse-client --password</span><br></pre></td></tr></tbody></table></figure>  <figure class="highlight sql"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> ROLE role_read;</span><br><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span> <span class="keyword">ON</span> db.<span class="operator">*</span> <span class="keyword">TO</span> role_read;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> user_read IDENTIFIED <span class="keyword">WITH</span> sha256_password  <span class="keyword">BY</span> <span class="string">'password'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">GRANT</span> role_read <span class="keyword">TO</span> user_read;</span><br></pre></td></tr></tbody></table></figure></li><li><p>访问</p>  <figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clickhouse-client -m -u user_read --password 'your_password'</span><br></pre></td></tr></tbody></table></figure></li><li><p>DBeaver连接</p><ul><li>Driver: ClickHouse</li><li>URL: jdbc:clickhouse://your_ip:8123</li><li>User: user_read</li><li>Password: your_password</li></ul></li><li><p>SpringBoot连接</p><ul><li><p>Dependency</p><figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ru.yandex.clickhouse<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>clickhouse-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.2.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>Application.yml</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">application:</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">"logBase"</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">"dev"</span></span><br><span class="line">  <span class="attr">main:</span></span><br><span class="line">    <span class="attr">allow-circular-references:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span></span><br><span class="line">    <span class="attr">clickhouse:</span></span><br><span class="line">    <span class="attr">driverClassName:</span> <span class="string">${log-base.datasource.driver-class-name}</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:clickhouse://${log-base.datasource.host}:${log-base.datasource.port}/${log-base.datasource.database}</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">${log-base.datasource.username}</span></span><br><span class="line">    <span class="attr">password:</span> <span class="string">${log-base.datasource.password}</span></span><br><span class="line">    <span class="attr">testWhileIdle:</span> <span class="string">${log-base.datasource.test-while-idle}</span></span><br><span class="line">    <span class="attr">validationQuery:</span> <span class="string">${log-base.datasource.validation-query}</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>ClickHouseProperties</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = "spring.datasource.clickhouse")</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ClickHouseProperties</span> {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String driverClassName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String url;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String validationQuery;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String testWhileIdle;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>CLickHouseConfiguration.java</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ClickHouseConfiguration</span> {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> ClickHouseProperties clickHouseProperties;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ClickHouseConfiguration</span><span class="params">(ClickHouseProperties clickHouseProperties)</span> {</span><br><span class="line">        <span class="built_in">this</span>.clickHouseProperties = clickHouseProperties;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(name = "clickhouseDataSource")</span></span><br><span class="line">    <span class="keyword">public</span> DataSource <span class="title function_">dataSource</span><span class="params">()</span> {</span><br><span class="line">        log.info(<span class="string">"Init clickhouse datasource"</span>);</span><br><span class="line">        <span class="type">DruidDataSource</span> <span class="variable">dataSource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DruidDataSource</span>();</span><br><span class="line">        dataSource.setUrl(clickHouseProperties.getUrl());</span><br><span class="line">        dataSource.setDriverClassName(clickHouseProperties.getDriverClassName());</span><br><span class="line">        dataSource.setUsername(clickHouseProperties.getUsername());</span><br><span class="line">        dataSource.setPassword(clickHouseProperties.getPassword());</span><br><span class="line">        dataSource.setTestWhileIdle(Boolean.parseBoolean(clickHouseProperties.getTestWhileIdle()));</span><br><span class="line">        dataSource.setValidationQuery(clickHouseProperties.getValidationQuery());</span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;📌&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png?v8&quot; aria-hidden=&quot;true&quot; onerror=&quot;this.parent.classList.add(&#39;github-emoji-fallback&#39;)&quot;&gt;&lt;/span&gt; 最近的项目用到了&lt;code&gt;ClickHouse&lt;/code&gt;，全称&lt;code&gt;Click Stream, Data Warehouse&lt;/code&gt;，是用于联机分析的列式数据库，由Russian的Yandex开发逐渐演进而来，在这里记录一些初次使用ClickHouse时摸索的一些特性和坑。&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;💨&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f4a8.png?v8&quot; aria-hidden=&quot;true&quot; onerror=&quot;this.parent.classList.add(&#39;github-emoji-fallback&#39;)&quot;&gt;&lt;/span&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;🕙&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f559.png?v8&quot; aria-hidden=&quot;true&quot; onerror=&quot;this.parent.classList.add(&#39;github-emoji-fallback&#39;)&quot;&gt;&lt;/span&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;😴&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f634.png?v8&quot; aria-hidden=&quot;true&quot; onerror=&quot;this.parent.classList.add(&#39;github-emoji-fallback&#39;)&quot;&gt;&lt;/span&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Summary" scheme="https://boom1999.github.io/categories/Summary/"/>
    
    
    <category term="ClickHouse" scheme="https://boom1999.github.io/tags/ClickHouse/"/>
    
    <category term="Database" scheme="https://boom1999.github.io/tags/Database/"/>
    
  </entry>
  
  <entry>
    <title>Docker To Kubernetes after V1.24</title>
    <link href="https://boom1999.github.io/2024/05/10/Docker%20To%20Kubernetes/"/>
    <id>https://boom1999.github.io/2024/05/10/Docker%20To%20Kubernetes/</id>
    <published>2024-05-10T00:00:00.000Z</published>
    <updated>2024-05-10T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><span class="github-emoji"><span>📌</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 多机搭建Docker和Kebernetes集群环境，以及部署应用程序。</p><ul><li>Kubernetes 是一个开源的容器编排引擎，用来对容器化应用进行自动化部署、扩缩和管理。仅仅用Docker是不够的，增加Docker-Compose可以实现多容器的编排，但是Kubernetes可以实现多机的容器编排，实现更高级的容器编排功能。<br><span class="github-emoji"><span>💨</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a8.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>🕙</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f559.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😴</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f634.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></li></ul><span id="more"></span><h2 id="1-before"><a href="#1-before" class="headerlink" title="1. before"></a>1. before</h2><ol><li>在此之前，Master主机上已用<code>Docker 24.0.2</code>，但是发现Kubernetes团队在2020年12约初的<code>Kubernetes 1.20</code>的<a href="https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-1.20.md">CHANGELOG</a>中指出”Docker as an underlying runtime is being deprecated. Docker-produced images will continue to work in your cluster with all runtimes, as they always have.”，逐渐开始放弃对Docker的支持。<span style="color:grey">所以在此之后的版本中，Kubernetes不再支持Docker作为底层运行时，可能是因为Docker长期以来不支持CRI(Container Runtime Interface)，以至于需要长期维护Dockershim组件来进行适配；当然也可能是由于某些团队之间的利益冲突。</span></li><li>早期k8s通过硬编码的方式支持Docker，后来通过CRI来支持多种容器，但是Docker并没有支持CRI，导致k8s需要维护dockershim。2022年05月的<code>Kubernetes 1.24</code>正式将dockershim移除，不再支持Docker作为底层运行时，所以需要优先选择containerd或者CRI-O作为底层运行时。</li><li>当然仍然可以继续使用Docker，目前存在支持CRI的shim cri-dockerd，但是这个项目并不由Kubernetes官方维护。</li><li><code>Docker Dasmon</code>是Docker的守护进程，用于管理Docker容器；<code>dockerd</code>是Docker的服务端，用于接收Docker客户端的请求，Docker客户端是Docker的命令行工具，用于与Docker服务端进行交互；<code>containerd</code>是Docker的容器运行时，用于管理容器的生命周期,<code>containerd-shim</code>是代理，用于与<code>OCI runtime(runc)</code>进行交互，<code>runc</code>是容器执行器，用于创建和运行容器。</li><li>为了避免不必要的警告和报错（<em>这是件会让人烦心的事情</em>），所以把移除dockershim前的最后一个大版本1.23.0作为本文使用环境，当然也是用了cri-dockerd作为底层运行时，使用后续版本的k8s也是可行的。</li></ol><h2 id="2-Versions"><a href="#2-Versions" class="headerlink" title="2. Versions"></a>2. Versions</h2><ul><li>System: Linux<ul><li>Operating System: Ubuntu 18.04.6 LTS</li><li>Kernel: Linux 5.4.0-84-generic</li><li>Architecture: x86-64</li></ul></li><li>Docker: 24.0.2</li><li>containerd: 1.6.21</li><li><em>Docker-Compose: 2.2.2</em></li><li>cri-dockerd: 0.3.14</li><li>kubeadm: 1.28.10</li><li>kubelet: 1.28.10</li><li>kubectl: 1.28.10</li><li><em>Kubespary: maybe later</em></li><li>Kubernetes: 1.28.10</li></ul><h2 id="3-Install"><a href="#3-Install" class="headerlink" title="3. Install"></a>3. Install</h2><h3 id="3-1-Docker"><a href="#3-1-Docker" class="headerlink" title="3.1 Docker"></a>3.1 Docker</h3><ul><li><p>Remove old versions</p>  <figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get remove docker docker-engine docker.io containerd runc  </span><br></pre></td></tr></tbody></table></figure></li><li><p>Install</p>  <figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get update</span><br><span class="line"><span class="built_in">sudo</span> apt-get install apt-transport-https ca-certificates curl software-properties-common</span><br><span class="line">curl -fsSL https://get.docker.com | bash -s docker --version 24.0.2</span><br></pre></td></tr></tbody></table></figure></li><li><p>Check</p>  <figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker --version</span><br></pre></td></tr></tbody></table></figure><ul><li>Maybe the following error occurs: <code>permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get "http://%2Fvar%2Frun%2Fdocker.sock/v1.24/version": dial unix /var/run/docker.sock: connect: permission denied</code></li><li><p>To avoid this error, add the current user to the docker group (or use the root user):</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> gpasswd -a <span class="variable">$USER</span> docker</span><br><span class="line">newgrp docker</span><br></pre></td></tr></tbody></table></figure></li></ul></li></ul><h3 id="3-2-kubeadm、kubelet、kubectl"><a href="#3-2-kubeadm、kubelet、kubectl" class="headerlink" title="3.2 kubeadm、kubelet、kubectl"></a>3.2 kubeadm、kubelet、kubectl</h3><blockquote><p><code>kubeadm</code>用于创建k8s集群的工具，可以快速创建一个k8s集群，但是不适用于生产环境，可考虑使用<code>kubespray</code>或<code>kops</code>，更多的安全性、高可用性和监控以及日志，或者直接使用云服务商提供的k8s集群。<br><code>kubelet</code>在集群的每一个节点用来启动Pod和容器的组件，kubelet会根据PodSpec中的描述创建和管理容器。<br><code>kubectl</code>用于与k8s集群进行交互，可以通过kubectl来部署应用、查看集群资源、查看日志等。</p></blockquote><ul><li><p>Update</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get update</span><br><span class="line"><span class="built_in">sudo</span> apt-get install -y apt-transport-https ca-certificates curl gpg</span><br></pre></td></tr></tbody></table></figure></li><li><p>Add public key</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | <span class="built_in">sudo</span> gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg</span><br><span class="line"></span><br><span class="line"><span class="comment"># Aliyun</span></span><br><span class="line">curl -fsSL https://mirrors.aliyun.com/kubernetes-new/core/stable/v1.28/deb/Release.key | <span class="built_in">sudo</span> gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg</span><br></pre></td></tr></tbody></table></figure></li><li><p>Add repository</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /'</span> | <span class="built_in">sudo</span> <span class="built_in">tee</span> /etc/apt/sources.list.d/kubernetes.list</span><br><span class="line"></span><br><span class="line"><span class="comment"># Aliyun</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://mirrors.aliyun.com/kubernetes-new/core/stable/v1.28/deb/ /'</span> | <span class="built_in">sudo</span> <span class="built_in">tee</span> /etc/apt/sources.list.d/kubernetes.list</span><br></pre></td></tr></tbody></table></figure></li><li><p>Install and lock version</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get update</span><br><span class="line"><span class="built_in">sudo</span> apt-get install -y kubelet kubeadm kubectl</span><br><span class="line"><span class="built_in">sudo</span> apt-mark hold kubelet kubeadm kubectl</span><br></pre></td></tr></tbody></table></figure></li><li><p>Check</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubeadm version</span><br><span class="line">kubelet --version</span><br><span class="line">kubectl version --client</span><br></pre></td></tr></tbody></table></figure></li><li><p>Maybe the following error occurs, then you need to use proxy or VPN to access the Internet or other images such as Aliyun, Tencent Cloud, etc.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">E: Unable to locate package kubelet</span><br><span class="line">E: Unable to locate package kubeadm</span><br><span class="line">E: Unable to locate package kubect</span><br></pre></td></tr></tbody></table></figure></li></ul><h3 id="3-3-CRI-O-or-containerd-or-cri-dockerd"><a href="#3-3-CRI-O-or-containerd-or-cri-dockerd" class="headerlink" title="3.3 CRI-O or containerd or cri-dockerd"></a>3.3 CRI-O or containerd or cri-dockerd</h3><blockquote><p>三选一即可，如果用的是Docker且k8s在1.24之前的版本，可以选择用dockershim替代cri-dockerd。</p></blockquote><ul><li><p>cri-dockerd</p><ul><li>Download the latest release from the <a href="https://github.com/Mirantis/cri-dockerd/releases">GitHub release page</a></li><li><p>Install</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install -y ./cri-dockerd_0.3.14.3-0.ubuntu-focal_amd64.deb </span><br></pre></td></tr></tbody></table></figure></li><li><p>Check version and status</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cri-dockerd --version</span><br><span class="line">systemctl status cri-docker</span><br></pre></td></tr></tbody></table></figure></li><li><p>Config containerd, and comment out the ‘disabled_plugins = [“cri”]’ line in the <code>/etc/containerd/config.toml</code> file.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vi /etc/containerd/config.toml</span><br><span class="line"><span class="built_in">sudo</span> systemctl restart containerd</span><br></pre></td></tr></tbody></table></figure></li><li><p>Config the cri-dockerd service<br>Also you can download the service file from the <a href="https://github.com/Mirantis/cri-dockerd/blob/master/packaging/systemd/cri-docker.service">GitHub release page</a></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> wget -O /etc/systemd/system/cri-docker.service https://raw.githubusercontent.com/Mirantis/cri-dockerd/master/packaging/systemd/cri-docker.service</span><br><span class="line"><span class="built_in">sudo</span> wget -O /etc/systemd/system/cri-docker.socket https://raw.githubusercontent.com/Mirantis/cri-dockerd/master/packaging/systemd/cri-docker.socket</span><br></pre></td></tr></tbody></table></figure></li><li><p>Change the <code>ExecStart</code> in the <code>/etc/systemd/system/cri-docker.service</code> file， add <code>pause</code> image from Aliyun mirror.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ExecStart=/usr/bin/cri-dockerd --container-runtime-endpoint fd:// --pod-infra-container-image=registry.aliyuncs.com/google_containers/pause:3.9</span><br></pre></td></tr></tbody></table></figure></li><li><p>Restart the cri-dockerd service</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl daemon-reload      <span class="comment"># 重新加载systemd管理的服务单元文件的命令</span></span><br><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">enable</span> cri-docker</span><br><span class="line"><span class="built_in">sudo</span> systemctl start cri-docker</span><br></pre></td></tr></tbody></table></figure></li></ul></li></ul><h3 id="3-4-Important-settings"><a href="#3-4-Important-settings" class="headerlink" title="3.4 Important settings"></a>3.4 Important settings</h3><ul><li><p>Change cgroup driver to systemd<br><code>kubeadm</code>把<code>kubelet</code>视为一个系统服务来管理，所以用`kubeadm启动时，推荐使用systemd作为cgroup驱动程序。</p><ul><li><p>cgroup for Docker</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vim /etc/docker/daemon.json</span><br></pre></td></tr></tbody></table></figure><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">{</span></span><br><span class="line">  <span class="attr">"registry-mirrors"</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">"https://********.mirror.aliyuncs.com"</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">"exec-opts"</span><span class="punctuation">:</span> <span class="punctuation">[</span> <span class="string">"native.cgroupdriver=systemd"</span> <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">}</span></span><br></pre></td></tr></tbody></table></figure><blockquote><p>You can see your Aliyun mirror address in the <a href="https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors">Aliyun</a> after logging in.</p></blockquote></li><li><p>Restart Docker</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl daemon-reload</span><br><span class="line"><span class="built_in">sudo</span> systemctl restart docker</span><br></pre></td></tr></tbody></table></figure></li><li><p>Check cgroup driver in Docker</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker info | grep -i cgroup</span><br></pre></td></tr></tbody></table></figure></li><li><p>cgroup for kubelet<br>在版本 1.22 及更高版本中，如果用户没有在KubeletConfiguration中设置cgroupDriver字段，kubeadm会将它设置为默认值systemd。</p></li></ul></li><li><p>Date and time synchronization, use <code>Chrony</code></p><ul><li><p>Install</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install chrony</span><br></pre></td></tr></tbody></table></figure></li><li><p>Start synchronization and check status</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl start chrony</span><br><span class="line">systemctl status chrony</span><br></pre></td></tr></tbody></table></figure></li></ul></li><li><p>Set hostname</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> --static hostnamectl set-hostname master <span class="comment"># in master node</span></span><br><span class="line"><span class="built_in">sudo</span> --static hostnamectl set-hostname node1  <span class="comment"># in node1</span></span><br><span class="line"><span class="built_in">sudo</span> --static hostnamectl set-hostname node2  <span class="comment"># in node2</span></span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br></pre></td></tr></tbody></table></figure></li><li><p>Set host in master node and check ping</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">cat</span> &gt;&gt; /etc/hosts &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">192.168.254.129 master</span></span><br><span class="line"><span class="string">192.168.254.130 node1</span></span><br><span class="line"><span class="string">192.168.254.131 node2</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>Disable selinux, edit <code>/etc/selinux/config</code> and set <code>SELINUX=disabled</code> and reboot the system.<br><span style="color:grey">允许容器访问宿主机的文件系统：Setting SELinux in permissive mode by runningsetenforce 0andsed …effectively disables it. This is required to allow containers to access the host filesystem, which is needed by pod networks for example. You have to do this until SELinux support is improved in the kubelet.</span></p><ul><li><p>In Ubuntu, there is no selinux, so the following error may occur:</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span>: /etc/selinx/config: No such file or directory</span><br></pre></td></tr></tbody></table></figure></li></ul></li><li><p>disable unix firewall<br><span style="color:grey">避免重复的防火墙规则：Theiptablestooling can act as a compatibility layer, behaving like iptables but actually configuring nftables. This nftables backend is not compatible with the current kubeadm packages: it causes duplicated firewall rules and breakskube-proxy.</span></p><ul><li><p>关闭防火墙，默认应该是关的，<code>Status: inactive</code></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> ufw <span class="built_in">disable</span></span><br><span class="line"><span class="built_in">sudo</span> ufw status</span><br></pre></td></tr></tbody></table></figure></li><li><p>也可以直接关闭防火墙服务，默认是开的，但防火墙未启动所以无效</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl stop firewalld</span><br><span class="line"><span class="built_in">sudo</span> systemctl <span class="built_in">disable</span> firewalld</span><br></pre></td></tr></tbody></table></figure></li></ul></li><li><p>Disable swap<br><span style="color:grey">开启Swap将导致和k8s的初衷有所违背，产生性能下降，详见<a href="https://github.com/kubernetes/kubernetes/issues/53533">Issue</a></span><br>Reference: <a href="https://askubuntu.com/questions/214805/how-do-i-disable-swap">How do i disable swap</a>, reboot the system after disabling swap.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Temporary</span></span><br><span class="line"><span class="built_in">sudo</span> swapoff -a</span><br><span class="line"><span class="comment"># Permanent</span></span><br><span class="line"><span class="built_in">sudo</span> sed -i <span class="string">'/ swap / s/^\(.*\)$/#\1/g'</span> /etc/fstab</span><br><span class="line"><span class="comment"># Check</span></span><br><span class="line"><span class="built_in">sudo</span> swapon --show</span><br><span class="line">free -h</span><br></pre></td></tr></tbody></table></figure></li></ul><h3 id="3-5-Other-settings"><a href="#3-5-Other-settings" class="headerlink" title="3.5 Other settings"></a>3.5 Other settings</h3><ul><li><p>Check MAC and product_uuid, make sure they are unique, otherwise the cluster will not work properly.</p><ul><li>MAC</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install net-tools</span><br><span class="line">ifconfig</span><br><span class="line">ifconfig <span class="string">"your eth name"</span> | grep -i ether  </span><br></pre></td></tr></tbody></table></figure><ul><li>product_uuid</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">cat</span> /sys/class/dmi/id/product_uuid</span><br></pre></td></tr></tbody></table></figure></li></ul><h2 id="4-组件的版本偏差策略"><a href="#4-组件的版本偏差策略" class="headerlink" title="4. 组件的版本偏差策略"></a>4. 组件的版本偏差策略</h2><blockquote><p>若集群的<code>kube-apiserver</code>有多个版本，规则都将对每个版本取并集。</p></blockquote><h3 id="kubelet版本"><a href="#kubelet版本" class="headerlink" title="kubelet版本"></a>kubelet版本</h3><ul><li><code>kubelet</code>版本不能比<code>kube-apiserver</code>版本新。</li><li><code>kubelet</code>可以比<code>kube-apiserver</code>低三个次要版本（如果<code>kubelet</code> &lt; 1.25，则只能比<code>kube-apiserver</code>低两个次要版本）。</li><li>例如<ul><li><code>kube-apiserver</code>处于1.30版本</li><li><code>kubelet</code>支持1.30、1.29、1.28和1.27版本</li></ul></li></ul><h3 id="kube-proxy版本"><a href="#kube-proxy版本" class="headerlink" title="kube-proxy版本"></a>kube-proxy版本</h3><ul><li>其他同<code>kubelet</code>一样，<code>kube-proxy</code>的版本不能比<code>kube-apiserver</code>版本新，小于等于三个次要版本。</li><li><code>kube-proxy</code>可以与<code>kubelet</code>有新或旧三个次要版本，<code>1.25</code>之前则是两个次要版本。</li></ul><h3 id="kube-controller-manager、kube-scheduler、cloud-controller-manager版本"><a href="#kube-controller-manager、kube-scheduler、cloud-controller-manager版本" class="headerlink" title="kube-controller-manager、kube-scheduler、cloud-controller-manager版本"></a>kube-controller-manager、kube-scheduler、cloud-controller-manager版本</h3><ul><li>不能比<code>kube-apiserver</code>版本新，最多比<code>kube-apiserver</code>低一个次要版本。</li><li>允许实时升级</li></ul><h3 id="kubectl版本"><a href="#kubectl版本" class="headerlink" title="kubectl版本"></a>kubectl版本</h3><ul><li>与<code>kube-apiserver</code>版本相同或者低、高于<code>kube-apiserver</code>一个次要版本。</li></ul><h2 id="5-Start-k8s-cluster"><a href="#5-Start-k8s-cluster" class="headerlink" title="5. Start k8s cluster"></a>5. Start k8s cluster</h2><ul><li><p>Initialize the master node</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> kubeadm init \</span><br><span class="line">  --apiserver-advertise-address=192.168.254.129 \</span><br><span class="line">  --image-repository registry.aliyuncs.com/google_containers \</span><br><span class="line">  --kubernetes-version v1.28.0 \</span><br><span class="line">  --service-cidr=10.96.0.0/12 \</span><br><span class="line">  --pod-network-cidr=10.244.0.0/16 \</span><br><span class="line">  --ignore-preflight-errors=all</span><br><span class="line"></span><br><span class="line"><span class="comment"># This command will occur the following error (cri-dockerd and containerd are compatible):</span></span><br><span class="line"></span><br><span class="line">Found multiple CRI endpoints on the host. Please define <span class="built_in">which</span> one <span class="keyword">do</span> you wish to use by setting the <span class="string">'criSocket'</span> field <span class="keyword">in</span> the kubeadm configuration file: unix:///var/run/containerd/containerd.sock, unix:///var/run/cri-dockerd.sock</span><br><span class="line">To see the stack trace of this error execute with --v=5 or higher</span><br></pre></td></tr></tbody></table></figure><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> kubeadm init \</span><br><span class="line">  --apiserver-advertise-address=192.168.254.129 \</span><br><span class="line">  --image-repository registry.aliyuncs.com/google_containers \</span><br><span class="line">  --kubernetes-version v1.28.0 \</span><br><span class="line">  --service-cidr=10.96.0.0/12 \</span><br><span class="line">  --pod-network-cidr=10.244.0.0/16 \</span><br><span class="line">  --ignore-preflight-errors=all \</span><br><span class="line">  --cri-socket=unix:///var/run/cri-dockerd.sock</span><br><span class="line"></span><br><span class="line"><span class="comment"># Reply success</span></span><br><span class="line">Your Kubernetes control-plane has initialized successfully!</span><br><span class="line"></span><br><span class="line">To start using your cluster, you need to run the following as a regular user:</span><br><span class="line"></span><br><span class="line">  <span class="built_in">mkdir</span> -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">  <span class="built_in">sudo</span> <span class="built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">  <span class="built_in">sudo</span> <span class="built_in">chown</span> $(<span class="built_in">id</span> -u):$(<span class="built_in">id</span> -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"></span><br><span class="line">Alternatively, <span class="keyword">if</span> you are the root user, you can run:</span><br><span class="line"></span><br><span class="line">  <span class="built_in">export</span> KUBECONFIG=/etc/kubernetes/admin.conf</span><br><span class="line"></span><br><span class="line">You should now deploy a pod network to the cluster.</span><br><span class="line">Run <span class="string">"kubectl apply -f [podnetwork].yaml"</span> with one of the options listed at:</span><br><span class="line">  https://kubernetes.io/docs/concepts/cluster-administration/addons/</span><br><span class="line"></span><br><span class="line">Then you can <span class="built_in">join</span> any number of worker nodes by running the following on each as root:</span><br><span class="line"></span><br><span class="line">kubeadm <span class="built_in">join</span> 192.168.254.129:6443 --token kgsf73.msjq37v3zwqkaycg \</span><br><span class="line">        --discovery-token-ca-cert-hash sha256:feb06b7d17a02964c162b3f5dda5e5182f8e407383ebf1d974b26416937d65ec</span><br></pre></td></tr></tbody></table></figure><ul><li><p>Copy the configuration file to the user directory</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$HOME</span>/.kube</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chown</span> $(<span class="built_in">id</span> -u):$(<span class="built_in">id</span> -g) <span class="variable">$HOME</span>/.kube/config</span><br></pre></td></tr></tbody></table></figure></li><li><p>Check the status of the master node and the pods, <em>we haven’t installed the network plugin yet, so the master is in the <code>NotReady</code> state.</em></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">kubectl get nodes</span><br><span class="line"></span><br><span class="line">NAME     STATUS     ROLES           AGE    VERSION</span><br><span class="line">master   NotReady   control-plane   8m9s   v1.28.10</span><br><span class="line"></span><br><span class="line">kubectl get pod -A</span><br><span class="line"></span><br><span class="line">NAMESPACE     NAME                             READY   STATUS    RESTARTS   AGE</span><br><span class="line">kube-system   coredns-66f779496c-6b4rw         0/1     Pending   0          6m13s</span><br><span class="line">kube-system   coredns-66f779496c-xszmj         0/1     Pending   0          6m13s</span><br><span class="line">kube-system   etcd-master                      1/1     Running   0          6m27s</span><br><span class="line">kube-system   kube-apiserver-master            1/1     Running   0          6m26s</span><br><span class="line">kube-system   kube-controller-manager-master   1/1     Running   0          6m29s</span><br><span class="line">kube-system   kube-proxy-r87hl                 1/1     Running   0          6m13s</span><br><span class="line">kube-system   kube-scheduler-master            1/1     Running   0          6m28s</span><br></pre></td></tr></tbody></table></figure></li></ul></li><li><p>Join the worker node<br>创建的指令和token在<code>kubeadm init</code>输出的最后一行，也需要<code>--cri-socket /var/run/cri-dockerd.sock</code>，因为我们的节点都配置了<code>cri-dockerd</code>以及<code>containerd</code>，存在冲突，需要指定使用runc。token的有效期为24小时，过期后需要<code>kubeadm token create --print-join-command</code>重新生成。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># The command is generated by the master node, the last line of the output of the `kubeadm init` command.</span></span><br><span class="line"><span class="comment"># Also need --cri-socket /var/run/cri-dockerd.sock'</span></span><br><span class="line"><span class="built_in">sudo</span> kubeadm <span class="built_in">join</span> 192.168.254.129:6443 --cri-socket unix:///var/run/cri-dockerd.sock --token kgsf73.msjq37v3zwqkaycg \</span><br><span class="line">        --discovery-token-ca-cert-hash sha256:feb06b7d17a02964c162b3f5dda5e5182f8e407383ebf1d974b26416937d65ec</span><br></pre></td></tr></tbody></table></figure><ul><li><p>Check in the master node</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">kubectl get nodes -A</span><br><span class="line"></span><br><span class="line">NAMESPACE     NAME                             READY   STATUS              RESTARTS   AGE</span><br><span class="line">kube-system   coredns-66f779496c-6b4rw         0/1     Pending             0          23m</span><br><span class="line">kube-system   coredns-66f779496c-xszmj         0/1     Pending             0          23m</span><br><span class="line">kube-system   etcd-master                      1/1     Running             0          24m</span><br><span class="line">kube-system   kube-apiserver-master            1/1     Running             0          24m</span><br><span class="line">kube-system   kube-controller-manager-master   1/1     Running             0          24m</span><br><span class="line">kube-system   kube-proxy-5jgmq                 0/1     ContainerCreating   0          106s</span><br><span class="line">kube-system   kube-proxy-p9tq5                 0/1     ContainerCreating   0          6m8s</span><br><span class="line">kube-system   kube-proxy-r87hl                 1/1     Running             0          23m</span><br><span class="line">kube-system   kube-scheduler-master            1/1     Running             0          24m</span><br></pre></td></tr></tbody></table></figure></li><li><p>Copy the configuration file to the user directory, 否则将导致<code>kubectl get nodes</code>时出现<code>The connection to the server localhost:8080 was refused - did you specify the right host or port?</code>，以及该节点将始终处于<code>NotReady</code>状态，该节点的kube-proxy处于<code>ContainerCreating</code>状态。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$HOME</span>/.kube</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">cp</span> -i /etc/kubernetes/kubelet.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chown</span> $(<span class="built_in">id</span> -u):$(<span class="built_in">id</span> -g) <span class="variable">$HOME</span>/.kube/config</span><br></pre></td></tr></tbody></table></figure></li></ul></li><li><p>Remove the node from the cluster</p><ul><li><p><strong>In master node</strong></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Check the node 和 pods, 先检查一下</span></span><br><span class="line">kubectl get nodes</span><br><span class="line">kubectl get pods -A -o wide</span><br><span class="line"><span class="comment"># 阻止调度新的pod在该节点上，但此时pod可以在node上继续运行</span></span><br><span class="line">kubectl cordon node1</span><br><span class="line"><span class="comment"># 驱逐node1上的所有pod</span></span><br><span class="line">kubectl drain node1 --ignore-daemonsets --delete-local-data</span><br><span class="line"><span class="comment"># 删除node1</span></span><br><span class="line">kubectl delete node node1</span><br></pre></td></tr></tbody></table></figure></li><li><p><strong>In worker node</strong></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Leave the cluster</span></span><br><span class="line"><span class="built_in">sudo</span> kubeadm reset --cri-socket /var/run/cri-dockerd.sock</span><br></pre></td></tr></tbody></table></figure><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除残留的文件</span></span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">rm</span> -rf /etc/kubernetes/</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">rm</span> -rf <span class="variable">$HOME</span>/.kube</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 清除iptables或者ipvs的配置</span></span><br><span class="line"><span class="built_in">sudo</span> iptables -F &amp;&amp; iptables -t nat -F &amp;&amp; iptables -t mangle -F &amp;&amp; iptables -X</span><br><span class="line"><span class="built_in">sudo</span> ipvsadm --clear</span><br></pre></td></tr></tbody></table></figure></li></ul></li><li><p>Add CNI plugin<br>到现在为止不同的宿主机之间的pod无法跨主机通信，需要安装网络插件，这里选择<code>Calico</code>，也可以选择<code>Flannel</code>、<code>Cilium</code>、<code>Weave Net</code>等。</p><ul><li><p>Download the <code>Calico</code> plugin</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># wget https://docs.projectcalico.org/manifests/calico.yaml</span></span><br><span class="line">curl -O https://docs.tigera.io/archive/v3.25/manifests/calico.yaml</span><br></pre></td></tr></tbody></table></figure></li><li><p>Modify the <code>calico.yaml</code> file, change the <code>CALICO_IPV4POOL_CIDR</code> to <code>pod-network-cidr's</code> value, and apply the <code>Calico</code> plugin.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- name: CALICO_IPV4POOL_CIDR</span><br><span class="line">    value: <span class="string">"10.244.0.0/16"</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f calico.yaml</span><br></pre></td></tr></tbody></table></figure></li><li><p>But there is still some bugs those are fixed in <a href="#jump">Debug Section</a>.</p></li></ul></li><li><p>Complete the master ande node1, node2 <em>(need to wait for a while)</em></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">boom@master:~$ kubectl get pods -A -o wide</span><br><span class="line">NAMESPACE     NAME                                       READY   STATUS    RESTARTS      AGE     IP                NODE     NOMINATED NODE   READINESS GATES</span><br><span class="line">kube-system   calico-kube-controllers-6d668dcdd6-gbrfq   1/1     Running   0             57m     10.244.104.3      node2    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system   calico-node-f8jwx                          1/1     Running   0             5m21s   192.168.254.130   node1    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system   calico-node-gvs6h                          1/1     Running   0             57m     192.168.254.131   node2    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system   calico-node-qk946                          1/1     Running   1 (45m ago)   57m     192.168.254.129   master   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system   coredns-66f779496c-6b4rw                   1/1     Running   2 (45m ago)   7h53m   10.244.219.66     master   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system   coredns-66f779496c-xszmj                   1/1     Running   2 (45m ago)   7h53m   10.244.219.65     master   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system   etcd-master                                1/1     Running   2 (45m ago)   7h54m   192.168.254.129   master   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system   kube-apiserver-master                      1/1     Running   2 (45m ago)   7h54m   192.168.254.129   master   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system   kube-controller-manager-master             1/1     Running   2 (45m ago)   7h54m   192.168.254.129   master   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system   kube-proxy-ff75p                           1/1     Running   0             86m     192.168.254.131   node2    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system   kube-proxy-r87hl                           1/1     Running   2 (45m ago)   7h53m   192.168.254.129   master   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system   kube-proxy-zgnjd                           1/1     Running   0             5m21s   192.168.254.130   node1    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kube-system   kube-scheduler-master                      1/1     Running   2 (45m ago)   7h54m   192.168.254.129   master   &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line">boom@master:~$ kubectl get nodes</span><br><span class="line">NAME     STATUS   ROLES           AGE     VERSION    INTERNAL-IP       EXTERNAL-IP   OS-IMAGE             KERNEL-VERSION      CONTAINER-RUNTIME</span><br><span class="line">master   Ready    control-plane   7h58m   v1.28.10   192.168.254.129   &lt;none&gt;        Ubuntu 18.04.6 LTS   5.4.0-150-generic   docker://24.0.2</span><br><span class="line">node1    Ready    &lt;none&gt;          10m     v1.28.10   192.168.254.130   &lt;none&gt;        Ubuntu 18.04.6 LTS   5.4.0-150-generic   docker://24.0.2</span><br><span class="line">node2    Ready    &lt;none&gt;          90m     v1.28.10   192.168.254.131   &lt;none&gt;        Ubuntu 18.04.6 LTS   5.4.0-150-generic   docker://24.0.2</span><br></pre></td></tr></tbody></table></figure></li><li><p>Dashboard</p><ul><li><p>Download the <code>Dashboard</code> plugin</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -O https://raw.githubusercontent.com/kubernetes/dashboard/v2.4.0/aio/deploy/recommended.yaml</span><br></pre></td></tr></tbody></table></figure></li><li><p>Modify the <code>recommended.yaml</code> file, add the <code>type: NodePort</code> to the <code>Service</code> section, then apply the <code>Dashboard</code> plugin.</p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">443</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">8443</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">NodePort</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f recommended.yaml</span><br></pre></td></tr></tbody></table></figure></li><li><p>Check the <code>Dashboard</code> plugin, but the <code>Pod</code> is in the <code>Pending</code> state.</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pod -n kubernetes-dashboard</span><br><span class="line"></span><br><span class="line">NAMESPACE              NAME                                         READY   STATUS    RESTARTS      AGE     IP                NODE     NOMINATED NODE   READINESS GATES</span><br><span class="line">kubernetes-dashboard   dashboard-metrics-scraper-5657497c4c-rvfnh   1/1     Running   0             3m51s   10.244.166.130    node1    &lt;none&gt;           &lt;none&gt;</span><br><span class="line">kubernetes-dashboard   kubernetes-dashboard-78f87ddfc-52msp         1/1     Running   0             3m51s   10.244.166.129    node1    &lt;none&gt;           &lt;none&gt;</span><br></pre></td></tr></tbody></table></figure></li><li><p>Get the port of the <code>Dashboard</code> plugin, get <code>32000</code> <strong>(will change every time you apply the <code>Dashboard</code> plugin, so you need to check it every time).</strong></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kubectl get svc -n kubernetes-dashboard</span><br><span class="line"></span><br><span class="line">NAME                        TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)         AGE</span><br><span class="line">dashboard-metrics-scraper   ClusterIP   10.105.243.112   &lt;none&gt;        8000/TCP        2m42s</span><br><span class="line">kubernetes-dashboard        NodePort    10.99.228.207    &lt;none&gt;        443:32000/TCP   2m43s</span><br></pre></td></tr></tbody></table></figure></li><li><p>Access the <code>Dashboard</code> plugin, use the <code>master</code> node’s IP and the <code>NodePort</code> port.</p></li></ul><p><img src="https://www.lingzhicheng.cn/usr/file/picture/k8s/k8sDashboardLogin.jpg" alt="DashboardLogin"></p><ul><li><p>Create a <code>Dashboard</code> user, and get the token. (Or you can use the <code>kubeconfig</code> file)</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Create a service account</span></span><br><span class="line">kubectl create serviceaccount dashboard-admin -n kubernetes-dashboard</span><br><span class="line"><span class="comment"># Create a cluster role binding</span></span><br><span class="line">kubectl create clusterrolebinding dashboard-admin --clusterrole=cluster-admin --serviceaccount=kubernetes-dashboard:dashboard-admin</span><br><span class="line"><span class="comment"># Get the token</span></span><br><span class="line">kubectl create token dashboard-admin -n kubernetes-dashboard</span><br></pre></td></tr></tbody></table></figure></li></ul><p><img src="https://www.lingzhicheng.cn/usr/file/picture/k8s/k8sWorkloads.jpg" alt="DashboardWorkloads"></p></li></ul><h2 id="6-Debug"><a href="#6-Debug" class="headerlink" title="6.  Debug"></a>6.  <span id="jump">Debug</span></h2><ul><li><p>The pod <code>kube-proxy</code> is in <code>ContainerCreating</code> status for a long time。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">kubectl  describe pod kube-proxy-4pkw4 -n kube-system</span><br><span class="line"></span><br><span class="line">Events:</span><br><span class="line">Type     Reason                  Age                   From               Message</span><br><span class="line">----     ------                  ----                  ----               -------</span><br><span class="line">Normal   Scheduled               12m                   default-scheduler  Successfully assigned kube-system/kube-proxy-4pkw4 to node2</span><br><span class="line">Warning  FailedCreatePodSandBox  4m52s (x2 over 6m1s)  kubelet            Failed to create pod sandbox: rpc error: code = Unknown desc = failed pulling image <span class="string">"registry.k8s.io/pause:3.9"</span>: Error response from daemon: Head <span class="string">"https://europe-west2-docker.pkg.dev/v2/k8s-artifacts-prod/images/pause/manifests/3.9"</span>: dial tcp 108.177.125.82:443: connect: connection refused</span><br><span class="line">Warning  FailedCreatePodSandBox  44s (x8 over 10m)     kubelet            Failed to create pod sandbox: rpc error: code = Unknown desc = failed pulling image <span class="string">"registry.k8s.io/pause:3.9"</span>: Error response from daemon: Head <span class="string">"https://us-west2-docker.pkg.dev/v2/k8s-artifacts-prod/images/pause/manifests/3.9"</span>: dial tcp 108.177.97.82:443: connect: connection refused</span><br><span class="line">Warning  FailedCreatePodSandBox  10s (x11 over 11m)    kubelet            Failed to create pod sandbox: rpc error: code = Unknown desc = failed pulling image <span class="string">"registry.k8s.io/pause:3.9"</span>: Error response from daemon: Head <span class="string">"https://asia-east1-docker.pkg.dev/v2/k8s-artifacts-prod/images/pause/manifests/3.9"</span>: dial tcp 74.125.23.82:443: connect: connection refused</span><br></pre></td></tr></tbody></table></figure><ul><li><p>查一下应该是<code>pause</code>的镜像拉取失败。但是已经在上文，<code>/etc/systemd/system/cri-docker.service</code>中的<code>ExecStart</code>中添加了<code>pause</code>的镜像，有可能是没有重启<code>cri-dockerd</code>服务，导致镜像没有生效；或者是没有重新加载systemd管理的服务单元文件。<em>修复后加载成功了</em></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> systemctl daemon-reload</span><br><span class="line"><span class="built_in">sudo</span> systemctl restart cri-docker</span><br><span class="line"></span><br><span class="line">kubectl  describe pod kube-proxy-4pkw4 -n kube-system</span><br><span class="line"></span><br><span class="line">Events:</span><br><span class="line">Type    Reason     Age    From               Message</span><br><span class="line">----    ------     ----   ----               -------</span><br><span class="line">Normal  Scheduled  5m24s  default-scheduler  Successfully assigned kube-system/kube-proxy-ff75p to node2</span><br><span class="line">Normal  Pulling    5m22s  kubelet            Pulling image <span class="string">"registry.aliyuncs.com/google_containers/kube-proxy:v1.28.0"</span></span><br><span class="line">Normal  Pulled     5m16s  kubelet            Successfully pulled image <span class="string">"registry.aliyuncs.com/google_containers/kube-proxy:v1.28.0"</span> <span class="keyword">in</span> 6.031s (6.032s including waiting)</span><br><span class="line">Normal  Created    5m16s  kubelet            Created container kube-proxy</span><br><span class="line">Normal  Started    5m16s  kubelet            Started container kube-proxy</span><br></pre></td></tr></tbody></table></figure></li></ul></li><li><p>The pod <code>calico-node-fcdmn</code> is in <code>Init:ImagePullBackOff</code> status for a long time, 查一下应该是<code>calico</code>的镜像拉取失败</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">kubectl  describe pod calico-node-fcdmn -n kube-system</span><br><span class="line"></span><br><span class="line">Events:</span><br><span class="line">Type     Reason     Age                  From               Message</span><br><span class="line">----     ------     ----                 ----               -------</span><br><span class="line">Normal   Scheduled  57m                  default-scheduler  Successfully assigned kube-system/calico-node-fcdmn to node1</span><br><span class="line">Normal   Pulling    50m (x4 over 56m)    kubelet            Pulling image <span class="string">"docker.io/calico/cni:v3.25.0"</span></span><br><span class="line">Warning  Failed     49m (x4 over 55m)    kubelet            Error: ErrImagePull</span><br><span class="line">Warning  Failed     48m (x7 over 55m)    kubelet            Error: ImagePullBackOff</span><br><span class="line">Warning  Failed     21m (x9 over 55m)    kubelet            Failed to pull image <span class="string">"docker.io/calico/cni:v3.25.0"</span>: rpc error: code = Canceled desc = context canceled</span><br><span class="line">Normal   BackOff    11m (x127 over 55m)  kubelet            Back-off pulling image <span class="string">"docker.io/calico/cni:v3.25.0"</span></span><br></pre></td></tr></tbody></table></figure><ul><li><p>查一下还是镜像源的问题，虽然给docker配置了阿里云的镜像源，但是<code>calico</code>的镜像还是从<code>docker.io</code>拉取，所以怀疑是Calico清单文件出了问题，看一下果然是，网上一堆居然都不解决这个问题能成功加载的，看出来好多都是东拼西凑的Tutorial。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> calico.yaml |grep <span class="string">'image:'</span></span><br><span class="line"></span><br><span class="line">image: docker.io/calico/cni:v3.25.0</span><br><span class="line">image: docker.io/calico/cni:v3.25.0</span><br><span class="line">image: docker.io/calico/node:v3.25.0</span><br><span class="line">image: docker.io/calico/node:v3.25.0</span><br><span class="line">image: docker.io/calico/kube-controllers:v3.25.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 替换掉所有'docker.io'的前缀为空</span></span><br><span class="line">sed -i <span class="string">'s#docker.io/##g'</span> calico.yaml</span><br><span class="line"><span class="comment"># 重新检查</span></span><br><span class="line"><span class="built_in">cat</span> calico.yaml |grep <span class="string">'image:'</span></span><br><span class="line">image: calico/cni:v3.25.0</span><br><span class="line">image: calico/cni:v3.25.0</span><br><span class="line">image: calico/node:v3.25.0</span><br><span class="line">image: calico/node:v3.25.0</span><br><span class="line">image: calico/kube-controllers:v3.25.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启calico</span></span><br><span class="line">kubectl delete -f calico.yaml</span><br><span class="line">kubectl apply -f calico.yaml</span><br></pre></td></tr></tbody></table></figure></li></ul></li></ul><h2 id="7-Add-service"><a href="#7-Add-service" class="headerlink" title="7. Add service"></a>7. Add service</h2><ul><li><p>Nginx <em>(for example, nginx-deployment.yaml)</em></p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span>  </span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span>  </span><br><span class="line"><span class="attr">metadata:</span>  </span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-deployment-1</span>  </span><br><span class="line"><span class="attr">spec:</span>  </span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span>  </span><br><span class="line">  <span class="attr">selector:</span>  </span><br><span class="line">    <span class="attr">matchLabels:</span>  </span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx-1</span>  </span><br><span class="line">  <span class="attr">template:</span>  </span><br><span class="line">    <span class="attr">metadata:</span>  </span><br><span class="line">      <span class="attr">labels:</span>  </span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx-1</span>  </span><br><span class="line">    <span class="attr">spec:</span>  </span><br><span class="line">      <span class="attr">containers:</span>  </span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span>  </span><br><span class="line">        <span class="attr">image:</span> <span class="string">nginx:latest</span>  </span><br><span class="line">        <span class="attr">ports:</span>  </span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span>  </span><br><span class="line"><span class="meta">---  </span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span>  </span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span>  </span><br><span class="line"><span class="attr">metadata:</span>  </span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-deployment-2</span>  </span><br><span class="line"><span class="attr">spec:</span>  </span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span>  </span><br><span class="line">  <span class="attr">selector:</span>  </span><br><span class="line">    <span class="attr">matchLabels:</span>  </span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx-2</span>  </span><br><span class="line">  <span class="attr">template:</span>  </span><br><span class="line">    <span class="attr">metadata:</span>  </span><br><span class="line">      <span class="attr">labels:</span>  </span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx-2</span>  </span><br><span class="line">    <span class="attr">spec:</span>  </span><br><span class="line">      <span class="attr">containers:</span>  </span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span>  </span><br><span class="line">        <span class="attr">image:</span> <span class="string">nginx:latest</span>  </span><br><span class="line">        <span class="attr">ports:</span>  </span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span>  </span><br></pre></td></tr></tbody></table></figure></li><li><p>Apply the <code>Nginx</code> service</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f nginx-deployment.yaml</span><br></pre></td></tr></tbody></table></figure></li></ul><h2 id="8-Stop-and-restart-the-cluster"><a href="#8-Stop-and-restart-the-cluster" class="headerlink" title="8. Stop and restart the cluster"></a>8. Stop and restart the cluster</h2><ul><li><p>Stop the cluster</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop kubelet </span><br><span class="line">systemctl stop etcd </span><br><span class="line">systemctl stop docker</span><br></pre></td></tr></tbody></table></figure></li><li><p>Restart the cluster</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker</span><br><span class="line">systemctl start etcd</span><br><span class="line">systemctl start kubelet</span><br><span class="line">systemctl status docker etcd kubelet</span><br></pre></td></tr></tbody></table></figure></li></ul><!-- markdownlint-disable-file MD025 MD028 MD033 -->]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;📌&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png?v8&quot; aria-hidden=&quot;true&quot; onerror=&quot;this.parent.classList.add(&#39;github-emoji-fallback&#39;)&quot;&gt;&lt;/span&gt; 多机搭建Docker和Kebernetes集群环境，以及部署应用程序。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Kubernetes 是一个开源的容器编排引擎，用来对容器化应用进行自动化部署、扩缩和管理。仅仅用Docker是不够的，增加Docker-Compose可以实现多容器的编排，但是Kubernetes可以实现多机的容器编排，实现更高级的容器编排功能。&lt;br&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;💨&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f4a8.png?v8&quot; aria-hidden=&quot;true&quot; onerror=&quot;this.parent.classList.add(&#39;github-emoji-fallback&#39;)&quot;&gt;&lt;/span&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;🕙&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f559.png?v8&quot; aria-hidden=&quot;true&quot; onerror=&quot;this.parent.classList.add(&#39;github-emoji-fallback&#39;)&quot;&gt;&lt;/span&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;😴&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f634.png?v8&quot; aria-hidden=&quot;true&quot; onerror=&quot;this.parent.classList.add(&#39;github-emoji-fallback&#39;)&quot;&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Summary" scheme="https://boom1999.github.io/categories/Summary/"/>
    
    
    <category term="Docker" scheme="https://boom1999.github.io/tags/Docker/"/>
    
    <category term="Kubernetes" scheme="https://boom1999.github.io/tags/Kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>Learning GFS - Google File System</title>
    <link href="https://boom1999.github.io/2024/05/05/Google%20File%20System/"/>
    <id>https://boom1999.github.io/2024/05/05/Google%20File%20System/</id>
    <published>2024-05-05T00:00:00.000Z</published>
    <updated>2024-05-05T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><span class="github-emoji"><span>📌</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 博客系统的Graphviz支持</p><ul><li>GFS是Google在2003年前后创建的可扩展分布式文件系统 ，用来满足 Google 不断扩展的数据处理需求。GFS 为大型网络和连接的节点提供容错、可靠性、可扩展性、可用性和性能。<br><span class="github-emoji"><span>💨</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a8.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>🕚</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f55a.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😴</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f634.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></li></ul><span id="more"></span><p><img src="https://www.lingzhicheng.cn/usr/file/picture/MIT/GFS01.jpg" alt="GFS structure"></p><ol><li><code>Client</code>将file name和byte offset转换为chunk index，向<code>Master</code>发送包含file name和chunk index的请求，<code>Master</code>返回相应的chunk handle和chunk locations。（<code>Client</code>使用file name和chunk index作为key缓存这些信息）</li><li><code>Client</code>向其中一个replica（最近的一个）发送请求，请求内容有chunk handle和byte range（在<code>Client</code>的缓存过期之前，不用再和<code>Master</code>进行交互）</li><li>特别的，<code>Client</code>通常会在同一个请求中请求多个块数据</li></ol><h2 id="In-paper"><a href="#In-paper" class="headerlink" title="In paper"></a>In paper</h2><h3 id="Metadata"><a href="#Metadata" class="headerlink" title="Metadata"></a>Metadata</h3><ul><li><p>Original Paper Links: <a href="https://pdos.csail.mit.edu/6.824/papers/gfs.pdf">The Google File System</a></p></li><li><p>The file and chunk namespaces</p></li><li>The mapping from files to chunks</li><li>The locations of each chunk’s replicas<br>都存在主内存里（可以快速实现周期性扫描，以实现GC、故障备份迁移、负载均衡等功能）；<br>命名空间和映射也存储在<code>Master</code>的本地磁盘和remote备份的操作日志中，以实现持久化；<br><code>Master</code>不会持久化locations，而是在启动的时候询问每个chunkserver，然后保持最新状态（比持久化在<code>Master</code>中要方便，因为大量chunkserver的join、leave、crush等问题将影响chunkserver和<code>Master</code>状态的同步）（或者说chunkserver对他自己磁盘上的存储内容拥有决定权，而不应该在<code>Master</code>上维护）。</li></ul><h3 id="Big-storage-Why-hard"><a href="#Big-storage-Why-hard" class="headerlink" title="Big storage (Why hard?)"></a>Big storage (Why hard?)</h3><ol><li>最初的述求：Performance性能</li><li>Sharding分片：将数据分割放到大量的服务器上，这样就可以并行的从多台服务器读取数据</li><li>发生故障需要容错，fault tolerance自动化修复</li><li>复制副本replication</li><li>副本的一致性问题inconsistency，额外的操作，导致性能降低</li></ol><h3 id="Bad-design-for-strong-consistency"><a href="#Bad-design-for-strong-consistency" class="headerlink" title="Bad design for strong consistency"></a>Bad design for strong consistency</h3><p>两个replication之间的write可能不同<br><img src="https://www.lingzhicheng.cn/usr/file/picture/MIT/GFS02.png" alt="Bad design"></p><p>3.4 GFS goal</p><ul><li>Big, Fast<ul><li>大容量和快速</li></ul></li><li>Global<ul><li>可以通过申请权限来查看已有的数据</li></ul></li><li>Sharding<ul><li>分片存储</li></ul></li><li>Automatic recovery<ul><li>故障的自动回复</li></ul></li><li>Single data center<ul><li>并不是一个目标，是设计成了单个数据中心</li></ul></li><li>Internal use<ul><li>google内部使用，并未完全开放（部分服务对外）</li></ul></li><li>Big sequential access<ul><li>针对的是大型文件的存储，所以是顺序的，并不像小型的随机访问存储</li></ul></li></ul><h3 id="Master-Node"><a href="#Master-Node" class="headerlink" title="Master Node"></a><code>Master</code> Node</h3><ul><li><code>Master</code> server存储文件和chunk server的信息，chunk server真正存储数据</li><li>存储两个表单（内存里）：<ul><li>第一个是文件名到Chunk ID或者Chunk Handle数组的对应。NV（non-volatile, 非易失），这个标记表示对应的数据会写入到磁盘上。</li><li>第二个表单记录了Chunk ID到Chunk数据的对应关系。这里的数据又包括了：<ul><li>每个Chunk存储在哪些服务器上，所以这部分是Chunk服务器的列表（V）</li><li>每个Chunk当前的版本号，所以<code>Master</code>节点必须记住每个Chunk对应的版本号。（NV）</li><li>所有对于Chunk的写操作都必须在主Chunk（Primary Chunk）上顺序处理，主Chunk是Chunk的多个副本之一。所以，<code>Master</code>节点必须记住哪个Chunk服务器持有主Chunk。（V）</li><li>并且，主Chunk只能在特定的租约时间内担任主Chunk，所以，<code>Master</code>节点要记住主Chunk的租约过期时间。（V）</li></ul></li></ul></li><li>在磁盘上存Log、Check Point；写同时写内存和磁盘，读只从内存里</li><li>为什么用Log而不是database？<ul><li>在磁盘中维护log而不是数据库的原因是：数据库本质上来说是某种B树（b-tree）或者hash table，相比之下，追加log会非常的高效，因为你可以将最近的多个log记录一次性的写入磁盘。因为这些数据都是向同一个地址追加，这样只需要等待磁盘的磁碟旋转一次。而对于B树来说，每一份数据都需要在磁盘中随机找个位置写入。所以使用Log可以使得磁盘写入更快一些。</li></ul></li><li>当<code>Master</code>节点故障重启，并重建它的状态，你不会想要从log的最开始重建状态，因为log的最开始可能是几年之前，所以<code>Master</code>节点会在磁盘中创建一些checkpoint点，这可能要花费几秒甚至一分钟。这样<code>Master</code>节点重启时，会从log中的最近一个checkpoint开始恢复，再逐条执行从Checkpoint开始的log，最后恢复自己的状态。</li></ul><h3 id="Read-File"><a href="#Read-File" class="headerlink" title="Read File"></a>Read File</h3><ol><li><code>Client</code>将offset（相较于文件头部的偏移位置，读取部分文件）和file name发给<code>Master</code></li><li><code>Master</code>从file表单中查找文件名，得到chunk ID的数组，再除以64MB得到对应的chunk ID，再从Chunk表单中找服务器列表，响应给<code>Client</code></li><li><code>Client</code>从这些Chunk（Google的数据中心中，IP地址是连续的，所以可以从IP地址的差异判断网络位置的远近）服务器中挑选一个最近的来读取数据，并将读请求发送到那个服务器。因为客户端每次可能只读取1MB或者64KB数据，所以<code>Client</code>可能会连续多次读取同一个Chunk的不同位置。所以<code>Client</code>会缓存Chunk和服务器的对应关系，这样，当再次读取相同Chunk数据时，就不用一次次的去向<code>Master</code>请求相同的信息。</li><li><code>Client</code>与选出的服务器通信，将Chunk Handle和偏移量发送给那个服务器。Chunk服务器会在本地的硬盘上，将每个Chunk存储成独立的Linux文件，并通过普通的Linux文件系统管理。并且可以推测，Chunk文件会按照Handle（也就是ID）命名。所以，Chunk服务器需要做的就是根据文件名找到对应的Chunk文件，之后从文件中读取对应的数据段，并将数据返回给客户端。</li></ol><h3 id="Write-File"><a href="#Write-File" class="headerlink" title="Write File"></a>Write File</h3><p>Read是从随机的最新副本读取，而Write是必须写到Primary chunk，但是有可能主副本不存在，这时<code>Master</code>会找出所有存有Chunk最新副本的Chunk服务器，挑出一个作为Primary，其他的作为Secondary，然后增加版本号，同时也写入磁盘。（最新版本号是NV的，所以服务器宕机后可以从磁盘中恢复过来）。然后<code>Master</code>会将这些信息给对应的服务器，包括新的版本号，服务器也会把版本号存在磁盘里。</p><ul><li>为什么不用最大的版本号当作最新的？<ul><li>当<code>Master</code>重启时，无论如何都需要与所有的Chunk服务器进行通信，因为<code>Master</code>需要确定哪个Chunk服务器存了哪个Chunk。你可能会想到，<code>Master</code>可以将所有Chunk服务器上的Chunk版本号汇总，找出里面的最大值作为最新的版本号。如果所有持有Chunk的服务器都响应了，那么这种方法是没有问题的。但是存在一种风险，当<code>Master</code>节点重启时，可能部分Chunk服务器离线或者失联或者自己也在重启，从而不能响应<code>Master</code>节点的请求。所以，<code>Master</code>节点可能只能获取到持有旧副本的Chunk服务器的响应，而持有最新副本的Chunk服务器还没有完成重启，或者还是离线状态（这个时候<code>Master</code>能找到的Chunk最大版本明显不对）。</li></ul></li><li>如果找不到最新版本号的chunk会怎么样？<br><code>Master</code>节点会定期与Chunk服务器交互来查询它们持有什么样版本的Chunk。有两种可能：要么<code>Master</code>会等待，并不响应客户端的请求；要么会返回给客户端说，我现在还不知道Chunk在哪，过会再重试吧。比如说机房电源故障了，所有的服务器都崩溃了，我们正在缓慢的重启。<code>Master</code>节点和一些Chunk服务器可能可以先启动起来，一些Chunk服务器可能要5分钟以后才能重启，这种场景下，我们需要等待，甚至可能是永远等待，因为你不会想使用Chunk的旧数据。所以，总的来说，在重启时，因为<code>Master</code>从磁盘存储的数据知道Chunk对应的最新版本，<code>Master</code>节点会整合具有最新版本Chunk的服务器。每个Chunk服务器会记住本地存储Chunk对应的版本号，当Chunk服务器向<code>Master</code>汇报时，就可以说，我有这个Chunk的这个版本。而<code>Master</code>节点就可以忽略哪些版本号与已知版本不匹配的Chunk服务器。</li><li>如果chunk的版本号大于<code>Master</code>的版本号怎么办？<ul><li><code>Master</code>在向磁盘写入版本号前崩溃了，但分配了新的Primary，会用这个更高的版本号作为最新版本号。可能是因为发送消息后崩溃了，所以最好让pri和sec返回确认消息之后再写入磁盘。</li></ul></li><li>Primary如果同时收到大量<code>Client</code>的并发请求，会排序请求。确定Primary和Secondary chunk后，<code>Client</code>将数据发送给这些服务器，收到后写入临时位置，所有服务器都返回确认后，<code>Client</code>再向Primary发送确认追加请求，然后分发请求。</li><li>对于Secondary chunk来说，不一定会执行成功，可能因为磁盘不足或者故障或者丢包；只有所有chunk都写入成功才会返回yes给<code>Client</code>；否则将返回no然后重新发起整个流程。</li><li>什么时候版本号会改变？<ul><li>只在<code>Master</code>认为Chunk没有Primary时才会增加。</li></ul></li><li><code>Master</code>发现Primary挂了怎么办？<ul><li><code>Master</code>会定期Ping Primary，没有响应认为将要重新指定一个Primary（但这不一定对，可能只是因为没有Ping通而不是挂了），这将导致Primary还可以和<code>Client</code>通信，此时指定新的Primary将同时存在两个，导致脑裂（split-brain）</li><li>解决方案是使用租约，租约到期后更新Primary，若Ping不通，将不会重新指定Primary，而是等待上一个租约到期</li></ul></li></ul><h3 id="Consistency"><a href="#Consistency" class="headerlink" title="Consistency"></a>Consistency</h3><ol><li>第一个<code>Client</code>对三个副本追加数据A</li><li>第二个<code>Client</code>追加数据B，P和S1成功了，S2失败</li><li>第三个<code>Client</code>追加数据C</li><li>第二个<code>Client</code>重试追加B，成功了</li><li>第四个<code>Client</code>追加D，但是S1失败了，并且<code>Client</code>再重试成功前发送故障，导致S1中将不存在D<br><img src="https://www.lingzhicheng.cn/usr/file/picture/MIT/GFS03.png" alt="GFS Consistency"></li></ol><ul><li>在这里的GFS是弱一致性的，副本是不一致的，没有做到精确同步；并且根据偏移量然后执行追加数据的请求，这样就可以实现并行（当然也可以撤销所有部分成功的操作，这导致更复杂且更慢，需要平衡性能）</li><li>缺陷：<ul><li>用内存来维护Chunk表单，随着应用越来越多，尽管可以增加内存，但迟早消耗完</li><li>单<code>Master</code>节点可能来不及处理非常高的并发请求，并且其还要承担一些写入磁盘的任务</li><li><code>Master</code>节点的故障处理是人工干预的，需要自修复才比较好</li></ul></li></ul><!-- markdownlint-disable-file MD025 MD033 -->]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;📌&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png?v8&quot; aria-hidden=&quot;true&quot; onerror=&quot;this.parent.classList.add(&#39;github-emoji-fallback&#39;)&quot;&gt;&lt;/span&gt; 博客系统的Graphviz支持&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GFS是Google在2003年前后创建的可扩展分布式文件系统 ，用来满足 Google 不断扩展的数据处理需求。GFS 为大型网络和连接的节点提供容错、可靠性、可扩展性、可用性和性能。&lt;br&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;💨&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f4a8.png?v8&quot; aria-hidden=&quot;true&quot; onerror=&quot;this.parent.classList.add(&#39;github-emoji-fallback&#39;)&quot;&gt;&lt;/span&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;🕚&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f55a.png?v8&quot; aria-hidden=&quot;true&quot; onerror=&quot;this.parent.classList.add(&#39;github-emoji-fallback&#39;)&quot;&gt;&lt;/span&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;😴&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f634.png?v8&quot; aria-hidden=&quot;true&quot; onerror=&quot;this.parent.classList.add(&#39;github-emoji-fallback&#39;)&quot;&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Summary" scheme="https://boom1999.github.io/categories/Summary/"/>
    
    
    <category term="Distributed Systems" scheme="https://boom1999.github.io/tags/Distributed-Systems/"/>
    
    <category term="GFS" scheme="https://boom1999.github.io/tags/GFS/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu lose internet</title>
    <link href="https://boom1999.github.io/2024/05/02/Lose%20Internet%20Ubuntu/"/>
    <id>https://boom1999.github.io/2024/05/02/Lose%20Internet%20Ubuntu/</id>
    <published>2024-05-02T00:00:00.000Z</published>
    <updated>2024-05-02T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><span class="github-emoji"><span>📌</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Ubuntu网络配置丢失</p><ul><li>起因是这样，突然有一天远程开发连不上了，于是乎先开始排查是不是校园网的部分端口被Ban了，因为最近的$Bing.com$就一直访问不上，但是改变网络接入后仍然没用。</li><li>想到会不会是因为之前系统没有正常关机导致一些VMware网络配置错误，排查和重置了桥接、Nat模式，发现都没有问题</li><li>开始检查Ubuntu的的网络配置，发现在<code>Settings-NetWork</code>中，只有一个$VPN$配置，没有其他的网络配置，按理说应该有<code>Wired</code>，这就很奇怪了，因为之前是有配置的，而且也没有删除过对应的配置文件。</li></ul><p><span class="github-emoji"><span>💨</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a8.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>:clock16:<span class="github-emoji"><span>😴</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f634.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><span id="more"></span><hr><h2 id="找到问题"><a href="#找到问题" class="headerlink" title="找到问题"></a>找到问题</h2><p>在 Ubuntu 中，NetworkManager 是一个用于管理网络连接的系统守护进程。通过修改 NetworkManager.conf 文件，你可以对 NetworkManager 的行为进行一些配置。</p><p>一般来说，通过修改 NetworkManager.conf，你可以实现以下功能：</p><ol><li>修改 DNS 配置：<ul><li>你可以在 NetworkManager.conf 中指定 DNS 服务器的地址，这样 NetworkManager 在配置网络连接时将使用你指定的 DNS 服务器。</li></ul></li><li>配置网络管理：<ul><li>通过修改 NetworkManager.conf，你可以对 NetworkManager 的行为进行一些配置，比如配置连接优先级、禁用特定的网络功能等。</li></ul></li><li>修改插件行为：<ul><li>NetworkManager 通过插件来管理不同类型的网络连接，你可以通过修改 NetworkManager.conf 来配置这些插件的行为。</li></ul></li></ol><ul><li>问题就处在这个<code>NetworkManager</code>中，配置文件<code>/etc/NetworkManager/NetworkManager.conf</code>中的<code>ifupdown</code>插件没有启用，导致<code>/etc/network/interfaces</code>中的配置无法生效。</li></ul><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><ol><li><p>检查<code>/etc/network/interfaces</code>文件</p><ul><li><code>sudo vim /etc/network/interfaces</code></li><li><p>确认是否有配置文件，如果没有，可以参考如下配置：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">auto lo</span><br><span class="line">iface lo inet loopback</span><br></pre></td></tr></tbody></table></figure></li><li><p><code>auto lo</code>：这个指令告诉系统在启动时自动激活本地回环接口。本地回环接口是一个特殊的网络接口，用于系统内部的网络通信，允许计算机与自身进行通信。通过设置 <code>auto lo</code>，系统在启动时会自动激活本地回环接口，确保系统内部的网络通信正常工作。</p></li><li><code>iface lo inet loopback</code>：这行指令定义了本地回环接口的配置。<code>iface</code> 表示接口，<code>lo</code> 是本地回环接口的名称，<code>inet</code> 表示使用 IPv4 协议，<code>loopback</code> 表示这是一个本地回环接口。在这行指令中，<code>loopback</code> 参数表明这个接口是一个本地回环接口，它用于系统内部的循环通信，而不会连接到外部网络。</li><li>这两行指令的作用是确保系统在启动时激活本地回环接口，并为本地回环接口配置了正确的参数，以确保系统内部的网络通信正常工作。</li></ul></li><li><p>打开配置文件<code>/etc/NetworkManager/NetworkManager.conf</code>，修改<code>managed=True</code></p><ul><li><code>sudo vim /etc/NetworkManager/NetworkManager.conf</code></li><li><p>修改如下内容：</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[main]</span><br><span class="line">plugins=ifupdown,keyfile</span><br><span class="line"></span><br><span class="line">[ifupdown]</span><br><span class="line">managed=True</span><br><span class="line"></span><br><span class="line">[device]</span><br><span class="line">wifi.scan-rand-mac-address=no</span><br></pre></td></tr></tbody></table></figure></li></ul></li><li><p><code>reboot</code> or <code>sudo service network-manager restart</code></p></li><li><p>有可能还是不行</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> service network-manager stop</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">rm</span> /var/lib/NetworkManager/NetworkManager.state </span><br><span class="line"><span class="built_in">sudo</span> service network-manager start</span><br></pre></td></tr></tbody></table></figure></li><li><p>原因</p><ul><li>宿主机网络设置变化：如果宿主机的网络适配器配置发生了变化，可能会影响到虚拟机的网络连接，导致 NetworkManager 在虚拟机中将 managed 设置为 false。</li><li>VMware 网络设置变化：VMware 的网络设置可能会影响到虚拟机的网络配置。例如，当虚拟机所连接的网络适配器发生变化时，可能会导致 NetworkManager.conf 中 managed 的状态发生变化。</li><li>更新或重装 VMware Tools：在虚拟机中更新或重装 VMware Tools 时，可能会重新配置网络适配器，这也可能导致 NetworkManager.conf 中 managed 的状态发生变化。（很有可能是这个原因，之前更新了VM tools）</li></ul></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;📌&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png?v8&quot; aria-hidden=&quot;true&quot; onerror=&quot;this.parent.classList.add(&#39;github-emoji-fallback&#39;)&quot;&gt;&lt;/span&gt; Ubuntu网络配置丢失&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;起因是这样，突然有一天远程开发连不上了，于是乎先开始排查是不是校园网的部分端口被Ban了，因为最近的$Bing.com$就一直访问不上，但是改变网络接入后仍然没用。&lt;/li&gt;
&lt;li&gt;想到会不会是因为之前系统没有正常关机导致一些VMware网络配置错误，排查和重置了桥接、Nat模式，发现都没有问题&lt;/li&gt;
&lt;li&gt;开始检查Ubuntu的的网络配置，发现在&lt;code&gt;Settings-NetWork&lt;/code&gt;中，只有一个$VPN$配置，没有其他的网络配置，按理说应该有&lt;code&gt;Wired&lt;/code&gt;，这就很奇怪了，因为之前是有配置的，而且也没有删除过对应的配置文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;💨&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f4a8.png?v8&quot; aria-hidden=&quot;true&quot; onerror=&quot;this.parent.classList.add(&#39;github-emoji-fallback&#39;)&quot;&gt;&lt;/span&gt;:clock16:&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;😴&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f634.png?v8&quot; aria-hidden=&quot;true&quot; onerror=&quot;this.parent.classList.add(&#39;github-emoji-fallback&#39;)&quot;&gt;&lt;/span&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="Summary" scheme="https://boom1999.github.io/categories/Summary/"/>
    
    
    <category term="Debug" scheme="https://boom1999.github.io/tags/Debug/"/>
    
    <category term="Ubuntu" scheme="https://boom1999.github.io/tags/Ubuntu/"/>
    
    <category term="VMware" scheme="https://boom1999.github.io/tags/VMware/"/>
    
  </entry>
  
  <entry>
    <title>博客增加Graphviz支持</title>
    <link href="https://boom1999.github.io/2024/04/20/Graphviz%20on%20Hexo/"/>
    <id>https://boom1999.github.io/2024/04/20/Graphviz%20on%20Hexo/</id>
    <published>2024-04-20T00:00:00.000Z</published>
    <updated>2024-04-20T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><span class="github-emoji"><span>📌</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 博客系统的Graphviz支持</p><ul><li><a href="https://graphviz.org">Graphviz（Graph Visualization Software）</a>是一个开源的图形可视化软件，用DOT描述语言来定义图形，让用户专注于内容而忽略布局的设计</li><li>在先前的博客中，图片可以用对象存储在云端，而简单的结构图也如此未必太过复杂，因此想到用Graphviz来绘制简单的图结构。在本地的Vscode或者Typora中已经内嵌了Graphviz的渲染，标记代码块为<code>graphviz</code>即可，但在博客中没有，两端存在差异化，这篇用于解决这个问题。<br><span class="github-emoji"><span>💨</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a8.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>🕚</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f55a.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😴</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f634.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></li></ul><span id="more"></span><h2 id="添加支持"><a href="#添加支持" class="headerlink" title="添加支持"></a>添加支持</h2><h3 id="Install"><a href="#Install" class="headerlink" title="Install"></a>Install</h3><ul><li>Win/Mac/Linux<ul><li><a href="https://graphviz.org/download/">Graphviz Download</a>，主流系统内的使用也比较简单，可以直接安装，不再赘述</li></ul></li><li><p>Blog System</p><ul><li><p>安装插件<code>hexo-graphviz</code></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yarn add hexo-graphviz   <span class="comment"># 通过yarn安装</span></span><br><span class="line">npm install hexo-graphviz --save <span class="comment"># 通过npm安装</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>模板增加相应的js代码，目录为<code>{blogRoot}/themes/{themeName}/layout/_partial/after-fotter.ejs</code></p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (theme.<span class="property">graphviz</span>.<span class="property">enable</span>) { %&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">'https://cdnjs.cloudflare.com/ajax/libs/viz.js/1.7.1/viz.js'</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="title class_">String</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">replaceAll</span> = <span class="keyword">function</span>(<span class="params">search, replacement</span>) {</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">var</span> target = <span class="variable language_">this</span>;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">return</span> target.<span class="title function_">split</span>(search).<span class="title function_">join</span>(replacement);</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        };</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">let</span> vizObjects = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">'.graphviz'</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        <span class="keyword">for</span> (<span class="keyword">let</span> item <span class="keyword">of</span> vizObjects) {</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">let</span> svg = <span class="literal">undefined</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            <span class="keyword">try</span> {</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                svg = <span class="title class_">Viz</span>(item.<span class="property">textContent</span>.<span class="title function_">replaceAll</span>(<span class="string">'–'</span>, <span class="string">'--'</span>), <span class="string">'svg'</span>)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            } <span class="keyword">catch</span>(e) {</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">                svg = <span class="string">`&lt;pre class="error"&gt;<span class="subst">${e}</span>&lt;/pre&gt;`</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">            }</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        item.<span class="property">outerHTML</span> = svg</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">        }</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&lt;% } %&gt;</span><br></pre></td></tr></tbody></table></figure></li><li><p>添加启动选项（Theme配置下的<code>_config.yml</code>）</p><figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo-graphviz</span></span><br><span class="line"><span class="attr">graphviz:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>注意：可能在安装过程中npm自动升级了，导致之前配置的Nunjucks模板标签又和Markdown的部分标签冲突了，需要重新解决，详细见之前写的<a href="https://www.lingzhicheng.cn/2021/08/26/NunjucksErrors/">Nunjucks Errors</a>的解决方案3。</p></li></ul></li></ul><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><ul><li><p>详细的可以查看<a href="https://graphviz.org">Graphviz的文档</a></p></li><li><p>简单的有向图</p>  <div><div class="graphviz">    digraph G {      A -&gt; B;      B -&gt; C;      C -&gt; D;      D -&gt; A;  }</div></div></li><li><p>带节点标签和边标签的有向图</p>  <div><div class="graphviz">    digraph G {      A [label="Start"];      B [label="Middle"];      C [label="End"];      A -&gt; B [label="Step 1"];      B -&gt; C [label="Step 2"];  }</div></div></li><li><p>带颜色和形状的无向图</p>  <div><div class="graphviz">    graph G {      A [shape=circle, color=red, fillcolor=lightblue, style=filled];      B [shape=square, color=blue];      C [shape=diamond, color=green];      A -- B;      B -- C;      C -- A;      A -- D -- E;  }</div></div></li><li><p>二叉树</p>  <div><div class="graphviz">    digraph G {      bgcolor="beige"      node [shape="record", height=.1]      node0[label="<f0> | <f1> A | <f2>"]      node1[label="<f0> | <f1> B | <f2>"]      node2[label="<f0> | <f1> C | <f2>"]      node0:f0 -&gt; node1:f1      node0:f2 -&gt; node2:f1  }</f2></f1></f0></f2></f1></f0></f2></f1></f0></div></div></li><li><p>大括号子图</p>  <div><div class="graphviz">    graph G {      "数据结构三要素" -- {"数据的逻辑结构", "数据的存储结构", "数据的运算"}  }</div></div></li><li><p>总示例</p>  <div><div class="graphviz">    digraph G {      label=&lt;<b>Graphviz基本组成结构</b>&gt;;      labelloc=top;   // 标题位置      bgcolor=transparent; // 背景透明      node[shape=box];  // 结点形状为方形      //edge[style=bold];      // 独立出现的为结点或属性声明, 中括号前为结点名称      graphviz[label="Graphviz"];      subgraph{          layout[label="Layouts"];          script[label="Script Files"];          api[label="APIs"];          rank=same;      }      graphviz -&gt; layout;      graphviz -&gt; script;      graphviz -&gt; api;      // 设置子图      api -&gt;       subgraph{          layout_etc[label="......"];      }      script -&gt;      subgraph{          element[label="Elements"];          attribute[label="Attributes"];          rank=same;      }      layout -&gt;      subgraph{          layout_dot[label="dot"];          layout_neato[label="neato"];      }      element -&gt;      subgraph{          ele_graph[label="Graph"];          ele_node[label="Node"];          ele_edge[label="Edge"];      }  }</div></div></li></ul><!-- markdownlint-disable-file MD025 MD033 -->]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;📌&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png?v8&quot; aria-hidden=&quot;true&quot; onerror=&quot;this.parent.classList.add(&#39;github-emoji-fallback&#39;)&quot;&gt;&lt;/span&gt; 博客系统的Graphviz支持&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://graphviz.org&quot;&gt;Graphviz（Graph Visualization Software）&lt;/a&gt;是一个开源的图形可视化软件，用DOT描述语言来定义图形，让用户专注于内容而忽略布局的设计&lt;/li&gt;
&lt;li&gt;在先前的博客中，图片可以用对象存储在云端，而简单的结构图也如此未必太过复杂，因此想到用Graphviz来绘制简单的图结构。在本地的Vscode或者Typora中已经内嵌了Graphviz的渲染，标记代码块为&lt;code&gt;graphviz&lt;/code&gt;即可，但在博客中没有，两端存在差异化，这篇用于解决这个问题。&lt;br&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;💨&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f4a8.png?v8&quot; aria-hidden=&quot;true&quot; onerror=&quot;this.parent.classList.add(&#39;github-emoji-fallback&#39;)&quot;&gt;&lt;/span&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;🕚&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f55a.png?v8&quot; aria-hidden=&quot;true&quot; onerror=&quot;this.parent.classList.add(&#39;github-emoji-fallback&#39;)&quot;&gt;&lt;/span&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;😴&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f634.png?v8&quot; aria-hidden=&quot;true&quot; onerror=&quot;this.parent.classList.add(&#39;github-emoji-fallback&#39;)&quot;&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Blog" scheme="https://boom1999.github.io/categories/Blog/"/>
    
    
    <category term="Hexo" scheme="https://boom1999.github.io/tags/Hexo/"/>
    
    <category term="Graphviz" scheme="https://boom1999.github.io/tags/Graphviz/"/>
    
  </entry>
  
  <entry>
    <title>SpringBoot线程池和异步任务</title>
    <link href="https://boom1999.github.io/2024/04/20/SpringBoot%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%92%8C%E5%BC%82%E6%AD%A5%E4%BB%BB%E5%8A%A1/"/>
    <id>https://boom1999.github.io/2024/04/20/SpringBoot%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%92%8C%E5%BC%82%E6%AD%A5%E4%BB%BB%E5%8A%A1/</id>
    <published>2024-04-20T00:00:00.000Z</published>
    <updated>2024-04-20T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>通用的SpringBoot项目下线程池的配置和使用，异步任务的创建和使用等。</p></blockquote><span id="more"></span><h2 id="books-1-线程池配置"><a href="#books-1-线程池配置" class="headerlink" title=":books: 1. 线程池配置"></a><span class="github-emoji"><span>📚</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4da.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 1. 线程池配置</h2><h3 id="1-1-参数配置"><a href="#1-1-参数配置" class="headerlink" title="1.1. 参数配置"></a>1.1. 参数配置</h3><ul><li><p>resouces/appliccation.yml</p>  <figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">async:</span></span><br><span class="line"><span class="attr">executor:</span></span><br><span class="line">    <span class="attr">thread:</span></span><br><span class="line">    <span class="attr">keepAliveSeconds:</span> <span class="number">60</span></span><br><span class="line">    <span class="attr">namePrefix:</span> <span class="string">async-service-</span></span><br></pre></td></tr></tbody></table></figure></li></ul><h3 id="1-2-开启线程池"><a href="#1-2-开启线程池" class="headerlink" title="1.2. 开启线程池"></a>1.2. 开启线程池</h3><ul><li>从运行时拿Cpu核心数，提高可迁移性</li><li><code>baseServiceExecutor</code>用拒绝的策略，防止请求过载</li><li><code>downloadServiceExecutor</code>用等待的策略，保证所有下载线程都会被执行</li><li><p>若有多个线程池，最好定义一些Bean(name = “executorName”)的线程池名字，方便后续使用<code>@Qualifier("executorName")</code>指定线程池</p></li><li><p>config/ExecutorConfiguration.java</p>  <figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.xxx.xxx.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.support.PropertySourcesPlaceholderConfigurer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.annotation.EnableAsync;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ThreadPoolExecutor;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@EnableAsync</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = "async.executor.thread")</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ExecutorConfiguration</span> {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">cpuNum</span> <span class="operator">=</span> Runtime.getRuntime().availableProcessors();</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> corePoolSize;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> maxPoolSize;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> queueCapacity;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> keepAliveSeconds;</span><br><span class="line">    <span class="keyword">private</span> String namePrefix;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(name = "asyncBaseServiceExecutorConfigurer")</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> PropertySourcesPlaceholderConfigurer <span class="title function_">propertySourcesPlaceholderConfigurer</span><span class="params">()</span> {</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">PropertySourcesPlaceholderConfigurer</span>();</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(name = "asyncBaseServiceExecutor")</span></span><br><span class="line">    <span class="keyword">public</span> ThreadPoolTaskExecutor <span class="title function_">baseServiceExecutor</span><span class="params">()</span> {</span><br><span class="line">        <span class="type">ThreadPoolTaskExecutor</span> <span class="variable">executor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ThreadPoolTaskExecutor</span>();</span><br><span class="line">        executor.setCorePoolSize(cpuNum + <span class="number">1</span>);</span><br><span class="line">        executor.setMaxPoolSize((cpuNum + <span class="number">1</span>) * <span class="number">2</span>);</span><br><span class="line">        executor.setQueueCapacity(cpuNum * <span class="number">20</span>);</span><br><span class="line">        executor.setKeepAliveSeconds(keepAliveSeconds);</span><br><span class="line">        executor.setThreadNamePrefix(namePrefix + <span class="string">"base"</span>);</span><br><span class="line">        executor.setRejectedExecutionHandler(<span class="keyword">new</span> <span class="title class_">ThreadPoolExecutor</span>.AbortPolicy());</span><br><span class="line">        executor.initialize();</span><br><span class="line">        <span class="keyword">return</span> executor;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean(name = "asyncDownloadServiceExecutor")</span></span><br><span class="line">    <span class="keyword">public</span> ThreadPoolTaskExecutor <span class="title function_">downloadServiceExecutor</span><span class="params">()</span> {</span><br><span class="line">        <span class="type">ThreadPoolTaskExecutor</span> <span class="variable">executor</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ThreadPoolTaskExecutor</span>();</span><br><span class="line">        executor.setCorePoolSize(cpuNum * <span class="number">2</span>);</span><br><span class="line">        executor.setMaxPoolSize(cpuNum * <span class="number">4</span>);</span><br><span class="line">        executor.setQueueCapacity(cpuNum * <span class="number">20</span>);</span><br><span class="line">        executor.setKeepAliveSeconds(keepAliveSeconds);</span><br><span class="line">        executor.setThreadNamePrefix(namePrefix + <span class="string">"download"</span>);</span><br><span class="line">        executor.setRejectedExecutionHandler(<span class="keyword">new</span> <span class="title class_">ThreadPoolExecutor</span>.CallerRunsPolicy());</span><br><span class="line">        executor.initialize();</span><br><span class="line">        <span class="keyword">return</span> executor;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>启动类增加支持Async的注解</p>  <figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableAsync</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>用到线程池的服务接口增加注解，并标记使用哪个线程池</p>  <figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Async("asyncBaseServiceExecutor")</span></span><br></pre></td></tr></tbody></table></figure><ul><li><code>Method annotated with @Async should return 'void' or "Future-like" type</code>，异步调用不能有返回值或者要用带<code>Future</code>的返回，可以用<code>CompletableFuture&lt;T&gt;</code>的结构封装原来的返回类型<code>T</code></li></ul></li></ul><h2 id="satellite-2-接口中的异步任务改写"><a href="#satellite-2-接口中的异步任务改写" class="headerlink" title=":satellite: 2. 接口中的异步任务改写"></a><span class="github-emoji"><span>📡</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4e1.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 2. 接口中的异步任务改写</h2><h3 id="2-1-引入线程池和注入"><a href="#2-1-引入线程池和注入" class="headerlink" title="2.1. 引入线程池和注入"></a>2.1. 引入线程池和注入</h3><ul><li><p>controller/BaseController.java</p>  <figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> ThreadPoolTaskExecutor baseServiceExecutor;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">public</span> <span class="title function_">BaseController</span><span class="params">(XXX xxx, <span class="meta">@Qualifier("asyncBaseServiceExecutor")</span> ThreadPoolTaskExecutor baseServiceExecutor)</span> {</span><br><span class="line">    <span class="built_in">this</span>.xxx = xxx;</span><br><span class="line">    <span class="built_in">this</span>.baseServiceExecutor = baseServiceExecutor;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul><h3 id="2-2-接口内多任务的异步编排"><a href="#2-2-接口内多任务的异步编排" class="headerlink" title="2.2. 接口内多任务的异步编排"></a>2.2. 接口内多任务的异步编排</h3><ul><li>接口请求成功马上返回结果，可以是查询的结果也可以是空，根据需求；如果需要返回的是多线程服务的查询，return的Result也要用Future结构封装</li><li>执行异步的下载任务，防止阻塞接口的响应</li><li><code>CompletableFuture</code>的<code>runasync()</code>和<code>supplyasync()</code>的区别<ul><li><code>runasync()</code>方法接收一个<code>Runnable</code>类型的参数，不会返回任何结果</li><li><code>supplyasync()</code>方法接收一个<code>Supplier</code>类型的参数，需要返回结果</li></ul></li><li><code>CompletableFuture</code>的<code>thenCompose()</code>和<code>thenApply()</code>的区别<ul><li><code>thenCompose()</code>用来连接两个<code>CompletableFuture</code>，是生成一个新的<code>CompletableFuture</code></li><li><code>thenApply()</code>转换的是泛型中的类型，是同一个<code>CompletableFuture</code></li></ul></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping("/******")</span></span><br><span class="line"><span class="keyword">private</span> Result&lt;String&gt; <span class="title function_">listByTime</span><span class="params">(<span class="meta">@RequestParam(required = false)</span> String startTime,</span></span><br><span class="line"><span class="params">                                  <span class="meta">@RequestParam(required = false)</span> String endTime)</span> {</span><br><span class="line">    log.info(<span class="string">"Select all log base by time"</span>);</span><br><span class="line">    <span class="comment">// If the endTime is null, set it to the current time</span></span><br><span class="line">    endTime = Optional.ofNullable(endTime)</span><br><span class="line">                .orElseGet(() -&gt; LocalDateTime.now().format(DateTimeFormatter.ofPattern(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>)));</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">finalEndTime</span> <span class="operator">=</span> endTime;</span><br><span class="line">    <span class="type">AtomicLong</span> <span class="variable">DownloadNums</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AtomicLong</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">long</span> <span class="variable">startCostTime</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">    CompletableFuture.runAsync(() -&gt; {</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            List&lt;xxx&gt; logs = BaseService.listByTime(startTime, finalEndTime, pageNum, pageSize).get();</span><br><span class="line">            DownloadNums.getAndAdd(progressService.progressLogsAndInitiateDownloa(logs, startTime, finalEndTime, domainIdMap).get().get());</span><br><span class="line">        } <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">            log.error(<span class="string">"Error initiating log download"</span>, e);</span><br><span class="line">        } <span class="keyword">finally</span> {</span><br><span class="line">            <span class="type">long</span> <span class="variable">endCostTime</span> <span class="operator">=</span> System.currentTimeMillis();</span><br><span class="line">            log.info(<span class="string">"Download finished, total {} files,time cost: {} ms"</span>, DownloadNums, endCostTime - startCostTime);</span><br><span class="line">        }</span><br><span class="line">    }, baseServiceExecutor);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> Result.success(<span class="string">"Download is in progress in the background"</span>);</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="mag-right-3-并行下载请求"><a href="#mag-right-3-并行下载请求" class="headerlink" title=":mag_right: 3. 并行下载请求"></a><span class="github-emoji"><span>🔎</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f50e.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 3. 并行下载请求</h2><ul><li>网络请求下载任务要关注一些异常的捕获，直接抛出将漏掉部分下载内容</li><li>为了统计下载任务总数，用了原子类来计数<code>AtomicLong</code>，和使用<code>CountDownLatch</code>统计预估下载总线程数量，再用<code>latch.countDown()</code>和<code>latch.wait()</code>等待所有线程结束统一返回</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.***.***.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Qualifier;</span><br><span class="line"><span class="keyword">import</span> org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</span><br><span class="line"><span class="keyword">import</span> java.util.AbstractMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.CountDownLatch;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.atomic.AtomicLong;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GetObject</span> {</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ThreadPoolTaskExecutor downloadServiceExecutor;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">setThreadPoolTaskExecutor</span><span class="params">(<span class="meta">@Qualifier("asyncDownloadServiceExecutor")</span> ThreadPoolTaskExecutor downloadServiceExecutor)</span> {</span><br><span class="line">        GetObject.downloadServiceExecutor = downloadServiceExecutor;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">log</span> <span class="operator">=</span> LoggerFactory.getLogger(GetObject.class);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> AtomicLong <span class="title function_">figDownload</span><span class="params">(Map&lt;Integer, Set&lt;AbstractMap.SimpleEntry&lt;String, String&gt;&gt;&gt; domainIdFileKeysResponse, String downloadSubName, Map&lt;Integer, String&gt; domainIdMap)</span> {</span><br><span class="line">        <span class="type">String</span> <span class="variable">pathName</span> <span class="operator">=</span> <span class="string">"D:\\download\\"</span> + downloadSubName + File.separator;</span><br><span class="line">        <span class="type">File</span> <span class="variable">file</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(pathName);</span><br><span class="line">        <span class="keyword">if</span> (!file.exists()) {</span><br><span class="line">            <span class="type">boolean</span> <span class="variable">wasSuccessful</span> <span class="operator">=</span> file.mkdirs();</span><br><span class="line">            log.debug(<span class="string">"Create directory {} {}"</span>, pathName, wasSuccessful ? <span class="string">"succeed"</span> : <span class="string">"failed"</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="type">AtomicLong</span> <span class="variable">totalDownloadedFiles</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AtomicLong</span>(<span class="number">0</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">totalTasks</span> <span class="operator">=</span> domainIdFileKeysResponse.values().stream().mapToInt(Set::size).sum();</span><br><span class="line">        <span class="type">CountDownLatch</span> <span class="variable">latch</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CountDownLatch</span>(totalTasks);</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            <span class="keyword">for</span> (Map.Entry&lt;Integer, Set&lt;AbstractMap.SimpleEntry&lt;String, String&gt;&gt;&gt; entry : domainIdFileKeysResponse.entrySet()) {</span><br><span class="line">                <span class="type">Integer</span> <span class="variable">domainId</span> <span class="operator">=</span> entry.getKey();</span><br><span class="line">                <span class="type">String</span> <span class="variable">domainName</span> <span class="operator">=</span> domainIdMap.get(domainId);</span><br><span class="line">                <span class="type">File</span> <span class="variable">fileDomain</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">File</span>(pathName + domainId + domainName + File.separator);</span><br><span class="line">                <span class="keyword">if</span> (!fileDomain.exists()) {</span><br><span class="line">                    <span class="type">boolean</span> <span class="variable">wasSuccessful</span> <span class="operator">=</span> fileDomain.mkdirs();</span><br><span class="line">                    log.debug(<span class="string">"Create directory {}{}{} {}"</span>, pathName, domainId, domainName, wasSuccessful ? <span class="string">"succeed"</span> : <span class="string">"failed"</span>);</span><br><span class="line">                }</span><br><span class="line">                Set&lt;AbstractMap.SimpleEntry&lt;String, String&gt;&gt; fileUrlResponses = entry.getValue();</span><br><span class="line">                <span class="keyword">for</span> (AbstractMap.SimpleEntry&lt;String, String&gt; fileUrlResponse : fileUrlResponses) {</span><br><span class="line">                    downloadServiceExecutor.execute(() -&gt; {</span><br><span class="line">                        <span class="type">String</span> <span class="variable">responseData</span> <span class="operator">=</span> fileUrlResponse.getValue();</span><br><span class="line">                        <span class="type">String</span> <span class="variable">fileUrl</span> <span class="operator">=</span> fileUrlResponse.getKey();</span><br><span class="line">                        <span class="type">String</span> <span class="variable">downloadPathPre</span> <span class="operator">=</span> pathName + domainId + domainName + File.separator;</span><br><span class="line">                        <span class="keyword">try</span> {</span><br><span class="line">                            <span class="comment">// download the picture</span></span><br><span class="line">                            <span class="type">String</span> <span class="variable">sha256Name</span> <span class="operator">=</span> ImageDownloader.downloadImgFromUrl(fileUrl, downloadPathPre);</span><br><span class="line">                                <span class="keyword">if</span> (sha256Name != <span class="literal">null</span>) {</span><br><span class="line">                                    JsonDownloader.saveStringAsJson(responseData, downloadPathPre + sha256Name.split(<span class="string">"\\."</span>)[<span class="number">0</span>] + <span class="string">".json"</span>);</span><br><span class="line">                                    totalDownloadedFiles.incrementAndGet();</span><br><span class="line">                                }</span><br><span class="line">                        }   <span class="keyword">catch</span> (IOException e) {</span><br><span class="line">                            log.error(<span class="string">"Error Message:{}, URL:{}"</span>, e.getMessage(), fileUrl);</span><br><span class="line">                        } <span class="keyword">catch</span> (NoSuchAlgorithmException e) {</span><br><span class="line">                            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">                        } <span class="keyword">finally</span> {</span><br><span class="line">                            latch.countDown();</span><br><span class="line">                        }</span><br><span class="line">                    });</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            latch.await();</span><br><span class="line">        } <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">            log.error(<span class="string">"Error occurred: "</span>, e);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> totalDownloadedFiles;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;通用的SpringBoot项目下线程池的配置和使用，异步任务的创建和使用等。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Summary" scheme="https://boom1999.github.io/categories/Summary/"/>
    
    
    <category term="SprinBoot" scheme="https://boom1999.github.io/tags/SprinBoot/"/>
    
  </entry>
  
  <entry>
    <title>华为2024暑期实习笔试</title>
    <link href="https://boom1999.github.io/2024/04/18/HUAWEI20240417/"/>
    <id>https://boom1999.github.io/2024/04/18/HUAWEI20240417/</id>
    <published>2024-04-18T00:00:00.000Z</published>
    <updated>2024-04-18T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><span class="github-emoji"><span>📌</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>2024.04.17笔试</p><ol><li>打卡题，队列和字符串模拟/栈模拟</li><li>DFS/BFS</li><li>Dijkstra算法</li></ol><span id="more"></span><hr><h2 id="1-扑克牌消除"><a href="#1-扑克牌消除" class="headerlink" title="1. 扑克牌消除"></a>1. 扑克牌消除</h2><p>从一副扑克牌中随机抽取n张牌组成一个序列，规定连续3张相同牌号的卡牌可以消除，剩余卡牌按照当前顺序重新合并成新的序列后继续消除，重复以上步骤直到无法消除，最后请输出结束后剩余的卡牌序列。注:存在连续4张相同牌号的情况，消除后剩余一张。</p><h3 id="1-1-输入描述"><a href="#1-1-输入描述" class="headerlink" title="1.1 输入描述"></a>1.1 输入描述</h3><p>第一行一个正整数$n(1≤n≤52)$，表示卡牌的数量。<br>第二行一个字符串，以空格分隔代表卡牌号序列，卡牌号仅包含$2-10, A, J, Q, K$。</p><h3 id="1-2-输出描述"><a href="#1-2-输出描述" class="headerlink" title="1.2 输出描述"></a>1.2 输出描述</h3><p>一个字符串，打印最终结束后的卡牌号序列，卡牌号以空格分隔。如果最终没有卡牌剩余输出0。</p><h3 id="1-3-输入样例1"><a href="#1-3-输入样例1" class="headerlink" title="1.3 输入样例1"></a>1.3 输入样例1</h3><h4 id="1-3-1-输入1"><a href="#1-3-1-输入1" class="headerlink" title="1.3.1 输入1"></a>1.3.1 输入1</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10</span><br><span class="line">3 A 2 2 2 A A 7 7 7</span><br></pre></td></tr></tbody></table></figure><h4 id="1-3-2-输出1"><a href="#1-3-2-输出1" class="headerlink" title="1.3.2 输出1"></a>1.3.2 输出1</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></tbody></table></figure><blockquote><p>说明：<br>第一轮三个卡牌2连续消除，剩余卡牌号序列为：3 A A A 7 7 7<br>第二轮三个卡牌A连续消除，剩余卡牌号序列为：3 7 7 7<br>第三轮三个卡牌7连续消除，剩余卡牌号序列为：3<br>输出卡牌号序列:3</p></blockquote><h3 id="1-4-输入样例2"><a href="#1-4-输入样例2" class="headerlink" title="1.4 输入样例2"></a>1.4 输入样例2</h3><h4 id="1-4-1-输入2"><a href="#1-4-1-输入2" class="headerlink" title="1.4.1 输入2"></a>1.4.1 输入2</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">8</span><br><span class="line">A 2 2 2 3 3 2 A</span><br></pre></td></tr></tbody></table></figure><h4 id="1-4-2-输出2"><a href="#1-4-2-输出2" class="headerlink" title="1.4.2 输出2"></a>1.4.2 输出2</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A 3 3 2 A</span><br></pre></td></tr></tbody></table></figure><blockquote><p>说明：<br>第一轮三个卡牌2连续消除，剩余卡牌号序列为：A 3 3 2 A<br>输出卡牌号序列：A 3 3 2 A</p></blockquote><h3 id="1-5-输入样例3"><a href="#1-5-输入样例3" class="headerlink" title="1.5 输入样例3"></a>1.5 输入样例3</h3><h4 id="1-5-1-输入3"><a href="#1-5-1-输入3" class="headerlink" title="1.5.1 输入3"></a>1.5.1 输入3</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">2 3 3 3 2 2</span><br></pre></td></tr></tbody></table></figure><h4 id="1-5-2-输出3"><a href="#1-5-2-输出3" class="headerlink" title="1.5.2 输出3"></a>1.5.2 输出3</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></tbody></table></figure><blockquote><p>说明：<br>第一轮三个卡牌3连续消除，剩余卡牌号序列为：2 2 2<br>第二轮三个卡牌2连续消除，无剩余卡牌<br>输出卡牌号序列：0</p></blockquote><h3 id="1-6-解题思路"><a href="#1-6-解题思路" class="headerlink" title="1.6 解题思路"></a>1.6 解题思路</h3><ul><li>如果长度小于2直接返回，不需要处理<code>in.nextLine().toCharArray()</code></li><li>把所有字符存到<code>String[]</code>数组</li><li>依次将<code>String[]</code>数组的每个值<code>s</code>放入队列<code>queue</code><ul><li>判断<code>queue.size()&gt;=2</code><ul><li>若是，则更新此时队列尾部最后两个值，<code>first</code>和<code>second</code>,然后队尾加入</li><li>若不是，则直接队尾加入<code>queue.offerLast(s);</code></li></ul></li><li>判断最后三个值是否相等（要用<code>.equals()</code>），如果相等则<code>queue.pollLast();</code>三次</li></ul></li><li>用<code>StringBuilder</code>依次拿到队列中所有字符<ul><li>如果队列为空，直接打印<code>0</code></li><li>注意空格的处理<code>if(i&lt;length-1) sb.append(' ');</code></li></ul></li><li>也可以用<code>char[]</code>，但要注意有一个卡牌<code>10</code>，字符只能存一位，所以要有个替代的过程</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> Integer.parseInt(in.nextLine().split(<span class="string">" "</span>)[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">if</span>(n&lt;=<span class="number">2</span>){</span><br><span class="line">            System.out.println(in.nextLine().toString());</span><br><span class="line">            in.close();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        String[] strs = in.nextLine().split(<span class="string">" "</span>);</span><br><span class="line">        LinkedList&lt;String&gt; queue = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">        <span class="type">String</span> <span class="variable">first</span> <span class="operator">=</span> <span class="string">"1"</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">second</span> <span class="operator">=</span> <span class="string">"1"</span>;</span><br><span class="line">        <span class="keyword">for</span>(String s: strs){</span><br><span class="line">            <span class="keyword">if</span>(queue.size()&gt;=<span class="number">2</span>){</span><br><span class="line">                second = queue.pollLast();</span><br><span class="line">                first = queue.peekLast();</span><br><span class="line">                queue.offerLast(second);</span><br><span class="line">            }</span><br><span class="line">            queue.offerLast(s);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">if</span>(s.equals(first) &amp;&amp; s.equals(second) &amp;&amp; queue.size()&gt;=<span class="number">3</span>){</span><br><span class="line">                queue.pollLast();</span><br><span class="line">                queue.pollLast();</span><br><span class="line">                queue.pollLast();</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> queue.size();</span><br><span class="line">        <span class="keyword">if</span>(length==<span class="number">0</span>){</span><br><span class="line">            System.out.println(<span class="string">"0"</span>);</span><br><span class="line">            in.close();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; length; i++){</span><br><span class="line">            <span class="type">String</span> <span class="variable">temp</span> <span class="operator">=</span> queue.pollFirst();</span><br><span class="line">            sb.append(temp);</span><br><span class="line">            <span class="keyword">if</span>(i&lt;length-<span class="number">1</span>) sb.append(<span class="string">' '</span>);</span><br><span class="line">        }</span><br><span class="line">        System.out.println(sb.toString());</span><br><span class="line">        in.close();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="2-计算云服务DI值"><a href="#2-计算云服务DI值" class="headerlink" title="2. 计算云服务DI值"></a>2. 计算云服务DI值</h2><p>我们将云服务看做一棵树，每个云服务在发布前尚未解决的问题称为云服务的遗留问题（云服务的遗留问题包含以该云服务为根节点的树上所有节点的问题），DI值（遗留问题缺陷密度）可以作为评估云服务发布的指标，当云服务DI值小于等于阈值时才准许云服务发布，否则视为风险云服务，需要问题整改完成后重新进行发布评估。现有一批云服务树，已给出云服务树各节点的问题数量，请通过计算输出风险云服务的个数。<br>计算公式：$DI值≤5<em>严重问题数+2</em>一般问题数$，其中每个节点的不同级别问题数量需要将该节点及该节点为根节点的所有子节点的相应级别问题数量求和。</p><h3 id="2-1-输入描述"><a href="#2-1-输入描述" class="headerlink" title="2.1 输入描述"></a>2.1 输入描述</h3><p>第一行输入$M$和$N(M≤100000，N≤1000)$，使用空格分隔，$M$表示代表云服务阈值, $N$表示接下来有$N$行问题统计数据；接下来输入一个$N<em>4$的矩阵表，行内使用空格分隔，第一列$Ai$为服务节点，第二列$Bi$为$Ai$的父节点，如果$Ai$为云服务则无父节点，此时$Bi$用$</em>$号表示($Ai$和$Bi$取值为字符串，$1≤字符串长度≤5$，均由小写英文字母或$*$号组成)，第三列$Ci$为问题级别($Ci$取值为${0,1}$，0表示严重问题，1表示一般问题)，第四列$Di$为该节点该级别的问题数量($Di≤1000$).<br>说明：输入保证只出现树的关系，不会出现连通图的情况。</p><h3 id="2-2-输出描述"><a href="#2-2-输出描述" class="headerlink" title="2.2 输出描述"></a>2.2 输出描述</h3><p>风险云服务个数</p><h3 id="2-3-输入样例1"><a href="#2-3-输入样例1" class="headerlink" title="2.3 输入样例1"></a>2.3 输入样例1</h3><h4 id="2-3-1-输入1"><a href="#2-3-1-输入1" class="headerlink" title="2.3.1 输入1"></a>2.3.1 输入1</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">40 12</span><br><span class="line">a * 0 2</span><br><span class="line">a * 1 2</span><br><span class="line">b a 0 3</span><br><span class="line">b a 1 5</span><br><span class="line">c a 1 3</span><br><span class="line">d a 0 1</span><br><span class="line">d a 1 3</span><br><span class="line">e b 0 2</span><br><span class="line">f * 0 8</span><br><span class="line">f * 1 10</span><br><span class="line">g f 1 2 </span><br><span class="line">h * 0 4</span><br></pre></td></tr></tbody></table></figure><h4 id="2-3-2-输出1"><a href="#2-3-2-输出1" class="headerlink" title="2.3.2 输出1"></a>2.3.2 输出1</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></tbody></table></figure><blockquote><p>说明：<br><code>a * 0 2</code>表示节点a有2个严重问题，$<em>$表示无父节点，即a为云服务。<br><code>b a 1 5</code>表示节点b有5个一般问题，b的父节点是$a$<br>可以看出，该样例有3个云服务a、f、h。<br>云服务a的子节点有b、c、d、e，严重问题个数为$2+3+0+1+2=8$，一般问题个数为$2+5+3+3+0=13$，$DI值=8</em>5+13<em>2=66&gt;阈值40$，故云服务a是风险云服务；<br>云服务f严重问题个数为$8+0=8$，一般问题个数为$10+2=12$，$D值=8</em>5+12<em>2=64&gt;阈值40$，故云服务f也是风险云服务;<br>云服务h严重问题个数为$4$,一般问题个数为$0$，$DI值=4</em>5+0*2=20&lt;=阈值40$，故云服务h不是风险云服务;<br>因此该样例有2个风险云服务。</p></blockquote><h3 id="2-4-输入样例2"><a href="#2-4-输入样例2" class="headerlink" title="2.4 输入样例2"></a>2.4 输入样例2</h3><h4 id="2-4-1-输入2"><a href="#2-4-1-输入2" class="headerlink" title="2.4.1 输入2"></a>2.4.1 输入2</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">50 10</span><br><span class="line">b a 1 5</span><br><span class="line">a * 0 2</span><br><span class="line">b a 0 3</span><br><span class="line">c a 1 3</span><br><span class="line">d a 0 1</span><br><span class="line">a * 1 2</span><br><span class="line">d a 1 3</span><br><span class="line">e b 0 2</span><br><span class="line">f b 1 1</span><br><span class="line">g c 1 2</span><br></pre></td></tr></tbody></table></figure><h4 id="2-4-2-输出2"><a href="#2-4-2-输出2" class="headerlink" title="2.4.2 输出2"></a>2.4.2 输出2</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></tbody></table></figure><blockquote><p>说明：<br><code>a * 0 2</code>表示节点a有2个严重问题，$<em>$表示无父节点，即a为云服务。<br><code>b a 1 5</code>表示节点b有5个一般问题，b的父节点是$a$<br>可以看出，该样例只有1个云服务a。<br>严重问题个数为$2+3+0+1+2+0+0=8$，一般问题个数为$2+5+3+3+0+1+2=16$，$DI值=8</em>5+16*2=72&gt;阈值50$，故云服务a是风险云服务；<br>因此该样例有1个风险云服务。</p></blockquote><h3 id="2-5-解题思路"><a href="#2-5-解题思路" class="headerlink" title="2.5 解题思路"></a>2.5 解题思路</h3><ul><li>看起来很复杂，但其实就是构建树，对每棵树上每个节点的一般问题和严重问题进行统计，然后加权计算风险值</li><li>用两个cnt的map存每个节点一般问题和严重问题数量</li><li>用一个parent的map存节点和父节点的关系<ul><li>向上迭代找到每个节点的根节点，将当前节点的两个cnt加到根节点上</li></ul></li><li>用一个set存根节点<ul><li>遍历根节点，从两个cnt中拿到值进行加权计算判断超出范围的根节点有多少</li></ul></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> PastPapers.HUAWEI0417.Q2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        String[] mn = in.nextLine().split(<span class="string">" "</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> Integer.parseInt(mn[<span class="number">0</span>]);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> Integer.parseInt(mn[<span class="number">1</span>]);</span><br><span class="line">        Map&lt;String, String&gt; parent = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();   <span class="comment">// 记录节点的父节点</span></span><br><span class="line">        Map&lt;String, Integer&gt; cnt1 = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();    <span class="comment">// 记录节点的值为0的个数</span></span><br><span class="line">        Map&lt;String, Integer&gt; cnt2 = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();    <span class="comment">// 记录节点的值为1的个数</span></span><br><span class="line">        Set&lt;String&gt; st = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();               <span class="comment">// 记录根节点</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// process input</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++){</span><br><span class="line">            String[] strs = in.nextLine().split(<span class="string">" "</span>);</span><br><span class="line">            <span class="type">String</span> <span class="variable">u</span> <span class="operator">=</span> strs[<span class="number">0</span>];</span><br><span class="line">            <span class="type">String</span> <span class="variable">v</span> <span class="operator">=</span> strs[<span class="number">1</span>];</span><br><span class="line">            <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> Integer.parseInt(strs[<span class="number">2</span>]);</span><br><span class="line">            <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> Integer.parseInt(strs[<span class="number">3</span>]);</span><br><span class="line">            <span class="comment">// 判断父节点还是子节点</span></span><br><span class="line">            <span class="keyword">if</span>(v.equals(<span class="string">"*"</span>)){</span><br><span class="line">                <span class="comment">// st存的是每一棵树的根节点</span></span><br><span class="line">                st.add(u);</span><br><span class="line">                <span class="keyword">if</span>(x == <span class="number">0</span>) cnt1.put(u, cnt1.getOrDefault(u, <span class="number">0</span>)+y);</span><br><span class="line">                <span class="keyword">else</span> cnt2.put(u, cnt2.getOrDefault(u, <span class="number">0</span>)+y);</span><br><span class="line">            } <span class="keyword">else</span>{</span><br><span class="line">                <span class="comment">//记录节点u的父节点是v</span></span><br><span class="line">                parent.put(u, v);</span><br><span class="line">                <span class="keyword">if</span>(x == <span class="number">0</span>) cnt1.put(u, cnt1.getOrDefault(u, <span class="number">0</span>)+y);</span><br><span class="line">                <span class="keyword">else</span> cnt2.put(u, cnt2.getOrDefault(u, <span class="number">0</span>)+y);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">// update 每个节点的0和1的个数到根节点上</span></span><br><span class="line">        <span class="keyword">for</span>(Map.Entry&lt;String, String&gt; entry: parent.entrySet()){</span><br><span class="line">            <span class="comment">// 遍历所有非根节点，也就是遍历parent,拿到entry</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">u</span> <span class="operator">=</span> entry.getKey();</span><br><span class="line">            <span class="comment">// 向上找到根节点</span></span><br><span class="line">            <span class="keyword">while</span> (parent.containsKey(u)){</span><br><span class="line">                u = parent.get(u);</span><br><span class="line">            }</span><br><span class="line">            <span class="comment">// 更新根节点的cnt1和cnt2</span></span><br><span class="line">            cnt1.put(u, cnt1.getOrDefault(u, <span class="number">0</span>)+cnt1.getOrDefault(entry.getKey(), <span class="number">0</span>));</span><br><span class="line">            cnt2.put(u, cnt2.getOrDefault(u, <span class="number">0</span>)+cnt2.getOrDefault(entry.getKey(), <span class="number">0</span>));</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        <span class="comment">// iterate the root node</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">ans</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(String s: st){</span><br><span class="line">            <span class="type">int</span> <span class="variable">val</span> <span class="operator">=</span> <span class="number">5</span> * cnt1.getOrDefault(s, <span class="number">0</span>) + <span class="number">2</span> * cnt2.getOrDefault(s, <span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span>(val &gt; m) ans++;</span><br><span class="line">        }</span><br><span class="line"></span><br><span class="line">        System.out.println(ans);</span><br><span class="line">        in.close();</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="3-云上故障逃生"><a href="#3-云上故障逃生" class="headerlink" title="3. 云上故障逃生"></a>3. 云上故障逃生</h2><p>在云上多个业务节点之间选择最快的逃生节点集，并考虑每个节点的剩余业务容量。有一个网络时延表，表示每个节点到其他节点的通信延迟;还有一个剩余业务容量表，表示每个节点的剩余业务容量。在一个节点故障时，需要选择一个或多个逃生节点，确保逃生路径的时延最小，并且逃生节点集各节点剩余容量的总和足够容纳故障节点的业务量，当故障节点与多个节点最短距离相同，优先选择编号较小的节点容灾，如果逃生节点集中多个节点最短距离相同时按编号从小到大的顺序排列。</p><h3 id="3-1-输入描述"><a href="#3-1-输入描述" class="headerlink" title="3.1 输入描述"></a>3.1 输入描述</h3><ul><li>第1行n表示云上业务节点数，$2&lt;=n&lt;=10000$，节点编号从0开始，依次递增；</li><li>第2到1+n行表示业务节点间的网络时延矩阵表$delayMatrix$，$delayMatrix[i][j]$表示节点$i$到节点$j$的通信时延;<ul><li>如果节点$i$和节点$j$之间没有直接相连的边，则$delayMatrix[i][j]$为$-1$，第个$i$节点和它自己也没有边，所以$delayMatrix[i][i]=-1$</li><li>节点间有边时延范围为$1&lt;=delayMatrix[i][j]&lt;=1000$，矩阵元素间使用空格分割</li><li>另，输入保证$delayMatrix[i][j] == delayMatrix[j][i]$</li></ul></li><li>第2+n行表示各业务节点的剩余容量表$remainingCapacity$，其中$remainingCapacity[i]$表示节点$i$的剩余业务容量，业务量的范围$1&lt;=remmainingCapacity[i]&lt;=100$，数组元素间使用空格分割;</li><li>第3+n行表示故障业务节点编号$faultyNode$，表示发生故障的节点，取值范围为$0&lt;=faultyNode&lt;=n-1$</li><li>第4+n行表示受损业务节点需要迁移的业务量，受损业务量的范围$(0- 1000]$。</li></ul><h3 id="3-2-输出描述"><a href="#3-2-输出描述" class="headerlink" title="3.2 输出描述"></a>3.2 输出描述</h3><p>返回符合条件的逃生路径节点编号列表(以单空格间隔)，当所有节点都不够故障节点业务容灾的时候输出所有容灾节点。</p><h3 id="3-3-输入样例1"><a href="#3-3-输入样例1" class="headerlink" title="3.3 输入样例1"></a>3.3 输入样例1</h3><h4 id="3-3-1-输入1"><a href="#3-3-1-输入1" class="headerlink" title="3.3.1 输入1"></a>3.3.1 输入1</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">-1 5 -1 8</span><br><span class="line">5 -1 1 3</span><br><span class="line">-1 1 -1 4</span><br><span class="line">8 3 4 -1</span><br><span class="line">10 20 15 25</span><br><span class="line">2</span><br><span class="line">12</span><br></pre></td></tr></tbody></table></figure><h4 id="3-3-2-输出1"><a href="#3-3-2-输出1" class="headerlink" title="3.3.2 输出1"></a>3.3.2 输出1</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></tbody></table></figure><h4 id="3-3-3-解释1"><a href="#3-3-3-解释1" class="headerlink" title="3.3.3 解释1"></a>3.3.3 解释1</h4><div><div class="graphviz">digraph G {    rankdir=TB;    ranksep=0.5;    nodesep=1.5;    {        rank=same; 0; 1;    }    {        rank=same; 2; 3;    }    0 [label="Node 0\n10", fillcolor=lightblue, style=filled];    1 [label="Node 1\n20", fillcolor=lightblue, style=filled];    2 [label="Node 2\n15", fillcolor=red, style=filled];    3 [label="Node 3\n25", fillcolor=lightblue, style=filled];    0 -&gt; 1 [label="5", dir="both"];    1 -&gt; 2 [label="1", dir="both"];    1 -&gt; 3 [label="3", dir="both"];    0 -&gt; 3 [label="8", dir="both"];    2 -&gt; 3 [label="4", dir="both"];}</div></div><div class="table-container"><table><thead><tr><th style="text-align:center">Node</th><th style="text-align:center">0</th><th style="text-align:center">1</th><th style="text-align:center">2</th><th style="text-align:center">3</th></tr></thead><tbody><tr><td style="text-align:center">minDist</td><td style="text-align:center">6</td><td style="text-align:center">1</td><td style="text-align:center">∞</td><td style="text-align:center">4</td></tr></tbody></table></div><blockquote><p>说明：<br>在给定的测试用例中，假设节点$2$发生故障，需要迁移业务量为$12$<br>离故障节点$2$时延排序为$1,3,0$，故障节点要转移的业务量为$12$，而节点$1$的可容灾余量为$20$，足够容纳故障节点$2$的受灾业务，所以该测试用例的期望输出是<code>1</code>。</p></blockquote><h3 id="3-4-输入样例2"><a href="#3-4-输入样例2" class="headerlink" title="3.4 输入样例2"></a>3.4 输入样例2</h3><h4 id="3-4-1-输入2"><a href="#3-4-1-输入2" class="headerlink" title="3.4.1 输入2"></a>3.4.1 输入2</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">-1 5 -1 8</span><br><span class="line">5 -1 1 3</span><br><span class="line">-1 1 -1 4</span><br><span class="line">8 3 4 -1</span><br><span class="line">10 20 15 25</span><br><span class="line">2</span><br><span class="line">50</span><br></pre></td></tr></tbody></table></figure><h4 id="3-4-2-输出2"><a href="#3-4-2-输出2" class="headerlink" title="3.4.2 输出2"></a>3.4.2 输出2</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 3 0</span><br></pre></td></tr></tbody></table></figure><h4 id="3-4-3解释2"><a href="#3-4-3解释2" class="headerlink" title="3.4.3解释2"></a>3.4.3解释2</h4><div><div class="graphviz">digraph G {    rankdir=TB;    ranksep=0.5;    nodesep=1.5;    {        rank=same; 0; 1;    }    {        rank=same; 2; 3;    }    0 [label="Node 0\n10", fillcolor=lightblue, style=filled];    1 [label="Node 1\n20", fillcolor=lightblue, style=filled];    2 [label="Node 2\n30", fillcolor=red, style=filled];    3 [label="Node 3\n25", fillcolor=lightblue, style=filled];    0 -&gt; 1 [label="5", dir="both"];    1 -&gt; 2 [label="1", dir="both"];    1 -&gt; 3 [label="3", dir="both"];    0 -&gt; 3 [label="8", dir="both"];    2 -&gt; 3 [label="4", dir="both"];}</div></div><div class="table-container"><table><thead><tr><th style="text-align:center">Node</th><th style="text-align:center">0</th><th style="text-align:center">1</th><th style="text-align:center">2</th><th style="text-align:center">3</th></tr></thead><tbody><tr><td style="text-align:center">minDist</td><td style="text-align:center">6</td><td style="text-align:center">1</td><td style="text-align:center">∞</td><td style="text-align:center">4</td></tr></tbody></table></div><blockquote><p>说明：<br>在给定的测试用例中，假设节点$2$发生故障，需要迁移业务量为$50$<br>离故障节点$2$时延排序为$1,3,0$，故障节点要转移的业务量为$12$，而节点$1$的可容灾余量为$20$，不够容纳故障节点$2$的受灾业务$30$，所以还需找离节点$2$次近的节点$3$，节点$3$的可容灾余量为$25$，节点$1$的可容灾余量$20$和节点$3$的可容灾余量$25$的总和为$45$小于故障量$50$，需要增加$0$节点来容灾，节点$0$的容灾余量为$10$，节点$1,3,0$总容灾余量为$55$，大于受灾节点的业务量$50$，所以该测试用例的期望输出是<code>1 3 0</code>。</p></blockquote><h3 id="3-5-解题思路"><a href="#3-5-解题思路" class="headerlink" title="3.5 解题思路"></a>3.5 解题思路</h3><ul><li>主要是用$Dijkstra$算法</li></ul><ol><li>通过<code>Scanner</code>从输入中读取数据。首先读取一个整数<code>n</code>，它表示图中的节点数量。初始化一个二维数组<code>g</code>和一个一维数组<code>cap</code>，<code>g</code>用于存储图的距离的邻接矩阵，<code>cap</code>用于存储每个节点的容量。</li><li>读取故障节点<code>nodeIndex</code>和受灾业务容量<code>faulty</code>。</li><li>$dijkstra$函数，传入图的邻接矩阵和故障节点的索引，得到从故障节点到其他所有节点的最短路径。结果是一个二维数组<code>res</code>，每个元素是一个包含两个元素的数组，第一个元素是距离，第二个元素是节点索引。</li><li>对$dijkstra$的结果进行自定义排序。首先按照距离排序，如果距离相同，则按照节点索引排序。</li><li>初始化一个<code>StringBuilder</code>用于存储结果，初始化一个变量<code>sum</code>用于存储累计的容量。</li><li>遍历排序后的结果，累加每个节点的容量到<code>sum</code>，并将节点索引添加到 <code>StringBuilder</code>。当<code>sum</code>大于等于<code>faulty</code>时，停止遍历。</li><li>删除<code>StringBuilder</code>最后一个字符（一个多余的空格），输出结果。</li></ol><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> Integer.parseInt(in.nextLine().split(<span class="string">" "</span>)[<span class="number">0</span>]);</span><br><span class="line">        <span class="type">int</span>[][] g = <span class="keyword">new</span> <span class="title class_">int</span>[n][n];</span><br><span class="line">        <span class="type">int</span>[] cap = <span class="keyword">new</span> <span class="title class_">int</span>[n];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++){</span><br><span class="line">            String[] tempDelay = in.nextLine().split(<span class="string">" "</span>);</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; n; j++){</span><br><span class="line">                g[i][j] = Integer.parseInt(tempDelay[j]);</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        String[] tempCap = in.nextLine().split(<span class="string">" "</span>);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++){</span><br><span class="line">            cap[i] = Integer.parseInt(tempCap[i]);</span><br><span class="line">        }</span><br><span class="line">        <span class="type">int</span> <span class="variable">nodeIndex</span> <span class="operator">=</span> Integer.parseInt(in.nextLine().split(<span class="string">" "</span>)[<span class="number">0</span>]);</span><br><span class="line">        <span class="type">int</span> <span class="variable">faulty</span> <span class="operator">=</span> Integer.parseInt(in.nextLine().split(<span class="string">" "</span>)[<span class="number">0</span>]);</span><br><span class="line">        <span class="type">int</span>[][] res = dijkstra(g, nodeIndex);</span><br><span class="line">        Arrays.sort(res, (a, b)-&gt;a[<span class="number">0</span>]==b[<span class="number">0</span>] ? a[<span class="number">1</span>]-b[<span class="number">1</span>] : a[<span class="number">0</span>]-b[<span class="number">0</span>]);</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">ans</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; n; i++){</span><br><span class="line">            sum += cap[res[i][<span class="number">1</span>]];</span><br><span class="line">            ans.append(res[i][<span class="number">1</span>]);</span><br><span class="line">            ans.append(<span class="string">' '</span>);</span><br><span class="line">            <span class="keyword">if</span>(sum&gt;=faulty) <span class="keyword">break</span>;</span><br><span class="line">        }</span><br><span class="line">        ans.deleteCharAt(ans.length()-<span class="number">1</span>);</span><br><span class="line">        System.out.println(ans);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span>[][] dijkstra(<span class="type">int</span>[][] g, <span class="type">int</span> s){</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> g.length;</span><br><span class="line">        <span class="type">int</span>[] dist = <span class="keyword">new</span> <span class="title class_">int</span>[n];</span><br><span class="line">        Arrays.fill(dist, Integer.MAX_VALUE);</span><br><span class="line">        dist[s] = <span class="number">0</span>;</span><br><span class="line">        <span class="type">boolean</span>[] vis = <span class="keyword">new</span> <span class="title class_">boolean</span>[n];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++){</span><br><span class="line">            <span class="type">int</span> <span class="variable">t</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; n; j++){</span><br><span class="line">                <span class="keyword">if</span>(!vis[j]&amp;&amp;(t==-<span class="number">1</span>||(dist[t]&gt;dist[j]))){</span><br><span class="line">                    t=j;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            vis[t] = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; n; j++){</span><br><span class="line">                <span class="keyword">if</span>(g[t][j]&lt;<span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">if</span>(dist[t]+g[t][j]&lt;dist[j]){</span><br><span class="line">                    dist[j] = dist[t]+g[t][j];</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="type">int</span>[][] res = <span class="keyword">new</span> <span class="title class_">int</span>[n][<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++){</span><br><span class="line">            res[i][<span class="number">0</span>] = dist[i];</span><br><span class="line">            res[i][<span class="number">1</span>] = i;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;📌&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png?v8&quot; aria-hidden=&quot;true&quot; onerror=&quot;this.parent.classList.add(&#39;github-emoji-fallback&#39;)&quot;&gt;&lt;/span&gt;2024.04.17笔试&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;打卡题，队列和字符串模拟/栈模拟&lt;/li&gt;
&lt;li&gt;DFS/BFS&lt;/li&gt;
&lt;li&gt;Dijkstra算法&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Summary" scheme="https://boom1999.github.io/categories/Summary/"/>
    
    
    <category term="LinkedList" scheme="https://boom1999.github.io/tags/LinkedList/"/>
    
    <category term="UndirectedGraph" scheme="https://boom1999.github.io/tags/UndirectedGraph/"/>
    
    <category term="BackTrack" scheme="https://boom1999.github.io/tags/BackTrack/"/>
    
  </entry>
  
  <entry>
    <title>application yml配置</title>
    <link href="https://boom1999.github.io/2024/04/12/application%20yml%E9%85%8D%E7%BD%AE/"/>
    <id>https://boom1999.github.io/2024/04/12/application%20yml%E9%85%8D%E7%BD%AE/</id>
    <published>2024-04-12T00:00:00.000Z</published>
    <updated>2024-04-12T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><code>SpringBoot</code>常用配置文件<code>application.properties</code>或<code>application.yml</code>进行全局配置，<code>start.spring.io</code>的默认是用<code>properties</code>，只要改成<code>yml</code>文件即可，个人认为语法更舒适，在这篇记录一些常用的设置以及常用的一些包的参数，以便后续开发过程中及时翻阅，持续更新。</p></blockquote><span id="more"></span><h2 id="books-1-application配置文件"><a href="#books-1-application配置文件" class="headerlink" title=":books: 1. application配置文件"></a><span class="github-emoji"><span>📚</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4da.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 1. application配置文件</h2><h3 id="1-1-全局配置文件"><a href="#1-1-全局配置文件" class="headerlink" title="1.1. 全局配置文件"></a>1.1. 全局配置文件</h3><blockquote><p>启动类下的全局配置，修改<code>SpringBoot</code>在底层的默认值</p></blockquote><ul><li><code>application.properties</code></li><li><code>application.yml</code></li></ul><h3 id="1-2-Proterties和YML以及XML区别"><a href="#1-2-Proterties和YML以及XML区别" class="headerlink" title="1.2. Proterties和YML以及XML区别"></a>1.2. Proterties和YML以及XML区别</h3><ul><li><p><code>Properties</code></p>  <figure class="highlight properties"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server.port</span>=<span class="string">8080</span></span><br></pre></td></tr></tbody></table></figure></li><li><p><code>YAML</code></p>  <figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">8080</span></span><br></pre></td></tr></tbody></table></figure></li><li><p><code>XML</code></p>  <figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">server</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">port</span>&gt;</span>8080<span class="tag">&lt;/<span class="name">port</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">server</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li></ul><h2 id="satellite-2-YAML语法"><a href="#satellite-2-YAML语法" class="headerlink" title=":satellite: 2. YAML语法"></a><span class="github-emoji"><span>📡</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4e1.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 2. YAML语法</h2><h3 id="2-1-基本语法"><a href="#2-1-基本语法" class="headerlink" title="2.1. 基本语法"></a>2.1. 基本语法</h3><ul><li>KV键值对，空格缩进（一般2格），左对齐的为同一层级</li><li>属性和值大小写敏感，值不能空着</li></ul><h3 id="2-2-字面量"><a href="#2-2-字面量" class="headerlink" title="2.2. 字面量"></a>2.2. 字面量</h3><ul><li>字符串，默认不需要使用引号<ul><li>单引号，不会转义特殊字符例如’aaa \n bbb’不会输出换行</li><li>双引号，会转义特殊字符例如”aaa \n bbb”会输出换行</li></ul></li><li>布尔，<code>True</code>或<code>true</code>，<code>Flase</code>或<code>false</code></li><li>整数，<code>123</code>或<code>0b1010_0111_0100_1010_1110</code></li><li>浮点数，<code>0.123</code>或者科学计数<code>6.85e+5</code></li><li><code>NULL</code>，可用<code>~</code>表示<code>null</code></li><li>日期，2024-07-12`，日期使用ISO 8601格式，yyyy-MM-dd</li><li>时间，<code>2024-07-12T14:31:00+08:00</code>，时间使用ISO 8601格式，时间和日期之间使用T连接，最后使用+代表时区</li></ul><h3 id="2-3-对象"><a href="#2-3-对象" class="headerlink" title="2.3. 对象"></a>2.3. 对象</h3><ul><li><p>普通的缩进表示层级联系</p>  <figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">redis:</span></span><br><span class="line">  <span class="attr">host:</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.111</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">6379</span></span><br><span class="line">  <span class="attr">password:</span> <span class="number">123456</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>行内写法</p>  <figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">redis:</span> {<span class="attr">host:</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.111</span>,<span class="attr">port:</span> <span class="number">6379</span>,<span class="attr">password:</span> <span class="number">123456</span>}</span><br></pre></td></tr></tbody></table></figure></li></ul><h3 id="2-4-数组"><a href="#2-4-数组" class="headerlink" title="2.4. 数组"></a>2.4. 数组</h3><ul><li><p>普通写法，用<code>-</code>表示</p>  <figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">persons:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">zhangsan</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">lisi</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">wangwu</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>行内写法，用<code>[]</code></p>  <figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">persons:</span> [<span class="string">zhangsan</span>,<span class="string">lisi</span>,<span class="string">wangwu</span>]</span><br></pre></td></tr></tbody></table></figure></li></ul><h3 id="2-5-锚点"><a href="#2-5-锚点" class="headerlink" title="2.5. 锚点"></a>2.5. 锚点</h3><ul><li><p>用<code>&amp;</code>建立锚点，用<code>&lt;&lt;</code>合并数据，用<code>*</code>引用锚点内容</p>  <figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">defaults:</span> <span class="meta">&amp;defaults</span></span><br><span class="line">  <span class="attr">host:</span>  <span class="number">192.168</span><span class="number">.1</span><span class="number">.129</span></span><br><span class="line">  <span class="attr">port:</span>  <span class="number">8080</span></span><br><span class="line"></span><br><span class="line"><span class="attr">dev:</span></span><br><span class="line">  <span class="attr">database:</span> <span class="string">dev_db</span></span><br><span class="line">  <span class="string">&lt;&lt;:</span> <span class="meta">*defaults</span></span><br><span class="line"></span><br><span class="line"><span class="attr">prod:</span></span><br><span class="line">  <span class="attr">database:</span> <span class="string">prod_db</span></span><br><span class="line">  <span class="string">&lt;&lt;:</span> <span class="meta">*defaults</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 相当于</span></span><br><span class="line"><span class="comment"># defaults: </span></span><br><span class="line"><span class="comment">#   host:  192.168.1.111</span></span><br><span class="line"><span class="comment">#   port:  6379</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># dev:</span></span><br><span class="line"><span class="comment">#   database: dev_db</span></span><br><span class="line"><span class="comment">#   host:  192.168.1.111</span></span><br><span class="line"><span class="comment">#   port:  6379</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># prod:</span></span><br><span class="line"><span class="comment">#   database: prod_db</span></span><br><span class="line"><span class="comment">#   host:  192.168.1.111</span></span><br><span class="line"><span class="comment">#   port:  6379</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>直接在键后设置锚点，加空格后紧跟值，锚点名自定义，引用同样用<code>*</code></p>  <figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">defaults:</span> </span><br><span class="line">  <span class="attr">host:</span>  <span class="string">&amp;host</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.129</span></span><br><span class="line">  <span class="attr">port:</span>  <span class="string">&amp;port</span> <span class="number">8080</span></span><br><span class="line"></span><br><span class="line"><span class="attr">dev:</span></span><br><span class="line">  <span class="attr">database:</span> <span class="string">dev_db</span></span><br><span class="line">  <span class="attr">host:</span>  <span class="meta">*host</span></span><br><span class="line">  <span class="attr">port:</span>  <span class="meta">*port</span></span><br><span class="line"></span><br><span class="line"><span class="attr">prod:</span></span><br><span class="line">  <span class="attr">database:</span> <span class="string">prod_db</span></span><br><span class="line">  <span class="attr">host:</span>  <span class="meta">*host</span></span><br><span class="line">  <span class="attr">port:</span>  <span class="meta">*port</span></span><br></pre></td></tr></tbody></table></figure></li></ul><h2 id="mag-right-3-配置文件注入"><a href="#mag-right-3-配置文件注入" class="headerlink" title=":mag_right: 3. 配置文件注入"></a><span class="github-emoji"><span>🔎</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f50e.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 3. 配置文件注入</h2><ul><li>一般用注解<code>@ConfigurationProperties(prefix = "async.executor.thread")</code>，加上<code>@Data</code>注解或自己写<code>getter</code>和<code>setter</code>方法<ul><li>配合<code>@Component</code>定义组件，来定义配置数据的结构Properties</li><li>再配合<code>@Configuration</code>使用，用于定义配置类，再在配置类中注入配置文件的结构Properties，当然也可合并成一步</li></ul></li><li>只有容器中的组件，才能提供<code>@ConfigurationProperties</code>功能</li><li><p><code>prefix = "xxx.xxx"</code>是映射该路径下的配置文件，这里定义好<code>getter</code>和<code>setter</code>方法就能直接调用<code>setKeepAliveSeconds(int keepAliveSeconds)</code>等方法</p>  <figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">async:</span></span><br><span class="line"><span class="attr">executor:</span></span><br><span class="line">    <span class="attr">thread:</span></span><br><span class="line">    <span class="attr">keepAliveSeconds:</span> <span class="number">60</span></span><br><span class="line">    <span class="attr">namePrefix:</span> <span class="string">async-service-</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>可能需要<code>@ComponentScan(basePackages = {"com.***", "com.***"})</code>，扫描组件所在的<code>module</code></p></li><li><p>可选导入配置文件冲处理器，这样会有提示</p>  <figure class="highlight xml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-configuration-processor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>可选用@Value配置</p><ul><li><p>若要在某个业务逻辑中要用到配置的值，可以用<code>@Value</code>，若已经整体设计了配置类的组件，则建议用<code>@ConfigurationProperties</code>批量注入</p><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Value("${thread.keepAliveSeconds}")</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> keepAliveSeconds;</span><br></pre></td></tr></tbody></table></figure></li><li><p>不支持松散绑定(Relaxed bindiing)，批量注入支持，<code>firstName</code>和<code>first-name</code>和<code>first_name</code></p></li><li>支持SPEL，批量注入不支持</li><li>不持支map、对象等复杂类型以及JSR303校验</li></ul></li></ul><h2 id="zzz-4-多环境支持"><a href="#zzz-4-多环境支持" class="headerlink" title=":zzz: 4. 多环境支持"></a><span class="github-emoji"><span>💤</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a4.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 4. 多环境支持</h2><ul><li><code>application-{profile}.properties/yml</code>在测试环境和生成环境用不同的配置，包括一些<code>id</code>和<code>key</code>等重要的信息切换，例如<code>application-dev.yml</code>和<code>application-prod.yml</code>，再用<code>${xxx.xxx.driver-class-name}</code>在主配置文件中引入不同环境的配置参数</li><li><code>properties</code>优先级大于同级别的<code>yml</code>，要么删掉要么确保内有相同内容被指定</li><li><p>指定测试或生产环境，可以在<code>application.yml</code>中指定，或者打包jar时配置启动参数<code>Program arguments</code>为<code>--spring.profiles.active=dev</code>或者配置虚拟机参数<code>VM options</code>为<code>-Dspring.profiles.active=dev</code></p>  <figure class="highlight yml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">profiles:</span></span><br><span class="line">    <span class="attr">active:</span> <span class="string">"dev"</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>加载顺序</p>  <figure class="highlight md"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">–file:./config/（根目录下的config文件夹）</span><br><span class="line"></span><br><span class="line">–file:./（根目录下）</span><br><span class="line"></span><br><span class="line">–classpath:/config/（resources/config）</span><br><span class="line"></span><br><span class="line">–classpath:/（resources）</span><br></pre></td></tr></tbody></table></figure></li><li><p>启动类开启<code>@EnableAutoConfiguration</code>（<code>@SpringBootApplication</code>已经引入，不用重复）</p></li></ul>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;SpringBoot&lt;/code&gt;常用配置文件&lt;code&gt;application.properties&lt;/code&gt;或&lt;code&gt;application.yml&lt;/code&gt;进行全局配置，&lt;code&gt;start.spring.io&lt;/code&gt;的默认是用&lt;code&gt;properties&lt;/code&gt;，只要改成&lt;code&gt;yml&lt;/code&gt;文件即可，个人认为语法更舒适，在这篇记录一些常用的设置以及常用的一些包的参数，以便后续开发过程中及时翻阅，持续更新。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Summary" scheme="https://boom1999.github.io/categories/Summary/"/>
    
    
    <category term="SprinBoot" scheme="https://boom1999.github.io/tags/SprinBoot/"/>
    
    <category term="application" scheme="https://boom1999.github.io/tags/application/"/>
    
  </entry>
  
  <entry>
    <title>腾讯2024暑期实习笔试</title>
    <link href="https://boom1999.github.io/2024/04/01/TencentTest20240331/"/>
    <id>https://boom1999.github.io/2024/04/01/TencentTest20240331/</id>
    <published>2024-04-01T00:00:00.000Z</published>
    <updated>2024-04-01T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<ol><li>打卡题目，无向图的邻接表，遍历判断</li><li>判断分段拼接链表后，是否整段升序</li><li>连通图，非连通的图增加一条边恰好连通的方案数</li><li>异或前缀和+动态规划</li><li>遍历+回溯判断矩阵构成字符串</li></ol><span id="more"></span><hr><h2 id="1-题目描述"><a href="#1-题目描述" class="headerlink" title="1. 题目描述"></a>1. 题目描述</h2><p>小红拿到了一个无向图，其中一些边被染成了红色。<br>小红定义一个点是“好点”，当且仅当这个点的所有邻边都是红边。<br>现在请你求出这个无向图“好点”的数量。<br>注：如果一个节点没有任何邻边，那么它也是好点。</p><h3 id="1-1-输入描述"><a href="#1-1-输入描述" class="headerlink" title="1.1 输入描述"></a>1.1 输入描述</h3><p>第一行输入两个正整数n,m，代表节点的数量和边的数量。<br>接下来的m行，每行输入两个正整数u,v和一个字符chr，代表节点u和节点v有一条边连接<br>如果 chr 为’R’，代表这条边被染红；’W’代表未被染色。</p><h3 id="1-2-输出描述"><a href="#1-2-输出描述" class="headerlink" title="1.2 输出描述"></a>1.2 输出描述</h3><p>$<br>1\leq n,m \leq 10^5<br>1\leq u,v \leq n<br>$</p><h3 id="1-3-输入样例"><a href="#1-3-输入样例" class="headerlink" title="1.3 输入样例"></a>1.3 输入样例</h3><h4 id="1-3-1-输入"><a href="#1-3-1-输入" class="headerlink" title="1.3.1 输入"></a>1.3.1 输入</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4 4</span><br><span class="line">1 2 R</span><br><span class="line">2 3 W</span><br><span class="line">3 4 W</span><br><span class="line">1 4 R</span><br></pre></td></tr></tbody></table></figure><h4 id="1-3-2-输出"><a href="#1-3-2-输出" class="headerlink" title="1.3.2 输出"></a>1.3.2 输出</h4><p>一个整数，代表“好点”的数量。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></tbody></table></figure><blockquote><p>说明：只有 1 号节点是好点。</p></blockquote><h3 id="1-4-解题思路"><a href="#1-4-解题思路" class="headerlink" title="1.4 解题思路"></a>1.4 解题思路</h3><ul><li>用一个无向图<code>UndirectedGraph</code>包含节点数量<code>V</code>和一个<code>Edge</code>泛型的<code>LinkedList</code>，遍历输入的边通过<code>addEdge(int src, int dest, boolean colored)</code>在无向图中同时分别存入起始点<code>src</code>和终点<code>dest</code>的边，并且标记是否<code>colored</code></li><li>通过<code>countGood()</code>遍历无向图的<code>LinkedList</code>，判断以当前节点为起点或终点的边是否有颜色，同时默认值是<code>true</code>（即无邻边），都无颜色或无邻边则返回<code>true</code>, 即题意的好点</li><li>Attention：<code>boolean colored = in.next().equals("R")?true:false;</code>，区分<code>==</code>和<code>.equals()</code></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注意类名必须为 Main, 不要有任何 package xxx 信息</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="keyword">try</span> (<span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in)) {</span><br><span class="line">            <span class="comment">// 注意 hasNext 和 hasNextLine 的区别</span></span><br><span class="line">            <span class="comment">// 节点数量</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">            <span class="comment">// 边的数量</span></span><br><span class="line">            <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">            <span class="comment">//  创建无向图</span></span><br><span class="line">            <span class="type">UndirectedGraph</span> <span class="variable">graph</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UndirectedGraph</span>(n);</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; m; i++) {</span><br><span class="line">                <span class="type">int</span> <span class="variable">src</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">                <span class="type">int</span> <span class="variable">dest</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">                <span class="comment">// 注意这里要用 equals 方法，不能用 == 比较，因为 next 返回的是 String 对象，== 比较的是引用</span></span><br><span class="line">                <span class="type">boolean</span> <span class="variable">colored</span> <span class="operator">=</span> in.next().equals(<span class="string">"R"</span>)?<span class="literal">true</span>:<span class="literal">false</span>;</span><br><span class="line">                <span class="comment">// 添加边，注意节点编号从 1 开始，要减 1</span></span><br><span class="line">                graph.addEdge(src-<span class="number">1</span>, dest-<span class="number">1</span>, colored);</span><br><span class="line">            }</span><br><span class="line">            <span class="type">int</span> <span class="variable">goodCount</span> <span class="operator">=</span> graph.countGood();</span><br><span class="line">            System.out.print(goodCount);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Edge</span> {</span><br><span class="line">    <span class="type">int</span> dest;</span><br><span class="line">    <span class="type">boolean</span> colored;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Edge</span><span class="params">(<span class="type">int</span> dest, <span class="type">boolean</span> colored)</span> {</span><br><span class="line">        <span class="built_in">this</span>.dest = dest;</span><br><span class="line">        <span class="built_in">this</span>.colored = colored;</span><br><span class="line">    }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">UndirectedGraph</span> {</span><br><span class="line">    <span class="type">int</span> V;</span><br><span class="line">    LinkedList&lt;Edge&gt;[] adjListArray;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">UndirectedGraph</span><span class="params">(<span class="type">int</span> V)</span> {</span><br><span class="line">        <span class="built_in">this</span>.V = V;</span><br><span class="line">        <span class="built_in">this</span>.adjListArray = <span class="keyword">new</span> <span class="title class_">LinkedList</span>[V];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; V; i++) {</span><br><span class="line">            adjListArray[i] = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;Edge&gt;();</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">addEdge</span><span class="params">(<span class="type">int</span> src, <span class="type">int</span> dest, <span class="type">boolean</span> colored)</span> {</span><br><span class="line">        <span class="type">Edge</span> <span class="variable">edge1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Edge</span>(dest, colored);</span><br><span class="line">        adjListArray[src].add(edge1);</span><br><span class="line"></span><br><span class="line">        <span class="type">Edge</span> <span class="variable">edge2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Edge</span>(src, colored);</span><br><span class="line">        adjListArray[dest].add(edge2);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> <span class="title function_">countGood</span><span class="params">()</span>{</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">v</span> <span class="operator">=</span> <span class="number">0</span>; v &lt; V; v++){</span><br><span class="line">            <span class="comment">// 没有边的节点也是好节点</span></span><br><span class="line">            <span class="type">boolean</span> <span class="variable">isGood</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">for</span>(Edge edge: adjListArray[v]){</span><br><span class="line">                <span class="keyword">if</span>(!edge.colored){</span><br><span class="line">                    isGood = <span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">if</span>(isGood) count++;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="2-题目描述"><a href="#2-题目描述" class="headerlink" title="2. 题目描述"></a>2. 题目描述</h2><blockquote><p>小红拿到了一个链表。她准备将这个链表断裂成两个链表，再拼接到一起，使得链表从头节点到尾部升序。你能帮小红判断能否达成目的吗？<br>给定的为一个链表数组，你需要对于数组中每个链表进行一次“是”或者“否”的答案回答，并返回布尔数组。<br>每个链表的长度不小于 2，且每个链表中不包含两个相等的元素。所有链表的长度之和保证不超过10^5</p></blockquote><h3 id="2-1-输入样例"><a href="#2-1-输入样例" class="headerlink" title="2.1 输入样例"></a>2.1 输入样例</h3><h4 id="2-1-1-输入"><a href="#2-1-1-输入" class="headerlink" title="2.1.1 输入"></a>2.1.1 输入</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[{1,2,3},{2,3,1},{3,2,1}]</span><br></pre></td></tr></tbody></table></figure><h4 id="2-1-2-输出"><a href="#2-1-2-输出" class="headerlink" title="2.1.2 输出"></a>2.1.2 输出</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="literal">true</span>,<span class="literal">true</span>,<span class="literal">false</span>]  // 说明：第三个链表无论怎么操作都不满足条件。</span><br></pre></td></tr></tbody></table></figure><h3 id="2-2-解题思路"><a href="#2-2-解题思路" class="headerlink" title="2.2 解题思路"></a>2.2 解题思路</h3><ul><li>断裂成两端，重新拼接后从头到尾是升序。两种情况：本来就是一段单调增，不断开也升序；两段单调增区间，且不能有重叠区间例如[0, 4], [3, 6]，这样实际上有一段属于递减</li><li>用<code>ListNode findMaxNode(ListNode head)</code>找到最大节点<code>maxNode</code>，<code>ListNode rightStart = maxNode.next;</code>找到第二段起始节点，如果<code>maxNode</code>在末尾，则为第一种情况单段单调增，符合题意；判断从<code>rightStart</code>到结尾是否都是单调增，如果是单调增并且<code>end.val&lt;=head.val</code>，则符合题意</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * public class ListNode {</span></span><br><span class="line"><span class="comment"> *   int val;</span></span><br><span class="line"><span class="comment"> *   ListNode next = null;</span></span><br><span class="line"><span class="comment"> *   public ListNode(int val) {</span></span><br><span class="line"><span class="comment"> *     this.val = val;</span></span><br><span class="line"><span class="comment"> *   }</span></span><br><span class="line"><span class="comment"> * }</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Solution</span> {</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 代码中的类名、方法名、参数名已经指定，请勿修改，直接返回方法规定的值即可</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> lists ListNode类一维数组</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> bool布尔型一维数组</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span>[] canSorted (ListNode[] lists) {</span><br><span class="line">        <span class="comment">// 最大节点左边是升序，最大节点右边是升序；最大节点左边的值0</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> lists.length;</span><br><span class="line">        <span class="type">boolean</span>[] ans = <span class="keyword">new</span> <span class="title class_">boolean</span>[len];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; len; i++) {</span><br><span class="line">            ans[i] = canConcat(lists[i]);</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ListNode <span class="title function_">findMaxNode</span><span class="params">(ListNode head)</span> {</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">maxNode</span> <span class="operator">=</span> head;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">current</span> <span class="operator">=</span> head;</span><br><span class="line">        <span class="keyword">while</span> (current != <span class="literal">null</span>) {</span><br><span class="line">            <span class="keyword">if</span> (current.val &gt; maxNode.val) {</span><br><span class="line">                maxNode = current;</span><br><span class="line">            }</span><br><span class="line">            current = current.next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> maxNode;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ListNode <span class="title function_">findEndOfUp</span><span class="params">(ListNode start, ListNode end)</span> {</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">current</span> <span class="operator">=</span> start;</span><br><span class="line">        <span class="comment">// 不用判断最后一个，因为已经没有了下一个节点了，此时的current已经是end</span></span><br><span class="line">        <span class="keyword">while</span> (current != <span class="literal">null</span> &amp;&amp; current.next != end) {</span><br><span class="line">            <span class="keyword">if</span> (current.val &gt; current.next.val)</span><br><span class="line">                <span class="keyword">return</span> current;</span><br><span class="line">            current = current.next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> current;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isUpping</span><span class="params">(ListNode start, ListNode end)</span> {</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">current</span> <span class="operator">=</span> start;</span><br><span class="line">        <span class="keyword">while</span> (current != end &amp;&amp; current.next!= end) {</span><br><span class="line">            <span class="keyword">if</span> (current.val &gt; current.next.val) {</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            }</span><br><span class="line">            current = current.next;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">canConcat</span><span class="params">(ListNode head)</span>{</span><br><span class="line">        <span class="comment">//  找到最大节点，是第一个升序序列的最后一个节点</span></span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">maxNode</span> <span class="operator">=</span> findMaxNode(head);</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">rightStart</span> <span class="operator">=</span> maxNode.next;</span><br><span class="line">        <span class="comment">// 如果最大节点是最后一个节点即rightStart是null，那么整个链表是升序的</span></span><br><span class="line">        <span class="keyword">if</span>(rightStart == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">ListNode</span> <span class="variable">rightEnd</span> <span class="operator">=</span> findEndOfUp(rightStart, <span class="literal">null</span>);</span><br><span class="line">        <span class="comment">// 确保右段序列是升序到结尾的；以及右段的最后一个小于左段的最小值</span></span><br><span class="line">        <span class="comment">// return isUpping(head,leftEnd) &amp;&amp; isUpping(rightStart,null) &amp;&amp; (rightStart.val&lt;head.val);</span></span><br><span class="line">        <span class="comment">// return isUpping(rightStart,null) &amp;&amp; (rightStart.val&lt;head.val);3</span></span><br><span class="line">        <span class="keyword">return</span> isUpping(rightStart,<span class="literal">null</span>) &amp;&amp; (rightEnd.val&lt;head.val);</span><br><span class="line"></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="3-题目描述"><a href="#3-题目描述" class="headerlink" title="3. 题目描述"></a>3. 题目描述</h2><p>小红拿到了一个有 n 个节点的无向图，这个图初始并不是连通图。<br>现在小红想知道，添加恰好一条边使得这个图连通，有多少种不同的加边方案？</p><h3 id="3-1-输入描述"><a href="#3-1-输入描述" class="headerlink" title="3.1 输入描述"></a>3.1 输入描述</h3><p>第一行输入两个正整数n，m，用空格隔开。<br>接下来的m行，每行输入两个正整数u，v，代表节点u和节点v之间有一条边连接。<br>$1\leq n,m \leq 10^5$<br>$1\leq u,v \leq n$<br>保证给出的图是不连通的。</p><h3 id="3-2-输出描述"><a href="#3-2-输出描述" class="headerlink" title="3.2 输出描述"></a>3.2 输出描述</h3><p>一个整数，代表加边的方案数。</p><h3 id="3-3-输入样例1"><a href="#3-3-输入样例1" class="headerlink" title="3.3 输入样例1"></a>3.3 输入样例1</h3><h4 id="3-3-1-输入"><a href="#3-3-1-输入" class="headerlink" title="3.3.1 输入"></a>3.3.1 输入</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">4 2</span><br><span class="line">1 2</span><br><span class="line">3 4</span><br></pre></td></tr></tbody></table></figure><h4 id="3-3-2-输出"><a href="#3-3-2-输出" class="headerlink" title="3.3.2 输出"></a>3.3.2 输出</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></tbody></table></figure><blockquote><p>说明：添加边 (1,3) 或者 (1,4) 或者 (2,3) 或者 (2,4) 都是可以的。</p></blockquote><h3 id="3-4-输入样例2"><a href="#3-4-输入样例2" class="headerlink" title="3.4 输入样例2"></a>3.4 输入样例2</h3><h4 id="3-4-1-输入"><a href="#3-4-1-输入" class="headerlink" title="3.4.1 输入"></a>3.4.1 输入</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4 1</span><br><span class="line">1 3</span><br></pre></td></tr></tbody></table></figure><h4 id="3-4-2-输出"><a href="#3-4-2-输出" class="headerlink" title="3.4.2 输出"></a>3.4.2 输出</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></tbody></table></figure><h3 id="3-5-解题思路"><a href="#3-5-解题思路" class="headerlink" title="3.5 解题思路"></a>3.5 解题思路</h3><ul><li>DFS深度优先搜索+连通图概念</li><li>先用<code>List&lt;List&lt;Integer&gt;&gt;</code>保存各邻边的节点信息</li><li>再用DFS从第一个结点开始搜索，遍历过的全用<code>boolean[] visited</code>标记，记录遍历过的节点数，直到DFS停止，记录当前连通块内含有的节点数；遍历下一个连通块</li><li><em>两个连通块，返回各块数量相乘；两个以上连通块，不能用增加一条边的方式连接，返回0</em></li></ul><blockquote><p>说明：无论添加哪条边，都不可能使得该图变成连通图。</p></blockquote><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注意类名必须为 Main, 不要有任何 package xxx 信息</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> {</span><br><span class="line">    <span class="keyword">static</span> List&lt;List&lt;Integer&gt;&gt; graph  = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 算有几个连通块：两个连通块，返回各块数量相乘；两个以上连通块，不能用增加一条边的方式连接，返回0</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="comment">// 节点个数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">        <span class="comment">// 边的个数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">        <span class="comment">//  创建邻接表</span></span><br><span class="line">        List&lt;List&lt;Integer&gt;&gt; graph = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) {</span><br><span class="line">            <span class="comment">// 初始化邻接表</span></span><br><span class="line">            graph.add(<span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;());</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; m; i++) {</span><br><span class="line">            <span class="type">int</span> <span class="variable">src</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">            <span class="type">int</span> <span class="variable">dest</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">            graph.get(src-<span class="number">1</span>).add(dest-<span class="number">1</span>);</span><br><span class="line">            graph.get(dest-<span class="number">1</span>).add(src-<span class="number">1</span>);</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// 计算连通块中节点的数量  </span></span><br><span class="line">        List&lt;Integer&gt; connectedComponentSizes = calculateConnectedComponentSizes(graph);  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// 结果  </span></span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (connectedComponentSizes.size() == <span class="number">2</span>) {  </span><br><span class="line">            result=connectedComponentSizes.get(<span class="number">0</span>) * connectedComponentSizes.get(<span class="number">1</span>);  </span><br><span class="line">        }   </span><br><span class="line">        System.out.println(result); </span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> List&lt;Integer&gt; <span class="title function_">calculateConnectedComponentSizes</span><span class="params">(List&lt;List&lt;Integer&gt;&gt; graph)</span> {</span><br><span class="line">        <span class="comment">// 记录各节点是否被访问过，默认为 false</span></span><br><span class="line">        <span class="type">boolean</span>[] visited = <span class="keyword">new</span> <span class="title class_">boolean</span>[graph.size()];  </span><br><span class="line">        List&lt;Integer&gt; connectedComponentSizes = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();  </span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; graph.size(); i++) {</span><br><span class="line">            <span class="comment">// 如果节点没有被访问过，进行深度优先搜索</span></span><br><span class="line">            <span class="keyword">if</span> (!visited[i]) {</span><br><span class="line">                <span class="comment">// 计算连通块中节点的数量，加入到结果中</span></span><br><span class="line">                connectedComponentSizes.add(dfs(i, visited, graph));</span><br><span class="line">            }  </span><br><span class="line">        }  </span><br><span class="line">        <span class="keyword">return</span> connectedComponentSizes;  </span><br><span class="line">    }  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">dfs</span><span class="params">(<span class="type">int</span> node, <span class="type">boolean</span>[] visited, List&lt;List&lt;Integer&gt;&gt; graph)</span> {</span><br><span class="line">        <span class="comment">// 标记当前节点已经被访问</span></span><br><span class="line">        visited[node] = <span class="literal">true</span>;</span><br><span class="line">        <span class="comment">// 当前连通块的节点数量为1</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">size</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="comment">// 遍历当前节点的边</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> neighbor : graph.get(node)) {</span><br><span class="line">            <span class="comment">// 如果邻接节点没有被访问过，递归访问</span></span><br><span class="line">            <span class="keyword">if</span> (!visited[neighbor]) {  </span><br><span class="line">                size += dfs(neighbor, visited, graph);  </span><br><span class="line">            }  </span><br><span class="line">        }  </span><br><span class="line">        <span class="keyword">return</span> size;  </span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="4-题目描述"><a href="#4-题目描述" class="headerlink" title="4. 题目描述"></a>4. 题目描述</h2><p>小红拿到了一个数组，她准备将数组分割成 k 段，使得每段内部做按位异或后，再全部求和。小红希望最终这个和尽可能大，你能帮帮她吗？</p><h3 id="4-1-输入描述"><a href="#4-1-输入描述" class="headerlink" title="4.1 输入描述"></a>4.1 输入描述</h3><p>输入包含两行。<br>第一行两个正整数 $n, k , (1\leq k \leq n \leq 400)$，分别表示数组的长度和要分的段数。<br>第二行 n 个整数 $a_i (0 \leq a_i \leq 10^9)$，表示数组 a 的元素。</p><h3 id="4-2-输出描述"><a href="#4-2-输出描述" class="headerlink" title="4.2 输出描述"></a>4.2 输出描述</h3><p>输出一个正整数，表示最终的最大和。</p><h3 id="4-3-输入样例1"><a href="#4-3-输入样例1" class="headerlink" title="4.3 输入样例1"></a>4.3 输入样例1</h3><h4 id="4-3-1-输入"><a href="#4-3-1-输入" class="headerlink" title="4.3.1 输入"></a>4.3.1 输入</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6 2</span><br><span class="line">1 1 1 2 3 4</span><br></pre></td></tr></tbody></table></figure><h4 id="4-3-2-输出"><a href="#4-3-2-输出" class="headerlink" title="4.3.2 输出"></a>4.3.2 输出</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10</span><br></pre></td></tr></tbody></table></figure><blockquote><p>说明<br>小红将数组分为了：<br>[1, 4] 和 [5, 6] 这两个区间，得分分别为：$1 \oplus 1 \oplus 1 \oplus 2 = 3 $和 $3 \oplus 4 = 7$。总得分为 3+7=10。<br>可以证明不存在比 10 更优的分割方案。<br>注：\oplus 符号表示异或操作。</p></blockquote><h3 id="4-4-输入样例2"><a href="#4-4-输入样例2" class="headerlink" title="4.4 输入样例2"></a>4.4 输入样例2</h3><h4 id="4-4-1-输入"><a href="#4-4-1-输入" class="headerlink" title="4.4.1 输入"></a>4.4.1 输入</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5 3</span><br><span class="line">1 0 1 1 0</span><br></pre></td></tr></tbody></table></figure><h4 id="4-4-2-输出"><a href="#4-4-2-输出" class="headerlink" title="4.4.2 输出"></a>4.4.2 输出</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></tbody></table></figure><h3 id="4-5-输入样例3"><a href="#4-5-输入样例3" class="headerlink" title="4.5 输入样例3"></a>4.5 输入样例3</h3><h4 id="4-5-1-输入"><a href="#4-5-1-输入" class="headerlink" title="4.5.1 输入"></a>4.5.1 输入</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">3 3</span><br><span class="line">1 1 2</span><br></pre></td></tr></tbody></table></figure><h4 id="4-5-2-输出"><a href="#4-5-2-输出" class="headerlink" title="4.5.2 输出"></a>4.5.2 输出</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></tbody></table></figure><h3 id="4-6-解题思路"><a href="#4-6-解题思路" class="headerlink" title="4.6 解题思路"></a>4.6 解题思路</h3><ul><li>动态规划，递推公式：<code>dp[i][j] = max(dp[l-1][j-1] + preXor[l][i]) 1&lt;=l&lt;=i</code></li><li>当i和j都已经确定的时候，遍历当前分段点，前<code>l</code>个点分<code>j-i</code>段+后续数组组成一段的最大值</li><li><code>preXor[i][j]</code>是从当前点<code>i</code>到点<code>j</code>一直进行异或运算</li><li>DP初始化：每次都从最小开始，<code>dp[i][j] = Integer.MIN_VALUE;</code></li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> {</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">        <span class="type">int</span>[] nums = <span class="keyword">new</span> <span class="title class_">int</span>[n];</span><br><span class="line">        <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++) </span><br><span class="line">            nums[i] = in.nextInt();</span><br><span class="line">        <span class="type">int</span>[][] dp = <span class="keyword">new</span> <span class="title class_">int</span>[n+<span class="number">1</span>][k+<span class="number">1</span>];</span><br><span class="line">        <span class="type">int</span>[][] preXor = <span class="keyword">new</span> <span class="title class_">int</span>[n+<span class="number">1</span>][n+<span class="number">1</span>];</span><br><span class="line">        <span class="comment">// preXor[i][j]表示从i到j的异或结果</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; n+<span class="number">1</span>; i++){</span><br><span class="line">            preXor[i][i] =nums[i-<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> i+<span class="number">1</span>; j &lt; n+<span class="number">1</span>; j++){</span><br><span class="line">                preXor[i][j] = preXor[i][j-<span class="number">1</span>] ^ nums[j-<span class="number">1</span>];</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// dp[i][j]表示前i个数分成j段的最大异或和</span></span><br><span class="line">        <span class="comment">// 递推公式：dp[i][j] = max(dp[l-1][j-1] + preXor[l][i]) 1&lt;=l&lt;=i</span></span><br><span class="line">        <span class="comment">//  l表示分段点，dp[l-1][j-1]表示前l-1个数分成j-1段的最大异或和</span></span><br><span class="line">        <span class="comment">//  preXor[l][i]表示从l到i的异或结果</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; n+<span class="number">1</span>; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt; k+<span class="number">1</span>; j++){</span><br><span class="line">                dp[i][j] = Integer.MIN_VALUE;</span><br><span class="line">                <span class="comment">// 遍历所有可能的分段点</span></span><br><span class="line">                <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">l</span> <span class="operator">=</span> <span class="number">1</span>; l &lt; i+<span class="number">1</span>; l++){</span><br><span class="line">                    dp[i][j] = Math.max(dp[i][j], dp[l-<span class="number">1</span>][j-<span class="number">1</span>] + preXor[l][i]);</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        System.out.println(dp[n][k]);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="5-题目描述"><a href="#5-题目描述" class="headerlink" title="5. 题目描述"></a>5. 题目描述</h2><p>小红拿到了一个字符矩阵，她可以从任意一个地方出发，希望走 6 步后恰好形成”tencent”字符串。小红想知道，共有多少种不同的行走方案？</p><blockquote><p>注：每一步可以选择上、下、左、右中任意一个方向进行行走。不可行走到矩阵外部。</p></blockquote><h3 id="5-1-输入描述"><a href="#5-1-输入描述" class="headerlink" title="5.1 输入描述"></a>5.1 输入描述</h3><p>第一行输入两个正整数n,m，代表矩阵的行数和列数。<br>接下来的n行，每行输入一个长度为m的、仅由小写字母组成的字符串，代表小红拿到的矩阵。<br>$ 1\leq n,m \leq 1000 $</p><h3 id="5-2-输出描述"><a href="#5-2-输出描述" class="headerlink" title="5.2 输出描述"></a>5.2 输出描述</h3><p>一个整数，代表最终合法的方案数。</p><h3 id="5-3-输入样例"><a href="#5-3-输入样例" class="headerlink" title="5.3 输入样例"></a>5.3 输入样例</h3><h4 id="5-3-1-输入"><a href="#5-3-1-输入" class="headerlink" title="5.3.1 输入"></a>5.3.1 输入</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3 3</span><br><span class="line">ten</span><br><span class="line">nec</span><br><span class="line">ten</span><br></pre></td></tr></tbody></table></figure><h4 id="5-3-2-输出"><a href="#5-3-2-输出" class="headerlink" title="5.3.2 输出"></a>5.3.2 输出</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></tbody></table></figure><blockquote><p>说明：<br>第一个方案，从左上角出发，右右下左左上。<br>第二个方案，从左上角出发，右右下左左下。<br>第三个方案，从左下角出发，右右上左左下。<br>第四个方案，从左上角出发，右右上左左上。</p></blockquote><h3 id="5-4-解题思路"><a href="#5-4-解题思路" class="headerlink" title="5.4 解题思路"></a>5.4 解题思路</h3><ul><li>先存到二维数组：<code>map[i] = in.next().toCharArray();</code></li><li>静态变量<code>int[][] directions</code>用于定义上下左右移动</li><li>遍历二维数组，也就是从每个点开始，拼接当前字符，再对四个方向进行遍历回溯</li><li>达到长度判定是否等于<code>"tencent"</code>，是则加一不是则返回</li><li>attention：要设置临时变量用于恢复字符串，每个方向返回后都需要恢复</li><li>考虑剪枝：第一个字符是<code>t</code>等</li></ul><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 注意类名必须为 Main, 不要有任何 package xxx 信息</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> {</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span>[][] directions = {{<span class="number">0</span>, <span class="number">1</span>}, {<span class="number">0</span>, -<span class="number">1</span>}, {<span class="number">1</span>, <span class="number">0</span>}, {-<span class="number">1</span>, <span class="number">0</span>}};</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> {</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">n</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">m</span> <span class="operator">=</span> in.nextInt();</span><br><span class="line">        <span class="type">char</span>[][] map = <span class="keyword">new</span> <span class="title class_">char</span>[n][m];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++){</span><br><span class="line">            map[i] = in.next().toCharArray();</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; n; i++){</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; m; j++){</span><br><span class="line">                backTrack(i, j, map, String.valueOf(map[i][j]));</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">        System.out.print(result);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">backTrack</span><span class="params">(<span class="type">int</span> i, <span class="type">int</span> j, <span class="type">char</span>[][] map, String str)</span>{</span><br><span class="line">        <span class="keyword">if</span> (str.length()==<span class="number">7</span>) {</span><br><span class="line">            <span class="keyword">if</span> (str.equals(<span class="string">"tencent"</span>)) {</span><br><span class="line">                result++;</span><br><span class="line">            }</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span>[] direction : directions){</span><br><span class="line">            <span class="type">int</span> <span class="variable">newI</span> <span class="operator">=</span> i + direction[<span class="number">0</span>];</span><br><span class="line">            <span class="type">int</span> <span class="variable">newJ</span> <span class="operator">=</span> j + direction[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">if</span>(newI &gt;= <span class="number">0</span> &amp;&amp; newI &lt; map.length &amp;&amp; newJ &gt;= <span class="number">0</span> &amp;&amp; newJ &lt; map[<span class="number">0</span>].length){</span><br><span class="line">                <span class="comment">// 要暂存当前的 str, 递归返回后要恢复</span></span><br><span class="line">                <span class="type">String</span> <span class="variable">temp</span> <span class="operator">=</span> str;</span><br><span class="line">                str += map[newI][newJ];</span><br><span class="line">                backTrack(newI, newJ, map, str);</span><br><span class="line">                str = temp;</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;ol&gt;
&lt;li&gt;打卡题目，无向图的邻接表，遍历判断&lt;/li&gt;
&lt;li&gt;判断分段拼接链表后，是否整段升序&lt;/li&gt;
&lt;li&gt;连通图，非连通的图增加一条边恰好连通的方案数&lt;/li&gt;
&lt;li&gt;异或前缀和+动态规划&lt;/li&gt;
&lt;li&gt;遍历+回溯判断矩阵构成字符串&lt;/li&gt;
&lt;/ol&gt;</summary>
    
    
    
    <category term="Summary" scheme="https://boom1999.github.io/categories/Summary/"/>
    
    
    <category term="LinkedList" scheme="https://boom1999.github.io/tags/LinkedList/"/>
    
    <category term="UndirectedGraph" scheme="https://boom1999.github.io/tags/UndirectedGraph/"/>
    
    <category term="BackTrack" scheme="https://boom1999.github.io/tags/BackTrack/"/>
    
  </entry>
  
  <entry>
    <title>基于Webhook的同步部署</title>
    <link href="https://boom1999.github.io/2024/04/01/%E5%88%A9%E7%94%A8Webhook%E5%B0%86Hexo%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%AD%A5%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://boom1999.github.io/2024/04/01/%E5%88%A9%E7%94%A8Webhook%E5%B0%86Hexo%E5%8D%9A%E5%AE%A2%E5%90%8C%E6%AD%A5%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2024-04-01T00:00:00.000Z</published>
    <updated>2024-04-01T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>寄人篱下不是长久之计，下文展开介绍利用Webhook将Hexo博客部署到自己的服务器上，同时github-peges作为镜像站使用，接上一篇，默认分支hexo_backup作为源文件备份，master作主页</p></blockquote><span id="more"></span><ul><li>前提条件：已有github.io仓库，hexo博客已经上线测试可以使用，已有<code>nginx</code>、<code>git</code>、<code>node</code>等基础，可参考上一篇笔记</li><li>省略了一些次要步骤，域名解析、备案等</li></ul><hr><h2 id="服务器Webhook部分-2021-02-01"><a href="#服务器Webhook部分-2021-02-01" class="headerlink" title="服务器Webhook部分: 2021-02-01"></a>服务器Webhook部分: 2021-02-01</h2><ul><li>利用宝塔平台的Webhook插件</li></ul><blockquote><p>名称随意，实例脚本如下<br>gitPath=”/www/wwwroot/YourWebsiteLocation/“<br>gitHttp=”<a href="https://github.com/YourGithubName/xxxxxxxx.github.io.git">https://github.com/YourGithubName/xxxxxxxx.github.io.git</a>“<br>若失败，可考虑加上<code>sudo</code>使用管理员权限</p></blockquote><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">echo ""</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">输出当前时间</span></span><br><span class="line">date --date='0 days ago' "+%Y-%m-%d %H:%M:%S"</span><br><span class="line">echo "Start"</span><br><span class="line">    </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">git项目路径</span></span><br><span class="line">gitPath=" "</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">git 网址</span></span><br><span class="line">gitHttp=" "</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">延迟高可以加https://ghproxy.com/代理</span></span><br><span class="line"></span><br><span class="line">echo "Web站点路径：$gitPath"</span><br><span class="line">     </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">判断项目路径是否存在</span></span><br><span class="line">if [ -d "$gitPath" ]; then</span><br><span class="line">    cd $gitPath</span><br><span class="line">    #判断是否存在git目录</span><br><span class="line">    if [ ! -d ".git" ]; then</span><br><span class="line">            echo "在该目录下克隆 git"</span><br><span class="line">            sudo git clone $gitHttp gittemp</span><br><span class="line">            sudo mv gittemp/.git .</span><br><span class="line">            sudo rm -rf gittemp</span><br><span class="line">    fi</span><br><span class="line">    echo"拉取最新的项目文件"</span><br><span class="line">    sudo git reset --hard origin/master</span><br><span class="line">    sudo git pull origin master</span><br><span class="line">    echo"设置目录权限"</span><br><span class="line">    sudo chown -R www:www $gitPath</span><br><span class="line">    date --date='0 days ago' "+%Y-%m-%d %H:%M:%S"</span><br><span class="line">    echo "End"</span><br><span class="line">    exit</span><br><span class="line">else</span><br><span class="line">    echo "该项目路径不存在"</span><br><span class="line">    echo "End"</span><br><span class="line">    exit</span><br><span class="line">fi</span><br></pre></td></tr></tbody></table></figure><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/Hexo_synchronization/Webhook01.png" alt="宝塔Webhook"></p><h2 id="Github设置Webhook"><a href="#Github设置Webhook" class="headerlink" title="Github设置Webhook"></a>Github设置Webhook</h2><ul><li><p>查看密钥<br><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/Hexo_synchronization/Webhook02.png" alt="宝塔Webhook查看密钥"></p></li><li><p>切换到Github项目的Settings-Webhooks</p></li><li><p>Add Webhook</p></li></ul><blockquote><p><strong>Payload URL:</strong> <code>http://服务器ip:8888?hook?access_key=xxxxx</code><br><strong>Content type:</strong> <code>application/json</code><br><strong>Secret:</strong> <code>Key</code><br><strong>Which events would you like to trigger this webhook?</strong><br>choose：Just the push event.<br>√<strong>Active</strong></p></blockquote><ul><li>测试，本地更改sources后<code>hexo g</code>+<code>hexo d</code></li><li>第一次红了是因为将Github中Webhook的Content type设置成了<code>application/x-www-form-urlencoded</code>，改成<code>application/json</code>通过<br><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/Hexo_synchronization/Webhook03.png" alt="Webhook测试"></li></ul><hr><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><ol><li>服务器需要开放8888端口，如果使用其他端口同样需要打开</li><li>两者都是表单数据发送时的编码类型<br> application/x-www-form-urlencoded —&gt; key=value&amp;key=value</li><li>一般情况下都会正常同步，如果长时间未update，可能是DNS的问题，可以考虑选择一个连接速度较快的GitHub的ip添加到/etc/hosts并且刷新</li></ol><hr><h2 id="Update-20240401"><a href="#Update-20240401" class="headerlink" title="Update: 20240401"></a>Update: 20240401</h2><blockquote><p><a href="https://mirror.ghproxy.com/">原有的代理喜提GFW，改用备用站点</a></p></blockquote><p>相应的，WebHook部分适当修改</p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">echo ""</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">输出当前时间</span></span><br><span class="line">date --date='0 days ago' "+%Y-%m-%d %H:%M:%S"</span><br><span class="line">echo "Start"</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">git项目路径</span></span><br><span class="line">gitPath=" "</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">git 网址</span></span><br><span class="line">gitSSH="https://mirror.ghproxy.com/https://github.com/username/repo"</span><br><span class="line"> </span><br><span class="line">echo "Web站点路径：$gitPath"</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">判断项目路径是否存在</span></span><br><span class="line">if [ -d "$gitPath" ]; then</span><br><span class="line">    cd $gitPath</span><br><span class="line">    #判断是否存在git目录</span><br><span class="line"> if [ ! -d ".git" ]; then  </span><br><span class="line">        echo "Cloning the git repository into the directory"  </span><br><span class="line">        sudo git clone $gitSSH .  </span><br><span class="line">    fi</span><br><span class="line">    echo "拉取最新的项目文件"</span><br><span class="line">    sudo git reset -- hard origin/master</span><br><span class="line">    sudo git pull origin master</span><br><span class="line">    </span><br><span class="line">    echo "设置目录权限"</span><br><span class="line">    sudo chown -R www:www $gitPath</span><br><span class="line"> date --date='0 days ago' "+%Y-%m-%d %H:%M:%S"</span><br><span class="line">    echo "End"</span><br><span class="line">    exit</span><br><span class="line">else</span><br><span class="line">    echo "该项目路径不存在"</span><br><span class="line">    echo "End"</span><br><span class="line">    exit</span><br><span class="line">fi</span><br></pre></td></tr></tbody></table></figure>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;寄人篱下不是长久之计，下文展开介绍利用Webhook将Hexo博客部署到自己的服务器上，同时github-peges作为镜像站使用，接上一篇，默认分支hexo_backup作为源文件备份，master作主页&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Blog" scheme="https://boom1999.github.io/categories/Blog/"/>
    
    
    <category term="Hexo" scheme="https://boom1999.github.io/tags/Hexo/"/>
    
    <category term="Webhook" scheme="https://boom1999.github.io/tags/Webhook/"/>
    
  </entry>
  
  <entry>
    <title>MapReduce in Distributed Systems</title>
    <link href="https://boom1999.github.io/2024/03/14/MapReduce/"/>
    <id>https://boom1999.github.io/2024/03/14/MapReduce/</id>
    <published>2024-03-14T00:00:00.000Z</published>
    <updated>2024-03-14T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><span class="github-emoji"><span>📌</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></p><ul><li>MIT 6.824 Distributed Systems Lab-1-Golang<br><span class="github-emoji"><span>💨</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a8.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>🕥</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f565.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span class="github-emoji"><span>😴</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f634.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span><span id="more"></span></li></ul><h1 id="MIT-6-824-Distributed-Systems"><a href="#MIT-6-824-Distributed-Systems" class="headerlink" title="MIT 6.824 Distributed Systems"></a>MIT 6.824 Distributed Systems</h1><h1 id="Lecture-01-Introduction"><a href="#Lecture-01-Introduction" class="headerlink" title="Lecture 01 - Introduction"></a>Lecture 01 - Introduction</h1><h2 id="Links"><a href="#Links" class="headerlink" title="Links"></a>Links</h2><ul><li><a href="https://pdos.csail.mit.edu/6.824/schedule.html">MIT 6.5840 Schedule: Spring 2024</a></li><li><a href="http://nil.csail.mit.edu/6.824/2020/schedule.html">MIT 6.824 Schedule: Spring 2020</a></li><li><a href="https://www.youtube.com/watch?v=cQP8WApzIQQ&amp;list=PLrw6a1wE39_tb2fErI4-WkMbsvGQk9_UB">Youtube 2020</a></li><li>BiliBili Translated:<ul><li><a href="https://www.bilibili.com/video/BV1x7411M7Sf/?spm_id_from=333.999.0.0&amp;vd_source=2c248c46a7ba66244aa5b9fb5b07d4fc">https://www.bilibili.com/video/BV1x7411M7Sf/?spm_id_from=333.999.0.0&amp;vd_source=2c248c46a7ba66244aa5b9fb5b07d4fc</a></li><li><a href="https://www.bilibili.com/video/BV1R7411t71W/?spm_id_from=333.1007.top_right_bar_window_default_collection.content.click&amp;vd_source=2c248c46a7ba66244aa5b9fb5b07d4fc">https://www.bilibili.com/video/BV1R7411t71W/?spm_id_from=333.1007.top_right_bar_window_default_collection.content.click&amp;vd_source=2c248c46a7ba66244aa5b9fb5b07d4fc</a></li></ul></li></ul><h2 id="MapReduce-基本工作方式"><a href="#MapReduce-基本工作方式" class="headerlink" title="MapReduce 基本工作方式"></a>MapReduce 基本工作方式</h2><p><img src="https://www.lingzhicheng.cn/usr/file/picture/MIT/MapReduce.PNG" alt="Read MapReduce(2024) png"></p><p><a href="https://pdos.csail.mit.edu/6.824/papers/mapreduce.pdf">Read MapReduce(2024)</a></p><p><strong>Map：</strong> 接受一个键值对(key-value pair)，产生一组中间键值对。MapReduce 会将 Map 函数产生的中间键值对传递给一个 Reduce 函数。</p><p><strong>Reduce：</strong> 接受一个键以及相关的一组值，将这组值进行合并产生一组规模更小的值(通常只有一个或零个值)。</p><p>在实现的过程中，Reduce 函数使用 Iterator 读取中间结果，为了防止值过多，而无法全部放到内存中。</p><p><strong>Types:</strong></p><p><code>map    (k1,v1)       -&gt; list(k2,v2)</code></p><p><code>reduce (k2,list(v2)) -&gt; list(v2)</code></p><p>词频统计伪代码：</p><figure class="highlight cpp"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">map</span>(String key, String value):</span><br><span class="line">    <span class="comment">// key: document name</span></span><br><span class="line">    <span class="comment">// value: document contents</span></span><br><span class="line">    <span class="keyword">for</span> each word w in value:</span><br><span class="line">        <span class="built_in">EmitIntermediate</span>(w, <span class="string">"1"</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">reduce</span>(String key, Iterator values):</span><br><span class="line">    <span class="comment">// key: a word</span></span><br><span class="line">    <span class="comment">// values: a list of counts</span></span><br><span class="line">    <span class="type">int</span> result = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> each v in values:</span><br><span class="line">        result += <span class="built_in">ParseInt</span>(v);</span><br><span class="line">    <span class="built_in">Emit</span>(<span class="built_in">AsString</span>(result));</span><br></pre></td></tr></tbody></table></figure><h3 id="Process"><a href="#Process" class="headerlink" title="Process"></a>Process</h3><ol><li>用户程序将输入文件切分为 M 个 16～64MB 之间的 split，并在集群中创建程序副本。</li><li>程序副本分为 1 个 Master 和多个 Worker。Master 选取空闲的 Worker，并为其分配 Map 任务或 Reduce 任务。Master 存储任务的状态(空闲，工作中，完成)和 worker 机器(非空闲任务的机器)的标识。</li><li>Mapper 读取对应的 split 并<strong>调用用户定义的 map 函数</strong>解析为键值对，将输出的中间结果键值对存储到内存中。</li><li>Mapper 将缓存的键值对通过 Partition 函数(通常为 hash(key) mod R)划分为 R 个部分，并周期性地写入本地磁盘，同时将本地磁盘上中间结果的位置信息发送给 Master。</li><li>Master 将收到的中间结果的位置信息发送给 Reducer，Reducer 通过 RPC 读取存储在 Mapper 本地磁盘上的中间结果。在读取完毕后，<u>Reducer 会根据 key 对中间结果进行排序</u>。</li><li>对每一个 key 和其对应的一组值，<strong>调用用户定义的 Reduce 函数</strong>进行处理，输出结果存储在对应的 Reduce Partition 文件中。</li><li>当所有的 Map 任务和 Reduce 任务完成后，Master 通知用户程序。</li></ol><h3 id="容错机制"><a href="#容错机制" class="headerlink" title="容错机制"></a>容错机制</h3><ul><li>worker 失效</li></ul><p>Master 会<strong>周期性地 ping</strong> 每一个 Worker，如果某个 Worker 在一段时间内没有响应，Master 就会认为这个 Worker 已经不可用，对其上分配的任务<strong>重新分配</strong>给其他 Worker。</p><ul><li>master 失效</li></ul><p>Master 会周期性地将集群的当前状态作为 <strong>checkpoint</strong> 写入到磁盘中。Master 发生故障后，重新启动 Master 即可利用存储在磁盘中的最近的 checkpoint 进行<strong>恢复</strong>。</p><h3 id="数据存储机制"><a href="#数据存储机制" class="headerlink" title="数据存储机制"></a>数据存储机制</h3><p>由于网络带宽是一种相当匮乏的计算资源，MapReduce 将数据存储在本地磁盘，由 GFS 进行管理。GFS 把每一份文件划分为多个 64MB 的 block，通常情况下，每个 block 会在不同的机器上保存三份副本。Master 在调度 Map 任务时会考虑输入数据的位置信息，采取<strong>就近原则</strong>，即尽量将 Map 任务<strong>调度到包含相关输入数据副本的机器上执行</strong>。因而大部分输入数据可以从本地读取，消耗非常少的网络带宽。</p><h3 id="负载均衡机制"><a href="#负载均衡机制" class="headerlink" title="负载均衡机制"></a>负载均衡机制</h3><p>Master 将 Map 任务和 Reduce 任务划分为 M 和 R 个片段，<strong>M 和 R 的数量应远大于集群中 Worker 的数量</strong>。每个 Worker 执行大量不同的任务有助于提高集群的动态负载均衡能力，并且加快故障恢复的速度。</p><h3 id="备份任务机制"><a href="#备份任务机制" class="headerlink" title="备份任务机制"></a>备份任务机制</h3><p>如果集群中某个 Worker 花了很长时间才完成最后几个 Map 任务或 Reduce 任务，导致 MapReduce 总执行时间延长，这样的 Worker 被称为落后者(Straggler)。MapReduce 提供了备份任务机制来缓解这种情况。当 MapReduce 快要完成时，<strong>Master 为剩下的正在运行的任务启动备份任务，将其分配给其他的空闲 Worker 来执行</strong>，并在其中一个 Worker 完成后将该任务视作已完成。通过备份任务机制，大大减少了 MapReduce 的执行时间。</p><h2 id="Lab1-MapReduce"><a href="#Lab1-MapReduce" class="headerlink" title="Lab1: MapReduce"></a>Lab1: MapReduce</h2><p>Lab source: <a href="https://pdos.csail.mit.edu/6.824/labs/lab-mr.html">https://pdos.csail.mit.edu/6.824/labs/lab-mr.html</a></p><ul><li><p>System <code>(hostnamectl)</code></p><ul><li>Static hostname: ubuntu</li><li>Icon name: computer-vm</li><li>Chassis: vm</li><li>Virtualization: vmware</li><li>Operating System: Ubuntu 18.04.6 LTS</li><li>Kernel: Linux 5.4.0-144-generic</li><li>Architecture: x86-64</li></ul></li><li><p>Goland version <code>(go version)</code></p><ul><li>go version go1.19.5 linux/amd64</li></ul></li><li><p>GCC <code>(gcc -version)</code></p><ul><li>gcc (Ubuntu 7.5.0-3ubuntu1~18.04) 7.5.0</li></ul></li></ul><h3 id="Remote-debug"><a href="#Remote-debug" class="headerlink" title="Remote debug"></a>Remote debug</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go install github.com/go-delve/delve/cmd/dlv@latest</span><br></pre></td></tr></tbody></table></figure><h3 id="Sequential-and-Settings"><a href="#Sequential-and-Settings" class="headerlink" title="Sequential and Settings"></a>Sequential and Settings</h3><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/6.5840</span><br><span class="line">$ <span class="built_in">cd</span> src/main</span><br><span class="line">$ go build -buildmode=plugin ../mrapps/wc.go</span><br><span class="line">$ <span class="built_in">rm</span> mr-out*</span><br><span class="line">$ go run mrsequential.go wc.so pg*.txt</span><br><span class="line">$ more mr-out-0</span><br><span class="line">A 509</span><br><span class="line">ABOUT 2</span><br><span class="line">ACT 8</span><br><span class="line">...</span><br></pre></td></tr></tbody></table></figure><p>运行 <code>go build -buildmode=plugin ../mrapps/wc.go</code> 命令将生成一个插件文件，即构建 MR APP 的动态链接库。在这种情况下，生成的文件将具有 <code>.so</code> 扩展名，表示它是一个共享对象文件（shared object），用于动态加载到其他程序中。</p><p>通常情况下，生成的文件名将与源文件的包名相同，只是扩展名为 <code>.so</code>，例如 <code>wc.so</code>。当然，在 windows 下是不显示的，即使同步了双端代码，如果在 win 下生成将用 <code>.dll</code> 表示动态链接库。</p><p>文件 <code>wc.go</code> 以及 <code>mrapps</code> 目录下的其它几个文件，都定义了名为 <code>map, reduce</code> 的函数，这两个函数在 <code>mrsequential.go</code> 中加载并调用。给 <code>mrsequential</code> 绑定不同的 <code>*.so</code> 文件，也就会加载不同的 <code>map, reduce</code> 函数。如此实现某种程度上的<strong>动态绑定。</strong></p><h4 id="可能会报错"><a href="#可能会报错" class="headerlink" title="可能会报错"></a>可能会报错</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># runtime/cgo</span></span><br><span class="line">cgo: C compiler <span class="string">"gcc"</span> not found: <span class="built_in">exec</span>: <span class="string">"gcc"</span>: executable file not found <span class="keyword">in</span> <span class="variable">$PATH</span></span><br></pre></td></tr></tbody></table></figure><p>It seems like the error message you’re encountering is related to the absence of the C compiler “gcc” in your system’s PATH variable.</p><p>To resolve this issue, you will need to ensure that the GNU Compiler Collection (GCC) is installed on your system and that its location is included in the PATH environment variable.</p><p>Here are the general steps to address this issue:</p><ol><li><strong>Install GCC:</strong><br>If you don’t have GCC installed, you can typically install it using your system’s package manager. For example, on a Debian-based system, you can use:</li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get update  </span><br><span class="line"><span class="built_in">sudo</span> apt-get install build-essential</span><br></pre></td></tr></tbody></table></figure><ol><li><strong>Add GCC to PATH:</strong><br>Once installed, you should ensure that the directory containing the GCC executable is included in your PATH environment variable. This can typically be achieved by adding a line to your shell configuration file (e.g., <strong>`**</strong>.bashrc<strong>**`</strong>, <strong>`**</strong>.zshrc<strong>**`</strong>, etc.):</li></ol><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/path/to/gcc/directory</span><br></pre></td></tr></tbody></table></figure><ol><li><strong>Verify Installation:</strong><br>After making these changes, open a new terminal or run <strong>source</strong>on the configuration file to apply the changes. You can then verify that GCC is accessible by running <strong>gcc —version</strong>.</li></ol><h4 id="配置优化"><a href="#配置优化" class="headerlink" title="配置优化"></a>配置优化</h4><ul><li>原始命令</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/6.5840</span><br><span class="line">$ <span class="built_in">cd</span> src/main</span><br><span class="line">$ go build -buildmode=plugin ../mrapps/wc.go</span><br><span class="line">$ <span class="built_in">rm</span> mr-out*</span><br><span class="line">$ go run mrsequential.go wc.so pg*.txt</span><br><span class="line">$ more mr-out-0</span><br><span class="line">A 509</span><br><span class="line">ABOUT 2</span><br><span class="line">ACT 8</span><br><span class="line">...</span><br></pre></td></tr></tbody></table></figure><ul><li><code>.vscode/launch.json</code></li></ul><blockquote><p>注意：这里的”args”貌似不支持通配符 <code>*</code>，所以需要手动把所有文件全部加进去，<u>或许可能有其他办法。</u></p></blockquote><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">"args"</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">"wc.so"</span><span class="punctuation">,</span> <span class="string">"pg-being_ernest.txt"</span><span class="punctuation">,</span> <span class="string">"pg-dorian_gray.txt"</span><span class="punctuation">,</span> <span class="string">"pg-frankenstein.txt"</span><span class="punctuation">,</span> <span class="string">"pg-grimm.txt"</span><span class="punctuation">,</span> <span class="string">"pg-huckleberry_finn.txt"</span><span class="punctuation">,</span> <span class="string">"pg-metamorphosis.txt"</span><span class="punctuation">,</span> <span class="string">"pg-sherlock_holmes.txt"</span><span class="punctuation">,</span> <span class="string">"pg-tom_sawyer.txt"</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br></pre></td></tr></tbody></table></figure><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">{</span></span><br><span class="line">    _<span class="comment">// Use IntelliSense to learn about possible attributes._</span></span><br><span class="line">    _<span class="comment">// Hover to view descriptions of existing attributes._</span></span><br><span class="line">    _<span class="comment">// For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387_</span></span><br><span class="line">    <span class="attr">"version"</span><span class="punctuation">:</span> <span class="string">"0.2.0"</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"configurations"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"Run mrcoordinator.go"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"go"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"request"</span><span class="punctuation">:</span> <span class="string">"launch"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"mode"</span><span class="punctuation">:</span> <span class="string">"auto"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"args"</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">"pg-being_ernest.txt"</span><span class="punctuation">,</span> <span class="string">"pg-dorian_gray.txt"</span><span class="punctuation">,</span> <span class="string">"pg-frankenstein.txt"</span><span class="punctuation">,</span> <span class="string">"pg-grimm.txt"</span><span class="punctuation">,</span> <span class="string">"pg-huckleberry_finn.txt"</span><span class="punctuation">,</span> <span class="string">"pg-metamorphosis.txt"</span><span class="punctuation">,</span> <span class="string">"pg-sherlock_holmes.txt"</span><span class="punctuation">,</span> <span class="string">"pg-tom_sawyer.txt"</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"program"</span><span class="punctuation">:</span> <span class="string">"${workspaceFolder}/src/main/mrcoordinator.go"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"cwd"</span><span class="punctuation">:</span> <span class="string">"${workspaceFolder}/src/main"</span></span><br><span class="line">        <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"Run mrworker.go"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"go"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"request"</span><span class="punctuation">:</span> <span class="string">"launch"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"mode"</span><span class="punctuation">:</span> <span class="string">"auto"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"args"</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">"wc.so"</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"program"</span><span class="punctuation">:</span> <span class="string">"${workspaceFolder}/src/main/mrworker.go"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"cwd"</span><span class="punctuation">:</span> <span class="string">"${workspaceFolder}/src/main"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"preLaunchTask"</span><span class="punctuation">:</span> <span class="string">"build wc &amp;&amp; temp dir"</span></span><br><span class="line">        <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"Run mrsequential.go with wc.so"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"go"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"request"</span><span class="punctuation">:</span> <span class="string">"launch"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"mode"</span><span class="punctuation">:</span> <span class="string">"auto"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"program"</span><span class="punctuation">:</span> <span class="string">"${workspaceFolder}/src/main/mrsequential.go"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"env"</span><span class="punctuation">:</span> <span class="punctuation">{</span><span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"args"</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">"wc.so"</span><span class="punctuation">,</span> <span class="string">"pg-being_ernest.txt"</span><span class="punctuation">,</span> <span class="string">"pg-dorian_gray.txt"</span><span class="punctuation">,</span> <span class="string">"pg-frankenstein.txt"</span><span class="punctuation">,</span> <span class="string">"pg-grimm.txt"</span><span class="punctuation">,</span> <span class="string">"pg-huckleberry_finn.txt"</span><span class="punctuation">,</span> <span class="string">"pg-metamorphosis.txt"</span><span class="punctuation">,</span> <span class="string">"pg-sherlock_holmes.txt"</span><span class="punctuation">,</span> <span class="string">"pg-tom_sawyer.txt"</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"preLaunchTask"</span><span class="punctuation">:</span> <span class="string">"build wc"</span></span><br><span class="line">        <span class="punctuation">}</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">}</span></span><br></pre></td></tr></tbody></table></figure><ul><li><code>.vscode/tasks.json</code></li></ul><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">{</span></span><br><span class="line">    <span class="attr">"version"</span><span class="punctuation">:</span> <span class="string">"2.0.0"</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"tasks"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"label"</span><span class="punctuation">:</span> <span class="string">"build wc"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"shell"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"command"</span><span class="punctuation">:</span> <span class="string">"bash"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"args"</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">"${workspaceFolder}/src/main/build-wc.sh"</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"problemMatcher"</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span>  </span><br><span class="line">            <span class="attr">"group"</span><span class="punctuation">:</span> <span class="punctuation">{</span>  </span><br><span class="line">              <span class="attr">"kind"</span><span class="punctuation">:</span> <span class="string">"build"</span><span class="punctuation">,</span>  </span><br><span class="line">              <span class="attr">"isDefault"</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>  </span><br><span class="line">            <span class="punctuation">}</span><span class="punctuation">,</span> </span><br><span class="line">            <span class="attr">"presentation"</span><span class="punctuation">:</span> <span class="punctuation">{</span>  </span><br><span class="line">              <span class="attr">"reveal"</span><span class="punctuation">:</span> <span class="string">"silent"</span>  </span><br><span class="line">            <span class="punctuation">}</span></span><br><span class="line">        <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"label"</span><span class="punctuation">:</span> <span class="string">"build temp dir"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"type"</span><span class="punctuation">:</span> <span class="string">"shell"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"command"</span><span class="punctuation">:</span> <span class="string">"bash"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"args"</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">"${workspaceFolder}/src/main/build-temp-dir.sh"</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"problemMatcher"</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span>  </span><br><span class="line">            <span class="attr">"group"</span><span class="punctuation">:</span> <span class="punctuation">{</span>  </span><br><span class="line">              <span class="attr">"kind"</span><span class="punctuation">:</span> <span class="string">"build"</span><span class="punctuation">,</span>  </span><br><span class="line">              <span class="attr">"isDefault"</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span>  </span><br><span class="line">            <span class="punctuation">}</span><span class="punctuation">,</span>  </span><br><span class="line">            <span class="attr">"presentation"</span><span class="punctuation">:</span> <span class="punctuation">{</span>  </span><br><span class="line">              <span class="attr">"reveal"</span><span class="punctuation">:</span> <span class="string">"silent"</span>  </span><br><span class="line">            <span class="punctuation">}</span></span><br><span class="line">        <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"label"</span><span class="punctuation">:</span> <span class="string">"build wc &amp;&amp; temp dir"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"dependsOn"</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">"build wc"</span><span class="punctuation">,</span> <span class="string">"build temp dir"</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">}</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">}</span></span><br></pre></td></tr></tbody></table></figure><ul><li><code>6.8540/src/main/build-wc.sh</code></li></ul><blockquote><p>注意：如果出现 <code>cannot load plugin wc.so</code>，需要加上 <code>-gcflags="all=-N -l"</code>，以禁用优化和内联，但这不一定是必要的，如果直接在 Terminal 进行动态库的生成，则不需要。</p></blockquote><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">"Building wc plugin..."</span></span><br><span class="line"><span class="built_in">cd</span> src/main</span><br><span class="line">go build -buildmode=plugin -gcflags=<span class="string">"all=-N -l"</span> ../mrapps/wc.go</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"wc plugin built"</span></span><br><span class="line"><span class="built_in">rm</span> -f mr-*</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"deleted old mr-* files"</span></span><br></pre></td></tr></tbody></table></figure><h2 id="Our-tasks"><a href="#Our-tasks" class="headerlink" title="Our tasks"></a>Our tasks</h2><blockquote><p>Your job is to implement a distributed MapReduce, consisting of two programs, the coordinator and the worker. There will be just one coordinator process, and one or more worker processes executing in parallel. In a real system the workers would run on a bunch of different machines, but for this lab you’ll run them all on a single machine. The workers will talk to the coordinator via RPC. Each worker process will, in a loop, ask the coordinator for a task, read the task’s input from one or more files, execute the task, write the task’s output to one or more files, and again ask the coordinator for a new task. The coordinator should notice if a worker hasn’t completed its task in a reasonable amount of time (for this lab, use ten seconds), and give the same task to a different worker.</p></blockquote><ul><li>主体：完成一个分布式的 MapReduce，由一个 coordinator 进程（在之前的版本中用 master 称呼）和多个并行的 worker 进程组成。现实中真实的分布式系统通常运行在一堆不同的设备上，但在这里只用一台计算机，worker 通过 RPC 和 coordinator 通信。每一个 worker 进程将循环地向 coordinator 请求 task，从 task 的输入中读取一个或多个文件，执行程序然很将结果输出到一个或多个文件，然后再次请求新的 task。如果一个 worker 长时间没有完成 task（这里设置为 10s），coordinator 将通知另一个 worker 来执行这个 task。</li><li>注意：<code>main/mrcoordinator.go</code> 和 <code>main/mrworker.go</code> 是 test 的入口，不要求改。需要完成的在 <code>mr/coordinator.go</code>、<code>mr/worker.go</code> 和 <code>mr/rpc.go</code>。</li><li><p>大致的测试步骤：</p><ul><li><p>构建中间件用于 word-count，这里和上面类似，后续可以附带在启动 mrworker 的任务中。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go build -buildmode=plugin ../mrapps/wc.go</span><br></pre></td></tr></tbody></table></figure></li><li><p>启动mrcoordinator，输入是所有txt文件，每一个文件代表一个split，同样的这里也要注意通配符。</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> mr-out*</span><br><span class="line">go run mrcoordinator.go pg-*.txt</span><br></pre></td></tr></tbody></table></figure></li><li><p>启动多个mrworker</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">go run mrworker.go wc.so</span><br></pre></td></tr></tbody></table></figure></li><li><p>按顺序排序后的词频统计应当和序列化单机的结果保持一致，用main/test-mr.sh进行测试，将测试输出是否保持正确，是否具有修复崩溃worker的能力</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> mr-out-* | <span class="built_in">sort</span> | more</span><br><span class="line">A 509</span><br><span class="line">ABOUT 2</span><br><span class="line">ACT 8</span><br><span class="line">...</span><br></pre></td></tr></tbody></table></figure></li><li><p>结果将生成多个mr-out-X文件</p></li><li>可能会出现RPC的报错rpc.Register: method “Done” has 1 input parameters; needs exactly three，Done()没有通过RPC，先忽略</li></ul></li></ul><h3 id="Rules"><a href="#Rules" class="headerlink" title="Rules"></a>Rules</h3><ul><li>map 阶段应当将中间态的 keys 划分到 <code>nReduce</code> 个桶进行 reduce 任务，这个数量就是 reduce 任务的数量，这个参数是从 <code>main/mrcoordinator.go</code> 传入到 <code>mr/coordinator.go</code> 的 <code>MakeCoordinator()</code> 函数的。为了减少任务的消耗，每一个 mapper 应当创建 <code>nReduce</code> 个中间文件。</li><li>worker 应当将第 X 个 reduce 任务的输出放到 <code>mr-out-X</code>。</li><li><code>mr-out-X</code> 的输出格式，每一行包括一个 Reduce 函数的输出，以键值对的形式表示，用 <code>"%v %v"</code> 进行格式化，参照 <code>main/mrsequential.go</code>。格式错误可能导致测试不通过。</li><li>worker 应当将 Map 的输出文件放在当前目录下，以便它作为 Reduce 任务的输入。</li><li>当 MapReduce 任务完全结束时，<code>mr/coordinator.go</code> 的 <code>Done()</code> 方法应当返回 <code>true</code>，此时 <code>main/mrcoordinator.go</code> 将退出。</li><li>worker 也应当退出。一个简单的实现方法可以是使用 <code>call()</code> 的返回值，如果 worker 联系不上 coordinator，则说明任务已经完成，coordinator 已经退出，此时 worker 也可以退出。</li></ul><h3 id="Hints"><a href="#Hints" class="headerlink" title="Hints"></a>Hints</h3><ul><li>相关 Golang 的知识 <a href="https://pdos.csail.mit.edu/6.824/labs/guidance.html">https://pdos.csail.mit.edu/6.824/labs/guidance.html</a></li><li>一个入手的方法就是，设计 <code>mr/worker.go</code> 的 <code>Worker()</code> 函数，通过 RPC 向 coordinator 请求一个任务，然后设计 coordinator 的响应（尚未进行 map 任务的文件名），再设计 worker 如何读取这些文件，调用 Map 函数（类似于 <code>mrsequential.go</code>）。</li><li>Map 和 Reduce 函数是通过 go 的 plugin 进行动态加载的，后缀是 <code>.so</code> 的文件。</li><li>如果修改了 <code>mr/</code> 目录下的任何东西，最好都重新加载一下 plugin，也就是上面提到的放到 tasks 里面作为启动前的任务。</li><li>当前的 lab 是基于一台机器进行文件操作的，如果是多台机器则需要全局的文件系统例如 GFS，在此并未考虑。</li><li>中间文件的命名，可以是 <code>mr-X-Y</code>，其中 X 是 Map 任务的编号，Y 是 reduce 任务的编号。</li><li><p>map 任务存储的中间态键值对格式应当可以直接被 reduce 任务读取，一个可行的办法是使用 go 的 <code>encoding/json</code> 包：</p>  <figure class="highlight go"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// write</span></span><br><span class="line">enc := json.NewEncoder(file)</span><br><span class="line"><span class="keyword">for</span> _, kv := ... {</span><br><span class="line">err := enc.Encode(&amp;kv)</span><br><span class="line"></span><br><span class="line"><span class="comment">// read</span></span><br><span class="line">dec := json.NewDecoder(file)</span><br><span class="line"><span class="keyword">for</span> {</span><br><span class="line">    <span class="keyword">var</span> kv KeyValue</span><br><span class="line">    <span class="keyword">if</span> err := dec.Decode(&amp;kv); err != <span class="literal">nil</span> {</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    }</span><br><span class="line">    kva = <span class="built_in">append</span>(kva, kv)</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>map部分可以用<code>worker.go</code>里的<code>ihash(key)</code>函数通过给定的key来选择reduce任务。</p></li><li><p>可以参考部分<code>mrsequential.go</code>中的代码，是非常有用的。</p></li><li><p>coordinator是一个RPC服务，可能会有并发的问题，应当给一些数据加锁。</p></li><li><p>使用<code>go run-race</code>来引入go的竞态检测器，<code>test-mr.sh</code>开头有一段如何使用的说明，测试不会使用竞态检测器。不过，如果代码存在竞态，测试时会失败。</p></li><li><p>workers有时候需要等待，例如reduces需要再最后一个map完成再工作。一个解决方案是workers周期性地向coordinator请求work，使用<code>time.Sleep()</code>；另一个方法是再relevant RPC handler中使用<code>time.Sleep()</code>或者<code>sync.Cond</code>进行等待。每个RPC都有自己的线程，不会影响其他RPC。</p></li><li><p>coordinator无法区分宕机、卡住以及运行非常缓慢的workers。最好是让coordinator等待一定的时间（在这里是10s），超时则判定为死亡（当然有可能没有），然后把这个任务分发给其他worker。</p></li><li><p>如果要完成Section3.6中的Backup任务，将测试代码完成：worker没有崩溃的时候不会去完成其他任务，备份任务仅在10s后才进行。</p></li><li><p>可以使用<code>mrapps/crash.go</code>作为plugin进行崩溃恢复。</p></li><li><p>MapReduce论文中提到，为了确保发生崩溃的时候没有人注意到这部分文件，可以采用临时文件以及完全写入后再进行重命名的方法。可以用<code>ioutil.TempFile</code>或者<code>os.CreateTemp</code>进行临时文件的创建，用<code>os.Rename</code>进行重命名</p></li><li><p><code>test-mr.sh</code>在子目录 <code>mr-tmp</code>中运行其所有进程，因此如果出现问题可以看那里。 可以临时修改<code>test-mr.sh</code> 以在测试失败后退出，这样脚本就不会继续测试（并覆盖输出文件）。</p></li><li><p><code>test-mr-many.sh</code>是连续运行很多次<code>test-mr.sh</code>，以便找到概率性的错误。不能并行多个<code>test-mr.sh</code>实例，因为coordinator用了同一个socker会导致冲突。</p></li><li><p>GO RPC仅发送以大写字母开头的结构体字段，子结构必须由大写的字段名称。</p></li><li><p>调用RPC的<code>call()</code>方法时，返回结构应当包含所有默认值。RPC 调用应该如下所示：在调用之前不设置任何回复字段。 如果您传递具有非默认字段的回复结构，RPC 系统可能会默默地返回不正确的值。</p>  <figure class="highlight go"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reply := SomeType{}</span><br><span class="line">call(..., &amp;reply)</span><br></pre></td></tr></tbody></table></figure></li></ul><h3 id="Challenges"><a href="#Challenges" class="headerlink" title="Challenges"></a>Challenges</h3><ul><li>Implement your own MapReduce application (see examples in mrapps/*), e.g., Distributed Grep (Section 2.3 of the MapReduce paper).实现论文中 2.3 节的 MapReduce 应用。</li><li>Get your MapReduce coordinator and workers to run on separate machines, as they would in practice. You will need to set up your RPCs to communicate over TCP/IP instead of Unix sockets (see the commented out line in Coordinator.server()), and read/write files using a shared file system. For example, you can ssh into multiple <a href="http://kb.mit.edu/confluence/display/istcontrib/Getting+Started+with+Athena">Athena cluster</a> machines at MIT, which use <a href="http://kb.mit.edu/confluence/display/istcontrib/AFS+at+MIT+-+An+Introduction">AFS</a> to share files; or you could rent a couple AWS instances and use <a href="https://aws.amazon.com/s3/">S3</a> for storage.把 coordinator 和 workers 部署在不同的服务器上，改用 TCP/IP 取代 sockets 通信，并且使用 SFS 共享文件系统。</li></ul><h3 id="正式开始-Coding"><a href="#正式开始-Coding" class="headerlink" title="正式开始 Coding"></a>正式开始 Coding</h3><h4 id="worker-请求任务，coordinator-分配任务，worker-收到后打印"><a href="#worker-请求任务，coordinator-分配任务，worker-收到后打印" class="headerlink" title="worker 请求任务，coordinator 分配任务，worker 收到后打印"></a>worker 请求任务，coordinator 分配任务，worker 收到后打印</h4><blockquote><p>暂时只关注 coordinator 和 worker 的交互逻辑</p></blockquote><ul><li><p><code>wc.go</code> 的逻辑</p><figure class="highlight go"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 输入是文件名和内容，输出是结构体切片存放kva</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Map</span><span class="params">(filename <span class="type">string</span>, contents <span class="type">string</span>)</span></span> []mr.KeyValue {</span><br><span class="line">    <span class="comment">// function to detect word separators.</span></span><br><span class="line">    <span class="comment">// 匿名函数，接收一个rune，返回一个bool，用于判断是否是字母，不是字母则是true</span></span><br><span class="line">    ff := <span class="function"><span class="keyword">func</span><span class="params">(r <span class="type">rune</span>)</span></span> <span class="type">bool</span> { <span class="keyword">return</span> !unicode.IsLetter(r) }</span><br><span class="line"></span><br><span class="line">    <span class="comment">// split contents into an array of words.</span></span><br><span class="line">    <span class="comment">// 根据不是字母的点对contents进行拆分，也就是空格和其他，将得到单词的slice</span></span><br><span class="line">    words := strings.FieldsFunc(contents, ff)</span><br><span class="line"></span><br><span class="line">    kva := []mr.KeyValue{}</span><br><span class="line">    <span class="comment">// 遍历words切片，单词是key，value是"1"；重复的key在这时不会合并</span></span><br><span class="line">    <span class="keyword">for</span> _, w := <span class="keyword">range</span> words {</span><br><span class="line">        kv := mr.KeyValue{w, <span class="string">"1"</span>}</span><br><span class="line">        kva = <span class="built_in">append</span>(kva, kv)</span><br><span class="line">    }</span><br><span class="line">    <span class="keyword">return</span> kva</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Reduce</span><span class="params">(key <span class="type">string</span>, values []<span class="type">string</span>)</span></span> <span class="type">string</span> {</span><br><span class="line">    <span class="comment">// return the number of occurrences of this word.</span></span><br><span class="line">    <span class="comment">// values切片的长度就是个数相加，实现了map中同key相加的效果</span></span><br><span class="line">    <span class="keyword">return</span> strconv.Itoa(<span class="built_in">len</span>(values))</span><br><span class="line">} </span><br></pre></td></tr></tbody></table></figure></li><li><p><code>mrsequential.go</code>的逻辑</p><ul><li>判定输入的参数<code>os.Args</code></li><li>用<code>loadPlugin(os.Args[1])</code>读取<code>mapf</code>和<code>reducef</code>两个以动态链接加载的函数（用1是因为0是文件路径 <strong>/home/boom/go/src/6.5840/src/main/__debug_bin710355273</strong> <code>wc.so pg-being_ernest.txt pg-dorian_gray.txt pg-frankenstein.txt pg-grimm.txt pg-huckleberry_finn.txt pg-metamorphosis.txt pg-sherlock_holmes.txt pg-tom_sawyer.txt</code>，1才是<code>wc.so</code>）<ul><li><code>p, err := plugin.Open(filename)</code>加载插件</li><li><code>xf, err := p.Lookup("Map")和p.Lookup("Reduce")</code>检索符号（这里的符号是函数）</li><li><code>f :=  xf.(func())</code>调用函数</li></ul></li><li><p>在worker中KeyValue的结构体，用这个结构体定义未初始化的切片<code>type ByKey []mr.KeyValue</code>用于<code>intermediate := []mr.KeyValue{}</code>的排序</p><figure class="highlight go"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// struct is in 6.5840/mr</span></span><br><span class="line"><span class="keyword">type</span> KeyValue <span class="keyword">struct</span> {</span><br><span class="line">    Key   <span class="type">string</span></span><br><span class="line">    Value <span class="type">string</span></span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// for sorting by key.</span></span><br><span class="line"><span class="keyword">type</span> ByKey []mr.KeyValue</span><br><span class="line"></span><br><span class="line"><span class="comment">// for sorting by key.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a ByKey)</span></span> Len() <span class="type">int</span>           { <span class="keyword">return</span> <span class="built_in">len</span>(a) }</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a ByKey)</span></span> Swap(i, j <span class="type">int</span>)      { a[i], a[j] = a[j], a[i] }</span><br><span class="line"><span class="comment">// 实现了sort接口的三个方法以完成排序，按照键的字母顺序排序a-z</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(a ByKey)</span></span> Less(i, j <span class="type">int</span>) <span class="type">bool</span> { <span class="keyword">return</span> a[i].Key &lt; a[j].Key }</span><br></pre></td></tr></tbody></table></figure></li><li><p>读取后续各个参数，open、read、close各个file，依次把filename和content进行map，再存入切片</p><figure class="highlight go"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> _, filename := <span class="keyword">range</span> os.Args[<span class="number">2</span>:] {</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">    file, err := os.Open(filename)</span><br><span class="line">    content, err := ioutil.ReadAll(file) <span class="comment">// 在go1.16之后用io.ReadAll()</span></span><br><span class="line">    file.Close()</span><br><span class="line">    kva := mapf(filename, <span class="type">string</span>(content)) <span class="comment">// 调用mapf获取当前文档的所有分词kv的切片</span></span><br><span class="line">    intermediate = <span class="built_in">append</span>(intermediate, kva...) <span class="comment">// 追加到中间态的切片中暂存</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>排序切片，创建文件</p><figure class="highlight go"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sort.Sort(ByKey(intermediate))</span><br><span class="line"></span><br><span class="line">oname := <span class="string">"mr-out-0"</span></span><br><span class="line">ofile, _ := os.Create(oname)</span><br></pre></td></tr></tbody></table></figure></li><li><p>reduce，然后关闭文件</p><figure class="highlight go"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">i := <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i &lt; <span class="built_in">len</span>(intermediate) {</span><br><span class="line">        j := i + <span class="number">1</span></span><br><span class="line">        <span class="comment">// 找到所有相同key的下标范围[i,j)</span></span><br><span class="line">        <span class="keyword">for</span> j &lt; <span class="built_in">len</span>(intermediate) &amp;&amp; intermediate[j].Key == intermediate[i].Key {</span><br><span class="line">            j++</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// 暂存这些同key的所有value</span></span><br><span class="line">        values := []<span class="type">string</span>{}</span><br><span class="line">        <span class="keyword">for</span> k := i; k &lt; j; k++ {</span><br><span class="line">            values = <span class="built_in">append</span>(values, intermediate[k].Value)</span><br><span class="line">        }</span><br><span class="line">        <span class="comment">// 进行reduce</span></span><br><span class="line">        output := reducef(intermediate[i].Key, values)</span><br><span class="line">        <span class="comment">// 写入上面创建的ofile文件，注意要按照这个格式</span></span><br><span class="line">        <span class="comment">// this is the correct format for each line of Reduce output.</span></span><br><span class="line">        fmt.Fprintf(ofile, <span class="string">"%v %v\n"</span>, intermediate[i].Key, output)</span><br><span class="line">        <span class="comment">// 更新i，找下一组key</span></span><br><span class="line">        i = j</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    ofile.Close()</span><br></pre></td></tr></tbody></table></figure></li></ul></li></ul><h4 id="入口"><a href="#入口" class="headerlink" title="入口"></a>入口</h4><ul><li><p>单个终端启动<code>main/mrcoordinator.go</code></p><ul><li><code>m := mr.MakeCoordinator(os.Args[1:], 10)</code>带Args读入，这里的Args是所有的txt文档；和<code>nReduce=10</code>（对于<code>map</code>任务的数量，<strong>文件个数</strong>就是<code>map</code>个数，<strong>文件序号</strong>就是<code>map</code>序号）<ul><li>由<code>mr.MakeCoordinator（）</code>初始化<code>Coordinator</code></li><li><code>c.server()</code>启动一个线程监听来自<code>mr/worker.go</code>的RPC请求</li><li><code>go c.loopRemoveTimeoutTasks()</code>启动另一个线程循环移除过期的任务</li></ul></li><li>周期性调用<code>Done()</code>询问是否结束，如果返回<code>false</code>则在延迟1s后结束进程</li><li>把所有<code>files</code>放入<code>c.unIssueMapTasks</code>队列</li></ul></li><li><p>多个终端启动<code>main/mrworker.go</code></p><ul><li>加载一个启动参数<code>wc.so</code>动态插件，<code>mapf, reducef := loadPlugin(os.Args[1])</code></li><li><code>mr.Worker(mapf, reducef)</code></li><li><p><code>Worker</code>结构：两个函数，任务属性、是否全部结束、Id</p><figure class="highlight go"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> AWorker <span class="keyword">struct</span> {</span><br><span class="line">    mapf    <span class="function"><span class="keyword">func</span><span class="params">(<span class="type">string</span>, <span class="type">string</span>)</span></span> []KeyValue</span><br><span class="line">    reducef <span class="function"><span class="keyword">func</span><span class="params">(<span class="type">string</span>, []<span class="type">string</span>)</span></span> <span class="type">string</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// false for map, true for reduce</span></span><br><span class="line">    mapOrReduce <span class="type">bool</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// false for not done, true for done and must exit</span></span><br><span class="line">    allDone <span class="type">bool</span></span><br><span class="line"></span><br><span class="line">    workerId <span class="type">int</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>判定<code>allDone</code>，进行<code>worker.process()</code></p></li><li>判定<code>mapOrReduce</code>，选择<code>map</code>任务或者<code>reduce</code>任务<ul><li>如果是<code>map</code>任务<ul><li>请求任务<code>reply := worker.askMapTask()</code></li><li>处理<code>reply</code>，如果为<code>nil</code>表示<code>map</code>任务已经处理完成，切换到<code>reduce</code>任务<code>worker.mapOrReduce = true</code>；如果不为<code>nil</code>，若<code>reply.FileId==-1</code>说明任务分配完了但是还没处理完，没有<code>map</code>任务可以给当前<code>worker</code>处理，什么都不做，随机等待一小段时间后再返回，重新<code>process</code>请求，否则就正常处理<code>worker.executeMap(reply)</code></li></ul></li><li>如果是<code>reduce</code>任务<ul><li>请求任务<code>reply := worker.askReduceTask()</code></li><li>处理<code>reply</code>，如果为<code>nil</code>则表示全部结束， <code>worker.allDone = true</code>后返回，worker进程会退出；如果不为<code>nil</code>，若<code>reply.RIndex==-1</code>说明reduce任务已分配完但没处理完，否则就正常处理<code>worker.executeReduce(reply)</code></li></ul></li></ul></li></ul></li></ul><h4 id="任务的请求和处理机制"><a href="#任务的请求和处理机制" class="headerlink" title="任务的请求和处理机制"></a>任务的请求和处理机制</h4><ul><li><code>reply := worker.askMapTask()</code></li></ul><figure class="highlight go"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(worker *AWorker)</span></span> askMapTask() *MapTaskReply {</span><br><span class="line">    <span class="comment">// declare an argument structure and reply structure.</span></span><br><span class="line">    args := MapTaskArgs{WorkerId: worker.workerId}</span><br><span class="line">    reply := MapTaskReply{}</span><br><span class="line"></span><br><span class="line">    worker.logPrintf(<span class="string">"Asking map task...\n"</span>)</span><br><span class="line">    ok := call(<span class="string">"Coordinator.GiveMapTask"</span>, &amp;args, &amp;reply)</span><br><span class="line">    <span class="keyword">if</span> !ok {</span><br><span class="line">        worker.logPrintf(<span class="string">"askMapTask failed\n"</span>)</span><br><span class="line">    }</span><br><span class="line">    </span><br><span class="line">    worker.workerId = reply.WorkerId</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> reply.FileId == <span class="number">-1</span> {</span><br><span class="line">        <span class="keyword">if</span> reply.AllDone {</span><br><span class="line">            worker.logPrintf(<span class="string">"All map tasks are done\n"</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            worker.logPrintf(<span class="string">"No map task available\n"</span>)</span><br><span class="line">            <span class="keyword">return</span> &amp;reply</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    worker.logPrintf(<span class="string">"Got map task %v on file %v\n"</span>, reply.FileId, reply.FileName)</span><br><span class="line">    <span class="keyword">return</span> &amp;reply</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li><ul><li>请求主体的结构：<code>worker *AWorker</code></li><li><p>请求参数<code>args</code>结构：</p><figure class="highlight go"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> MapTaskArgs <span class="keyword">struct</span> {</span><br><span class="line">    <span class="comment">// give -1 if no task</span></span><br><span class="line">    WorkerId <span class="type">int</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>返回参数<code>reply</code>结构：</li></ul><figure class="highlight go"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> MapTaskReply <span class="keyword">struct</span> {</span><br><span class="line">    <span class="comment">// worker pass the file name to the os to read</span></span><br><span class="line">    FileName <span class="type">string</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// marks a unique file id for map task, give -1 if no more file</span></span><br><span class="line">    FileId <span class="type">int</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// for reduce task</span></span><br><span class="line">    NReduce <span class="type">int</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// assign the worker id to the task</span></span><br><span class="line">    WorkerId <span class="type">int</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// assign where this kind of tasks are all done</span></span><br><span class="line">    <span class="comment">// if not or FileId is -1, the worker should wait</span></span><br><span class="line">    AllDone <span class="type">bool</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>任务分发：<code>func (c *Coordinator) GiveMapTask(args *MapTaskArgs, reply *MapTaskReply) error{}</code></p><ul><li>分发任务WorkerId为当前Coordinator的<code>c.curWorkerId</code>，此后<code>curWorkerId++</code>，如果WorkerId存在则不改变。</li><li>通过<code>c.issuedMapMutex.Lock()</code>获取Map任务的互斥锁<code>issuedMapMutex  sync.Mutex</code></li><li>判定<code>Coordinator</code>的<code>c.mapDone</code>字段，map任务结束则直接释放锁、<code>reply.FileId == -1</code>，<code>reply.AllDone</code>设为true，然后返回nil</li><li>判定没有分配的map任务队列和处理中的map任务队列是否都为空，为空则和上一条一样，附加设置<code>c.mapDone</code>为<code>true</code>，以及按照<code>c.nReduce</code>放入reduce的未分配队列</li><li>从未分配map任务队列中<code>PopBack()</code>拿到fileId（按照文件数量排列<code>0-len(files)-1</code>)，以此也可以拿到文件名并写入reply，并且给<code>MapTaskState</code>设置开始时间，为后续超时做准备。</li></ul><figure class="highlight go"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> MapTaskState <span class="keyword">struct</span> {</span><br><span class="line">    beginSecond <span class="type">int64</span></span><br><span class="line">    workerId    <span class="type">int</span></span><br><span class="line">    fileId      <span class="type">int</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>拿出的fileId放入已分配正在处理的map任务队列MapSet（实际上是使用map结构，并且统计了count）</li><li>处理相应的返回值</li></ul></li></ul></li><li><p><code>worker.executeMap(reply)</code></p></li></ul><figure class="highlight go"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(worker *AWorker)</span></span> executeMap(reply *MapTaskReply) {</span><br><span class="line">    <span class="comment">// execute map task</span></span><br><span class="line">    intermediate := makeIntermediateFromFile(reply.FileName, worker.mapf)</span><br><span class="line">    <span class="comment">// write intermediate to files</span></span><br><span class="line">    worker.writeToFiles(reply.FileId, reply.NReduce, intermediate)</span><br><span class="line">    worker.joinMapTask(reply.FileId)</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li><ul><li><code>intermediate := makeIntermediateFromFile(reply.FileName, worker.mapf)</code>主要用<code>mapf</code>打开文件然后文档，生成键值对，返回一个中间态的<code>[]KeyValue</code>切片</li><li><code>worker.writeToFiles(reply.FileId, reply.NReduce, intermediate)</code>写入到中间文件，求hash后取<code>mod nReduce</code>得到分给哪一个reduce任务，因为reduce任务数量是知道的</li><li>用<code>encoding/json</code>包存储中间态文件，可以直接被reduce任务读取</li><li>请求<code>call("Coordinator.JoinMapTask", &amp;args, &amp;reply)</code><ul><li>拿到已分配map任务队列的锁</li><li>检查是否因为超时而导致当前FileId的任务已经从已分配map任务队列中移除<ul><li>已经被移除，解锁、打印信息</li><li>未被移除，移除、解锁，打印信息</li><li>未被移除且超时，放入未分配队列</li></ul></li></ul></li></ul></li><li><p><code>reply := worker.askReduceTask()</code></p></li></ul><figure class="highlight go"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(worker *AWorker)</span></span> askReduceTask() *ReduceTaskReply {</span><br><span class="line">    <span class="comment">// declare an argument structure and reply structure.</span></span><br><span class="line">    args := ReduceTaskArgs{WorkerId: worker.workerId}</span><br><span class="line">    reply := ReduceTaskReply{}</span><br><span class="line"></span><br><span class="line">    ok := call(<span class="string">"Coordinator.GiveReduceTask"</span>, &amp;args, &amp;reply)</span><br><span class="line">    <span class="keyword">if</span> !ok {</span><br><span class="line">        worker.logPrintf(<span class="string">"askReduceTask failed\n"</span>)</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    worker.workerId = reply.WorkerId</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> reply.RIndex == <span class="number">-1</span> {</span><br><span class="line">        <span class="keyword">if</span> reply.AllDone {</span><br><span class="line">            worker.logPrintf(<span class="string">"All reduce tasks are done, need to terminate this worker\n"</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">        } <span class="keyword">else</span> {</span><br><span class="line">            worker.logPrintf(<span class="string">"No reduce task available\n"</span>)</span><br><span class="line">            <span class="keyword">return</span> &amp;reply</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    worker.logPrintf(<span class="string">"Got reduce task %v\n"</span>, reply.RIndex)</span><br><span class="line">    <span class="keyword">return</span> &amp;reply</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li><ul><li>请求主体的结构：<code>worker *AWorker</code></li><li><p>请求参数<code>args</code>结构：</p><figure class="highlight go"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> ReduceTaskArgs <span class="keyword">struct</span> {</span><br><span class="line">    <span class="comment">// give -1 if no task</span></span><br><span class="line">    WorkerId <span class="type">int</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>返回参数<code>reply</code>结构：</p><figure class="highlight go"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> ReduceTaskReply <span class="keyword">struct</span> {</span><br><span class="line">    RIndex    <span class="type">int</span></span><br><span class="line">    NReduce   <span class="type">int</span></span><br><span class="line">    FileCount <span class="type">int</span></span><br><span class="line">    WorkerId  <span class="type">int</span></span><br><span class="line">    AllDone   <span class="type">bool</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul></li><li><p>任务分发<code>func (c *Coordinator) GiveReduceTask(args *ReduceTaskArgs, reply *ReduceTaskReply) error {}</code></p><ul><li>分发任务WorkerId为当前Coordinator的<code>c.curWorkerId</code>，此后<code>curWorkerId++</code>，如果WorkerId存在则不改变，这里用的是Map任务的同一套编号，也就是说不会出现map和reduce的WorkerId相同。</li><li>通过<code>c.issuedReduceMutex.Lock()</code>获取Reduce任务的互斥锁<code>issuedReducepMutex  sync.Mutex</code></li><li>判定<code>Coordinator</code>的<code>c.allDone</code>字段，Reduce任务结束则直接释放锁、<code>reply.AllDone</code>设为true，<code>reply.RIndex</code>设为-1，然后返回nil</li><li>判定没有分配的Reduce任务队列和处理中的Reduce任务队列是否都为空，为空则和上一条一样，附加设置<code>c.AllDone</code>为<code>true</code>，先比较请求Map，这里多设置一个参数<code>c.AllDone</code></li><li>从未分配Redduce任务队列中<code>PopBack()</code>拿到rIndex（按照NReduce数量排列<code>0-NReduce-1</code>)并写入reply，并且给<code>ReduceTaskState</code>设置开始时间，为后续超时做准备。</li></ul></li><li><p><code>worker.executeReduce(reply)</code></p></li></ul><figure class="highlight go"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(worker *AWorker)</span></span> executeReduce(reply *ReduceTaskReply) {</span><br><span class="line">    outName := fmt.Sprintf(<span class="string">"mr-out-%v"</span>, reply.RIndex)</span><br><span class="line">    intermediate := <span class="built_in">make</span>([]KeyValue, <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; reply.FileCount; i++ {</span><br><span class="line">        intermediate = <span class="built_in">append</span>(intermediate, readIntermediateFiles(i, reply.RIndex)...)</span><br><span class="line">    }</span><br><span class="line">    worker.logPrintf(<span class="string">"Total intermediate size: %v\n"</span>, <span class="built_in">len</span>(intermediate))</span><br><span class="line">    tempfile, err := os.CreateTemp(<span class="string">"."</span>, <span class="string">"mrtemp"</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> {</span><br><span class="line">        worker.logPrintf(<span class="string">"cannot create tempfile for %v\n"</span>, outName)</span><br><span class="line">    }</span><br><span class="line">    reduceKVSlice(intermediate, worker.reducef, tempfile)</span><br><span class="line">    tempfile.Close()</span><br><span class="line">    err = os.Rename(tempfile.Name(), outName)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> {</span><br><span class="line">        worker.logPrintf(<span class="string">"cannot rename tempfile for %v\n"</span>, outName)</span><br><span class="line">    }</span><br><span class="line">    worker.joinReduceTask(reply.RIndex)</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li><ul><li><code>outName := fmt.Sprintf("mr-out-%v", reply.RIndex)</code>，当前<code>Reduce</code>任务的输出</li><li><p>从当前RIndex所属的各个中间态文件读取，汇合到intermediate</p><figure class="highlight go"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">intermediate := <span class="built_in">make</span>([]KeyValue, <span class="number">0</span>)</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; reply.FileCount; i++ {</span><br><span class="line">    worker.logPrintf(<span class="string">"Reading intermediate files on cluster %v\n"</span>, i)</span><br><span class="line">    intermediate = <span class="built_in">append</span>(intermediate, readIntermediateFiles(i, reply.RIndex)...)</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul></li><li><ul><li>通过<code>reduceKVSlice</code>排序以及合并，然后重命名、输出</li><li>请求<code>call("Coordinator.JoinMapTask", &amp;args, &amp;reply)</code><ul><li>拿到已分配map任务队列的锁</li><li>检查是否因为超时而导致当前FileId的任务已经从已分配map任务队列中移除<ul><li>已经被移除，解锁、打印信息</li><li>未被移除，移除、解锁，打印信息</li><li>未被移除且超时，放入未分配队列</li></ul></li></ul></li></ul></li></ul><h4 id="任务分配机制"><a href="#任务分配机制" class="headerlink" title="任务分配机制"></a>任务分配机制</h4><blockquote><p>使用<strong>任务队列</strong>，<code>coordinator</code> 维护了两组两个任务队列，未分配、已分配（正在运行），当 <code>worker</code> 请求到达时，给 <code>worker</code> 分配一个未分配的任务，并把这个任务标记为已分配</p></blockquote><p>未分配任务使用有锁的双向队列，已分配任务使用无锁的 Map，操作时加锁，有待优化</p><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash test-mr.sh &gt; test-mr.out</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">*** Starting wc test.</span><br><span class="line">--- wc test: PASS</span><br><span class="line">*** Starting indexer test.</span><br><span class="line">--- indexer test: PASS</span><br><span class="line">*** Starting map parallelism test.</span><br><span class="line">--- map parallelism test: PASS</span><br><span class="line">*** Starting reduce parallelism test.</span><br><span class="line">--- reduce parallelism test: PASS</span><br><span class="line">*** Starting job count test.</span><br><span class="line">--- job count test: PASS</span><br><span class="line">*** Starting early exit test.</span><br><span class="line">--- early exit test: PASS</span><br><span class="line">*** Starting crash test.</span><br><span class="line">--- crash test: PASS</span><br><span class="line">*** PASSED ALL TESTS</span><br></pre></td></tr></tbody></table></figure><!-- markdownlint-disable-file MD025 MD033 -->]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;📌&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png?v8&quot; aria-hidden=&quot;true&quot; onerror=&quot;this.parent.classList.add(&#39;github-emoji-fallback&#39;)&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MIT 6.824 Distributed Systems Lab-1-Golang&lt;br&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;💨&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f4a8.png?v8&quot; aria-hidden=&quot;true&quot; onerror=&quot;this.parent.classList.add(&#39;github-emoji-fallback&#39;)&quot;&gt;&lt;/span&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;🕥&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f565.png?v8&quot; aria-hidden=&quot;true&quot; onerror=&quot;this.parent.classList.add(&#39;github-emoji-fallback&#39;)&quot;&gt;&lt;/span&gt;&lt;span class=&quot;github-emoji&quot;&gt;&lt;span&gt;😴&lt;/span&gt;&lt;img src=&quot;https://github.githubassets.com/images/icons/emoji/unicode/1f634.png?v8&quot; aria-hidden=&quot;true&quot; onerror=&quot;this.parent.classList.add(&#39;github-emoji-fallback&#39;)&quot;&gt;&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;</summary>
    
    
    
    <category term="Summary" scheme="https://boom1999.github.io/categories/Summary/"/>
    
    
    <category term="Distributed Systems" scheme="https://boom1999.github.io/tags/Distributed-Systems/"/>
    
    <category term="LinkedList" scheme="https://boom1999.github.io/tags/LinkedList/"/>
    
  </entry>
  
  <entry>
    <title>Skills for TexLive under VsCode</title>
    <link href="https://boom1999.github.io/2023/07/12/TexSkills/"/>
    <id>https://boom1999.github.io/2023/07/12/TexSkills/</id>
    <published>2023-07-12T00:00:00.000Z</published>
    <updated>2023-07-12T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Record some $ LaTeX $ packages and installation and usage skills.</p></blockquote><span id="more"></span><h2 id="books-1-Packages"><a href="#books-1-Packages" class="headerlink" title=":books: 1. Packages"></a><span class="github-emoji"><span>📚</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4da.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 1. Packages</h2><h3 id="1-1-Packages-for-Code-minted"><a href="#1-1-Packages-for-Code-minted" class="headerlink" title="1.1. Packages for Code: minted"></a>1.1. Packages for Code: <code>minted</code></h3><ul><li>import package <code>minted</code> for code highlighting.</li></ul><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\usepackage</span>{minted}</span><br></pre></td></tr></tbody></table></figure><ul><li>Before using <code>minted</code>, you should have <code>python version&gt;2.7</code> and install <code>pygments</code> first.</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python -V</span><br><span class="line"></span><br><span class="line">pip install pygments</span><br></pre></td></tr></tbody></table></figure><ul><li>It may be show error message</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You must invoke LaTeX with the -shell-escape flag`. </span><br></pre></td></tr></tbody></table></figure><ul><li>The reason is that the <code>minted</code> package needs to call the <code>pygments</code> package to highlight the code, and the <code>pygments</code> package needs to call the system command. The <code>-shell-escape</code> parameter is used to allow the <code>minted</code> package to call the system command.</li><li>It’s necessary to add <code>-shell-escape</code> parameter to the setting file, the following json file is a part of it.</li></ul><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">"latex-workshop.latex.tools"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"xelatex"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"command"</span><span class="punctuation">:</span> <span class="string">"xelatex"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"args"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">"--shell-escape"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">"-synctex=1"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">"-interaction=nonstopmode"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">"-file-line-error"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">"%DOCFILE%"</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"pdflatex"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"command"</span><span class="punctuation">:</span> <span class="string">"pdflatex"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"args"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">"--shell-escape"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">"-synctex=1"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">"-interaction=nonstopmode"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">"-file-line-error"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">"%DOCFILE%"</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"latexmk"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"command"</span><span class="punctuation">:</span> <span class="string">"latexmk"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"args"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">"--shell-escape"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">"-synctex=1"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">"-interaction=nonstopmode"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">"-file-line-error"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">"-pdf"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">"-outdir=%OUTDIR%"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">"%DOCFILE%"</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"bibtex"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"command"</span><span class="punctuation">:</span> <span class="string">"bibtex"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"args"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">"%DOCFILE%"</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">}</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br></pre></td></tr></tbody></table></figure><ul><li>Then it may also show error message</li></ul><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">You must have `pygmentize<span class="string">' installed to use this package.</span></span><br></pre></td></tr></tbody></table></figure><ul><li>This is because you installed <code>pygments</code> failed or the <code>pygments</code> package is not in the system path. In windows 10 or later versions, there is a inside python version in <code>Disk C</code>.</li><li><p>You will find <code>pygmentize.exe</code> in path: <code>C:\Users\username\AppData\Local\Programs\Python\Python37\Scripts</code>, add the path to the system path, then it will work.</p></li><li><p>Example for <code>minted</code> package</p></li></ul><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\begin</span>{minted}[linenos=true,frame=lines,framesep=2mm]{python}<span class="string"></span></span><br><span class="line"><span class="string">def quick_sort(arr):</span></span><br><span class="line"><span class="string">    if len(arr) &lt; 2:</span></span><br><span class="line"><span class="string">        return arr</span></span><br><span class="line"><span class="string">    else:</span></span><br><span class="line"><span class="string">        pivot = arr[0]</span></span><br><span class="line"><span class="string">        less = [i for i in arr[1:] if i &lt;= pivot]</span></span><br><span class="line"><span class="string">        greater = [i for i in arr[1:] if i &gt; pivot]</span></span><br><span class="line"><span class="string">        return quick_sort(less) + [pivot] + quick_sort(greater)</span></span><br><span class="line"><span class="string"></span><span class="keyword">\end</span>{minted}</span><br></pre></td></tr></tbody></table></figure><p><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tex/minted.jpg" alt="minted_file"></p><!-- markdownlint-disable-file MD025 MD028 MD033 -->]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Record some $ LaTeX $ packages and installation and usage skills.&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Summary" scheme="https://boom1999.github.io/categories/Summary/"/>
    
    
    <category term="Latex" scheme="https://boom1999.github.io/tags/Latex/"/>
    
    <category term="VSCode" scheme="https://boom1999.github.io/tags/VSCode/"/>
    
  </entry>
  
  <entry>
    <title>Installation for TexLive under VsCode</title>
    <link href="https://boom1999.github.io/2023/03/27/TexLive+VsCode/"/>
    <id>https://boom1999.github.io/2023/03/27/TexLive+VsCode/</id>
    <published>2023-03-27T00:00:00.000Z</published>
    <updated>2023-03-27T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Okey, let’s go! I used to use <code>VsCode</code> + <code>TexLive</code>, which is more convenient, because <code>VsCode</code> has a built-in <code>LaTeX Workshop</code> extension, which can be used directly after installation. </p></blockquote><span id="more"></span><h2 id="books-1-Forwards"><a href="#books-1-Forwards" class="headerlink" title=":books: 1.Forwards"></a><span class="github-emoji"><span>📚</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4da.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 1.Forwards</h2><ul><li><p>$ LaTeX $ is widely used in <strong>academia</strong> for the communication and publication of scientific documents in many fields, including <strong>mathematics, computer science, engineering, physics, chemistry, economics, linguistics, quantitative psychology, philosophy, and political science</strong>. It also has a prominent role in the preparation and publication of books and articles that contain complex multilingual materials, such as Arabic and Greek. LaTeX uses the TeX typesetting program for formatting its output, and is itself written in the <strong>$TeX$ macro language</strong>.</p></li><li><p>$ LaTeX $ can be used as <strong>a standalone document preparation system</strong>, or as <strong>an intermediate format</strong>. In the latter role, for example, it is sometimes used as part of a pipeline for translating <code>DocBook</code> and <code>other XML-based formats</code> to <code>PDF</code>. The typesetting system offers programmable desktop publishing features and extensive facilities for automating most aspects of typesetting and desktop publishing, including <strong>numbering and cross-referencing of tables and figures, chapter and section headings, graphics, page layout, indexing and bibliographies</strong>.</p></li><li><p>Without further ado, let’s go directly to the picture!<br><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tex/tex_example.jpg" alt="Tex example"></p></li></ul><h2 id="pushpin-2-VsCode-installation-and-language-configuration"><a href="#pushpin-2-VsCode-installation-and-language-configuration" class="headerlink" title=":pushpin: 2.VsCode installation and language configuration"></a><span class="github-emoji"><span>📌</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4cc.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 2.VsCode installation and language configuration</h2><blockquote><p>By default, everyone can install vscode and be familiar with the basic operations, so I won’t repeat it here. If you don’t know how to install it, you can refer to the <a href="https://code.visualstudio.com/"> official website</a>, only list a few points here.</p></blockquote><ol><li>Pay attention to modifying the <strong>installation path</strong>, because more <strong>plug-ins</strong> may be installed later (not only $LaTeX$, but also other scenarios).</li><li>For convenience, it is recommended to create a desktop shortcut, and add the “Open with Code” action to the Windows Explorer file context menu, and add it to the <code>PATH</code>.</li><li>如果你需要改为中文环境<span class="github-emoji"><span>🇨🇳</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f1e8-1f1f3.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span>，可以安装中文插件，可以在左边栏的拓展中搜索<a href="https://code.visualstudio.com/docs/getstarted/locales">Chinese (Simplified) Language Pack for Visual Studio Code</a>.</li></ol><h2 id="file-folder-3-TexLive-Download-and-Installation"><a href="#file-folder-3-TexLive-Download-and-Installation" class="headerlink" title=":file_folder: 3.TexLive Download and Installation"></a><span class="github-emoji"><span>📁</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4c1.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 3.TexLive Download and Installation</h2><blockquote><p><code>TexLive</code> is used here, if you want to use <code>MikTex</code> or others, you can refer to other articles.</p></blockquote><ul><li><p>Install TexLive via <a href="https://tug.org/texlive/acquire-iso.html">ISO image</a>, you can choose download from a nearby CTAN mirror or manually choose CTAN mirror.<br><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tex/ISO_image.jpg" alt="ISO image"></p></li><li><p><span class="github-emoji"><span>💿</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4bf.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> You can choose a <strong>suitable mirror</strong> to download according to your network status. If the download speed is too <em>slow</em>, you can try to choose a mirror station that is closer to download. It may take about ten minutes.</p><ul><li>This directory contains the ISO image for the official TeX Live release; md5 and sha512 checksums are provided, and the sha checksum is GPG-signed. The generic names (texliveYYYY.iso and texlive.iso) are symlinks to the dated release .iso.</li><li>If you have problems with installation or running TeX after installation, please check your environment variables: settings, including PATH, that end up referencing previously-installed TeX systems (TeX Live or otherwise), can cause trouble, especially on Windows.</li></ul></li><li><p><span class="github-emoji"><span>📋</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4cb.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Wait for the download to complete, open the ISO file, and open the batch file <code>install-tl-windows.bat</code> as an administrator.</p><ul><li>If you are using Windows 10 or 11, you can right-click the ISO file and select “Mount” to mount the ISO file as a virtual disk. Then you can open the batch file as an administrator.</li><li>If you are using Windows 7, you can use the <a href="https://www.7-zip.org/">7-Zip</a> software to open the ISO file, and then open the batch file as an administrator.<br><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tex/open_ISO.jpg" alt="Open ISO"></li></ul></li><li><p>Then it <em>freezes</em> for a while, which is normal, and the GUI for installation appears.</p><div align="center"><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tex/installer_gui.jpg" alt="installer gui" width="30%" height="30%" text-align:center=""></div></li><li><p><span class="github-emoji"><span>🔧</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f527.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> Modify the installation path, usually <code>Disk:/texlive/year</code>, such as<code>D:/texlive/2023</code>, and then click <code>Install</code>. It may take a while, depending on your computer performance, so take a break with a cup of coffee.</p></li><li><p>There is an Advanced option. Generally speaking, after changing <code>TEXDIR</code>, the <code>TEXMFLOCAL</code> path will also be modified. If you are not familiar with other options, don’t to modify them (especially for novices).</p></li><li><p><span class="github-emoji"><span>✅</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2705.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> After the installation is complete, click <code>Finish</code> to exit the installation interface.</p><div align="center"><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tex/close_gui.jpg" alt="close gui" width="50%" height="50%" text-align:center=""></div></li><li><p>Check if the installation is successful. Use <code>xelatex -v</code> in <em>CMD</em>.<br><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tex/installation_success.jpg" alt="Installation successfully"></p></li></ul><h2 id="hammer-4-Extension-installation-and-environment-settings"><a href="#hammer-4-Extension-installation-and-environment-settings" class="headerlink" title=":hammer: 4. Extension installation and environment settings"></a><span class="github-emoji"><span>🔨</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f528.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 4. Extension installation and environment settings</h2><h3 id="nut-and-bolt-4-1-Install-LaTex-Workshop-extension-in-Vscode"><a href="#nut-and-bolt-4-1-Install-LaTex-Workshop-extension-in-Vscode" class="headerlink" title=":nut_and_bolt: 4.1 Install LaTex Workshop extension in Vscode."></a><span class="github-emoji"><span>🔩</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f529.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 4.1 Install <code>LaTex Workshop</code> extension in Vscode.</h3><ul><li>Open the Extensions sidebar in VS Code. <code>View → Extensions</code> or <code>Ctrl+Shift+X</code>.</li><li>Search for <code>LaTeX Workshop</code>.</li><li>Click Install. It will be installed into the <code>~/.vscode/extensions</code> directory.</li><li><p>Reload VS Code after installation.<br><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tex/install_latex_workshop.jpg" alt="Install LaTex Workshop"></p></li><li><p>If your <code>Tex Live</code> version is relatively old, additional manual configuration of environment variables may be required.</p></li></ul><h3 id="bookmark-tabs-4-2-Environment-settings"><a href="#bookmark-tabs-4-2-Environment-settings" class="headerlink" title=":bookmark_tabs: 4.2 Environment settings"></a><span class="github-emoji"><span>📑</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d1.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 4.2 Environment settings</h3><ul><li>There are two environment configuration schemes in Vscode, one is to use buttons and option settings directly, and the other is to use <code>json</code> to set.<br><img src="https://cdn.jsdelivr.net/gh/boom1999/boom1999.github.io@hexo_backup/images/tex/workshop_setting_1.jpg" alt="workshop_setting"></li><li>Click <code>Open settings (JSON)</code> in the upper right corner to use the code settings.<em><a href="https://www.json.org/json-en.html">JSON</a> is a lightweight text data format with a certain structure. If you are not familiar with it, you can spend a few minutes to understand it.</em></li><li><strong>Add</strong> the following settings after other settings.</li></ul><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">{</span></span><br><span class="line">    <span class="attr">"latex-workshop.latex.autoBuild.run"</span><span class="punctuation">:</span> <span class="string">"never"</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"latex-workshop.showContextMenu"</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"latex-workshop.intellisense.package.enabled"</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"latex-workshop.message.error.show"</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"latex-workshop.message.warning.show"</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"latex-workshop.latex.tools"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"xelatex"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"command"</span><span class="punctuation">:</span> <span class="string">"xelatex"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"args"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">"-synctex=1"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">"-interaction=nonstopmode"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">"-file-line-error"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">"%DOCFILE%"</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"pdflatex"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"command"</span><span class="punctuation">:</span> <span class="string">"pdflatex"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"args"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">"-synctex=1"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">"-interaction=nonstopmode"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">"-file-line-error"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">"%DOCFILE%"</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"latexmk"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"command"</span><span class="punctuation">:</span> <span class="string">"latexmk"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"args"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">"-synctex=1"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">"-interaction=nonstopmode"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">"-file-line-error"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">"-pdf"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">"-outdir=%OUTDIR%"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">"%DOCFILE%"</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"bibtex"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"command"</span><span class="punctuation">:</span> <span class="string">"bibtex"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"args"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">"%DOCFILE%"</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">}</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"latex-workshop.latex.recipes"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"XeLaTeX"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"tools"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">"xelatex"</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"PDFLaTeX"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"tools"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">"pdflatex"</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"BibTeX"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"tools"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">"bibtex"</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"LaTeXmk"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"tools"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">"latexmk"</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"xelatex -&gt; bibtex -&gt; xelatex*2"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"tools"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">"xelatex"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">"bibtex"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">"xelatex"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">"xelatex"</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">{</span></span><br><span class="line">            <span class="attr">"name"</span><span class="punctuation">:</span> <span class="string">"pdflatex -&gt; bibtex -&gt; pdflatex*2"</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">"tools"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">"pdflatex"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">"bibtex"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">"pdflatex"</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">"pdflatex"</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">}</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"latex-workshop.latex.clean.fileTypes"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">"*.aux"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">"*.bbl"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">"*.blg"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">"*.idx"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">"*.ind"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">"*.lof"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">"*.lot"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">"*.out"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">"*.toc"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">"*.acn"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">"*.acr"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">"*.alg"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">"*.glg"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">"*.glo"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">"*.gls"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">"*.ist"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">"*.fls"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">"*.log"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">"*.fdb_latexmk"</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"latex-workshop.latex.autoClean.run"</span><span class="punctuation">:</span> <span class="string">"onFailed"</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"latex-workshop.latex.recipe.default"</span><span class="punctuation">:</span> <span class="string">"lastUsed"</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"latex-workshop.view.pdf.internal.synctex.keybinding"</span><span class="punctuation">:</span> <span class="string">"double-click"</span></span><br><span class="line"><span class="punctuation">}</span></span><br></pre></td></tr></tbody></table></figure><h3 id="black-nib-4-3-Detailed-introduction-of-environment-configuration-parameters"><a href="#black-nib-4-3-Detailed-introduction-of-environment-configuration-parameters" class="headerlink" title=":black_nib: 4.3 Detailed introduction of environment configuration parameters"></a><span class="github-emoji"><span>✒</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2712.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 4.3 Detailed introduction of environment configuration parameters</h3><blockquote><p>If you don’t want to read it, you can just skip it, it’s not that important.</p></blockquote><ol><li>Set when to automatically build <code>LaTeX</code> using the default (first) compilation chain.<ol><li><code>onSave</code> builds the project upon saving a tex file in vscode.</li><li><code>onFileChange</code> builds the project upon detecting a file change in any of the dependencies, even modified by other applications.</li></ol></li></ol><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">"latex-workshop.latex.autoBuild.run"</span><span class="punctuation">:</span> <span class="string">"never"</span></span><br></pre></td></tr></tbody></table></figure><ol><li>Enable contextual LaTeX menu: Right click will have <strong>two more options</strong>, more convenient.<ol><li>Default: <code>false</code></li><li><code>true</code> enables the menu.</li><li><code>Build LaTex project.</code> <em>(Ctrl+Alt+B)</em></li><li><code>SyncTex from cursor.</code> <em>(Ctrl+Alt+J)</em></li></ol></li></ol><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">"latex-workshop.showContextMenu"</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br></pre></td></tr></tbody></table></figure><ol><li><code>"latex-workshop.intellisense.package.enabled": true</code> enables the package name completion in the <code>\usepackage{}</code> command.</li><li><code>"latex-workshop.message.error.show": true</code> shows the error message in the status bar.</li><li><code>"latex-workshop.message.warning.show": true</code> shows the warning message in the status bar.</li><li><code>"latex-workshop.latex.tools":[...]</code> defines default settings for the compilation.</li><li><code>"latex-workshop.latex.recipes": [...]</code> defines default settings and compilation order for the recipe compilation chains:<ol><li>Recipe: XeLaTex</li><li>Recipe: PDFLaTex</li><li>Recipe: BibTeX</li><li>Recipe: LaTeXmk</li><li>Recipe: xelatex -&gt; bibtex -&gt; xelatex*2</li><li>Recipe: pdflatex -&gt; bibtex -&gt; pdflatex*2</li></ol></li><li>Difference between XeLaTex and PDFLaTex:<ol><li><strong>PDFLaTeX uses TeX standard fonts</strong>, so when generating PDF, all non-TeX standard fonts will be replaced, and the generated PDF files will embed all fonts by default; and compiled with XeLaTeX, if there are many pictures or other elements in the paper If no fonts are embedded, the generated PDF.</li><li><strong>The XeTeX corresponding to XeLaTeX has better support for fonts</strong>, allows users to use operating system fonts instead of TeX’s standard fonts, and has better support for non-Latin fonts.</li><li><strong>PDFLaTeX compiles faster</strong> than XeLaTeX.</li></ol></li><li><code>"latex-workshop.latex.clean.fileTypes"</code> It is to clear some unnecessary files in the result generated during the compilation process.</li><li><code>"latex-workshop.latex.autoClean.run"</code><ol><li><code>onFailed</code> cleans the project when compilation fails.</li><li><code>onBuilt</code> cleans the project when compilation is done, whether successful or failed.</li></ol></li><li><code>"latex-workshop.latex.recipe.default": "lastUsed"</code> sets the default compilation chain to the last used one. Get used to using the compiled chain you used last time, or you can change it to first to use the first compiled chain.</li><li><code>"latex-workshop.view.pdf.internal.synctex.keybinding": "double-click"</code> sets the default key binding for the SyncTex function. The default is double-click, and you can also set it to <code>ctrl+alt+j</code> or <code>ctrl+alt+click</code>.</li></ol><h2 id="notebook-5-SumatraPDF"><a href="#notebook-5-SumatraPDF" class="headerlink" title=":notebook: 5. SumatraPDF"></a><span class="github-emoji"><span>📓</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f4d3.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span> 5. SumatraPDF</h2><blockquote><p>Vscode’s built-in PDF reading cannot fully satisfy large-scale use, and an external reader must be used if necessary. It is recommended to use the combination of <code>SumatraPDF</code> and $Tex$, mainly because it can be synchronized in two directions, and it is also relatively lightweight.</p></blockquote><ul><li><p><a href="https://www.sumatrapdfreader.org/download-free-pdf-viewer">Official download link</a></p></li><li><p>Add settings in <code>settings.json</code>. <em>Pay attention to modify the three paths below.</em></p><figure class="highlight json"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">{</span></span><br><span class="line">    <span class="attr">"latex-workshop.view.pdf.viewer"</span><span class="punctuation">:</span> <span class="string">"external"</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"latex-workshop.view.pdf.ref.viewer"</span><span class="punctuation">:</span><span class="string">"auto"</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"latex-workshop.view.pdf.external.viewer.command"</span><span class="punctuation">:</span> <span class="string">"D:/SumatraPDF/SumatraPDF.exe"</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"latex-workshop.view.pdf.external.viewer.args"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">"%PDF%"</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"latex-workshop.view.pdf.external.synctex.command"</span><span class="punctuation">:</span> <span class="string">"D:/SumatraPDF/SumatraPDF.exe"</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">"latex-workshop.view.pdf.external.synctex.args"</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">"-forward-search"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">"%TEX%"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">"%LINE%"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">"-reuse-instance"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">"-inverse-search"</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">"code \"D:/VSCode/resources/app/out/cli.js\" -r -g \"%f:%l\""</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">"%PDF%"</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">}</span></span><br></pre></td></tr></tbody></table></figure></li><li><p><code>"latex-workshop.view.pdf.viewer": "external"</code> If you need to change the Tex PDF back to the internal reader, just change <code>external</code> to <code>tab</code>.</p></li></ul><!-- markdownlint-disable-file MD025 MD028 MD033 -->]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Okey, let’s go! I used to use &lt;code&gt;VsCode&lt;/code&gt; + &lt;code&gt;TexLive&lt;/code&gt;, which is more convenient, because &lt;code&gt;VsCode&lt;/code&gt; has a built-in &lt;code&gt;LaTeX Workshop&lt;/code&gt; extension, which can be used directly after installation. &lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="Summary" scheme="https://boom1999.github.io/categories/Summary/"/>
    
    
    <category term="Latex" scheme="https://boom1999.github.io/tags/Latex/"/>
    
    <category term="VSCode" scheme="https://boom1999.github.io/tags/VSCode/"/>
    
  </entry>
  
  <entry>
    <title>Latex Grammar</title>
    <link href="https://boom1999.github.io/2023/02/09/LatexGrammar/"/>
    <id>https://boom1999.github.io/2023/02/09/LatexGrammar/</id>
    <published>2023-02-09T00:00:00.000Z</published>
    <updated>2023-02-09T00:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>$LaTeX$ (/ˈlɑːtɛx/ LAH-tekh or /ˈleɪtɛx/ LAY-tekh, often stylized as LATEX) is a <strong>software system</strong> for document preparation. When writing, the writer uses plain text as opposed to the formatted text found in WYSIWYG word processors like Microsoft Word, LibreOffice Writer and Apple Pages. The writer uses <strong>markup tagging conventions</strong> to define the general structure of a document to stylise text throughout a document (such as bold and italics), and to add citations and cross-references. A TeX distribution such as TeX Live or MiKTeX is used to produce an output file (such as PDF or DVI) suitable for printing or digital distribution.</p><span id="more"></span><hr><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><ul><li><p>$ LaTeX $ is widely used in <strong>academia</strong> for the communication and publication of scientific documents in many fields, including <strong>mathematics, computer science, engineering, physics, chemistry, economics, linguistics, quantitative psychology, philosophy, and political science</strong>. It also has a prominent role in the preparation and publication of books and articles that contain complex multilingual materials, such as Arabic and Greek. LaTeX uses the TeX typesetting program for formatting its output, and is itself written in the <strong>$TeX$ macro language</strong>.</p></li><li><p>$ LaTeX $ can be used as <strong>a standalone document preparation system</strong>, or as <strong>an intermediate format</strong>. In the latter role, for example, it is sometimes used as part of a pipeline for translating <code>DocBook</code> and <code>other XML-based formats</code> to <code>PDF</code>. The typesetting system offers programmable desktop publishing features and extensive facilities for automating most aspects of typesetting and desktop publishing, including <strong>numbering and cross-referencing of tables and figures, chapter and section headings, graphics, page layout, indexing and bibliographies</strong>.</p></li></ul><h2 id="Install-sweat-smile"><a href="#Install-sweat-smile" class="headerlink" title="Install :sweat_smile:"></a>Install <span class="github-emoji"><span>😅</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/1f605.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></h2><blockquote><p>Leave a hole here, and I will attach an installation tutorial when I have time later.<br>Okey, let’s go! I used to use <code>VsCode</code> + <code>TexLive</code>, which is more convenient, because <code>VsCode</code> has a built-in <code>LaTeX Workshop</code> extension, which can be used directly after installation.<br>For the convenience of reading, a seprarate article about installation and use is written, and the link is <a href="https://www.lingzhicheng.cn/2023/03/27/TexLive+VsCode/">here</a>.</p></blockquote><h2 id="Attention-exclamation"><a href="#Attention-exclamation" class="headerlink" title="Attention:exclamation:"></a>Attention<span class="github-emoji"><span>❗</span><img src="https://github.githubassets.com/images/icons/emoji/unicode/2757.png?v8" aria-hidden="true" onerror="this.parent.classList.add('github-emoji-fallback')"></span></h2><blockquote><p>Before starting, it is important to note that:</p><p>$ Markdown $ is rendered as <code>HTML</code> and its syntax conflicts with $ LaTeX $, which affects the effect of the article. E.g. braces should be avoided repeatedly, spaces should be added.</p></blockquote><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">}} <span class="comment">% It's bad.</span></span><br><span class="line">} } <span class="comment">% It's good!</span></span><br></pre></td></tr></tbody></table></figure><h2 id="Formula-Insertion"><a href="#Formula-Insertion" class="headerlink" title="Formula Insertion"></a>Formula Insertion</h2><ul><li><p>Formulas are divided into inline formulas and formula blocks, the former is embedded in a line, and the latter is a separate line.</p></li><li><p>Inline formulas<br>$ f(x) = a+b $</p></li></ul><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span> f(x) = a+b <span class="built_in">$</span></span><br></pre></td></tr></tbody></table></figure><p>​​​​​</p><ul><li>Formula blocks</li></ul><script type="math/tex; mode=display">x+1 = 2*3</script><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">x+1 = 2*3</span><br><span class="line">$$</span><br></pre></td></tr></tbody></table></figure><ul><li>Numbering</li></ul><script type="math/tex; mode=display">x+1 = 2*3 \tag{1.1}</script><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line">x+1 = 2*3 <span class="keyword">\tag</span>{1.1}</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></tbody></table></figure><h2 id="Basic-operations"><a href="#Basic-operations" class="headerlink" title="Basic operations"></a>Basic operations</h2><h3 id="Four-operations-and-brackets"><a href="#Four-operations-and-brackets" class="headerlink" title="Four operations and brackets"></a>Four operations and brackets</h3><blockquote><p>The basic four-rule arithmetic can be done directly with the keyboard’s +-*</p></blockquote><ul><li><code>\times</code> stands for $ \times $, <code>\div</code> stands for $ \div $, <code>\cdot</code> stands for $ \cdot $</li></ul><p>Example: <script type="math/tex">a + b - c*2 + d/e = 5 \times 3 + 8 \div 4 - f \cdot g</script><br>$ a + b - c*2 + d/e = 5 \times 3 + 8 \div 4 - f \cdot g $</p><ul><li>The curly braces need to be escaped with a slash.</li></ul><p>Example: <script type="math/tex">(1+2) \quad [1+2] \quad \{1+2\}</script><br>$ (1+2) \quad [1+2] \quad {1+2} $</p><ul><li>The <code>\left</code> and <code>\right</code> commands are used to generate auto-match height brackets or parenthetical characters.</li></ul><p>Example: <script type="math/tex">(\dfrac{1}{2})^2 \quad \left( \dfrac{1}{2} \right) ^2</script><br>$ (\dfrac{1}{2})^2 \quad \left( \dfrac{1}{2} \right) ^2 $</p><ul><li><code>&lt;&gt;</code>, <code>Abs</code> and <code>Norms()</code></li></ul><script type="math/tex; mode=display">\left\langle \dfrac ab \right\rangle \quad \left| \dfrac ab \right| \quad \left\| \dfrac ab \right\|</script><p>$ \left\langle \dfrac ab \right\rangle \quad \left| \dfrac ab \right| \quad \left| \dfrac ab \right| $</p><ul><li>Rounding function</li></ul><script type="math/tex; mode=display">\left\lfloor \dfrac ab \right\rfloor \quad \left\lceil \dfrac ab \right\rceil</script><p>$ \left\lfloor \dfrac ab \right\rfloor \quad \left\lceil \dfrac ab \right\rceil $</p><ul><li>Slashes with arrows</li></ul><p><code>\left/ \dfrac ab \right\backslash</code><br>$ \left/ \dfrac ab \right\backslash $</p><p><code>\left\uparrow \dfrac ab \right\downarrow \quad \left\Uparrow \dfrac ab \right\Downarrow \quad \left\updownarrow \dfrac ab \right\Updownarrow</code><br>$ \left\uparrow \dfrac ab \right\downarrow \quad \left\Uparrow \dfrac ab \right\Downarrow \quad \left\updownarrow \dfrac ab \right\Updownarrow $</p><ul><li>Mixed parentheses</li></ul><p><code>\left[ \dfrac{1}{2}, 1 \right) \quad \left\langle \psi \right|</code><br>$ \left[ \dfrac{1}{2}, 1 \right) \quad \left\langle \psi \right| $</p><ul><li>Single parentheses</li></ul><blockquote><p>Use <code>\left.</code> or <code>\right.</code> to omit.</p></blockquote><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\left</span><span class="keyword">\{</span></span><br><span class="line"><span class="keyword">\begin</span>{array}{l}</span><br><span class="line">x+y=1<span class="keyword">\\</span></span><br><span class="line">x-y=2</span><br><span class="line"><span class="keyword">\end</span>{array}</span><br><span class="line"><span class="keyword">\right</span>.</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span> </span><br></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">\left\{\begin{array}{l}x+y=1\\x-y=2\end{array}\right.</script><script type="math/tex; mode=display">\left. \dfrac ab \right\}</script><p>$ \left. \dfrac ab \right} $</p><ul><li>The <strong>size</strong> of the brackets</li></ul><blockquote><p>Use <code>\big</code>, <code>\Big</code>, <code>\bigg</code>, <code>\Bigg</code> to control.</p></blockquote><script type="math/tex; mode=display">\left\{ \left[ \left( \left| \left\| a \right\| +1 \right| -2 \right) +3 \right] -4 \right\}*5</script><p>$ \left{ \left[ \left( \left| \left| a \right| +1 \right| -2 \right) +3 \right] -4 \right}*5 $<br>​</p><script type="math/tex; mode=display">\Bigg\{ \bigg[ \Big( \big| \left\| a \right\| +1 \big| -2 \Big) +3 \bigg] -4 \Bigg\}*5</script><p>$ \Bigg{ \bigg[ \Big( \big| \left| a \right| +1 \big| -2 \Big) +3 \bigg] -4 \Bigg}*5 $</p><h3 id="Superscript-and-subscript"><a href="#Superscript-and-subscript" class="headerlink" title="Superscript and subscript"></a>Superscript and subscript</h3><ul><li>Use <code>_</code> for subscript, <code>^</code> for superscript, and handle only one character, and multiple characters enclosed in <code>{}</code>. <code>'</code> indicates derivation, multiple can be used.</li></ul><p>Example: <code>x_1^{3,4} + x_{1,2}^{2} = y_0 + y'_{6} + y''</code><br>$ x<em>1^{3,4} + x</em>{1,2}^{2} = y<em>0 + y’</em>{6} + y’’ $</p><h3 id="Fractional-and-radical"><a href="#Fractional-and-radical" class="headerlink" title="Fractional and radical"></a>Fractional and radical</h3><ul><li>Use <code>frac{a}{b}</code> for fractions, <code>sqrt</code> for square roots, and <code>sqrt[n]</code> for nth roots.</li></ul><p>Example: <code>\frac{x}{2} + \sqrt x = \sqrt[3] {x^2+y^2}</code><br>$ \frac{x}{2} + \sqrt x = \sqrt[3] {x^2+y^2} $</p><h2 id="Symbols-functions-and-special-characters"><a href="#Symbols-functions-and-special-characters" class="headerlink" title="Symbols, functions and special characters"></a>Symbols, functions and special characters</h2><h3 id="Tones-and-markers"><a href="#Tones-and-markers" class="headerlink" title="Tones and markers"></a>Tones and markers</h3><ul><li><p>Tones<br><code>\dot{a}</code> $ \dot{a} $<br><code>\ddot{a}</code> $ \ddot{a} $<br><code>\acute{a}</code>  $ \acute{a} $<br><code>\grave{a}</code> $ \grave{a} $<br><code>\check{a}</code> $ \check{a} $<br><code>\breve{a}</code> $ \breve{a} $<br><code>\tilde{a}</code> $ \tilde{a} $<br><code>\widetilde{a}</code> $ \widetilde{a} $<br><code>\bar{a}</code> $ \bar{a} $<br><code>\mathring{a}</code> $ \mathring{a} $</p></li><li><p>Markers<br><code>\hat{a}</code> $ \hat{a} $<br><code>\widehat{a}</code> $ \widehat{a} $<br><code>\vec{a}</code> $ \vec{a} $</p></li></ul><h3 id="Basic-functions"><a href="#Basic-functions" class="headerlink" title="Basic functions"></a>Basic functions</h3><ul><li>Exponential function</li></ul><p>Example: <code>\exp_a b, \exp b, x^2</code><br>$ \exp_a b, \exp b, x^2 $</p><ul><li>Logarithm</li></ul><p>Example: <code>\log a, \lg b, \ln c, \log_{2} d</code><br>$ \log a, \lg b, \ln c, \log_{2} d $</p><ul><li>Trigonometric function</li></ul><p>Example: <code>\sin a, \cos b, \tan c, \cot d, \sec e, \csc f</code><br>$ \sin a, \cos b, \tan c, \cot d, \sec e, \csc f $</p><ul><li>Inverse trigonometric functions</li></ul><p>Example: <code>\arcsin a, \arccos b, \arctan c</code><br>​​$ \arcsin a, \arccos b, \arctan c $</p><blockquote><p><code>\arccot</code>, <code>\arcsec</code> and <code>\arccsc</code> in $Latex$ is not defined and can be replaced by <code>\text{arccot}x</code> or <code>\operatorname{function}</code> $—&gt;$ $\text{arccot}x$</p></blockquote><ul><li>Hyperbolic functions</li></ul><p>Example: <code>\sinh a, \cosh b, \tanh c, \coth d</code><br>$ \sinh a, \cosh b, \tanh c, \coth d $</p><ul><li>Absolute value</li></ul><p>Example: <code>\left\vert a \right\vert, |b|, | \dfrac cd |, \left| \dfrac cd \right|</code><br>$ \left\vert a \right\vert, |b|, | \dfrac cd |, \left| \dfrac cd \right| $</p><ul><li>Maximum and minimum</li></ul><p>Example:<code>\max(x,y), \min(x,y)</code>​​<br>$ \max(x,y), \min(x,y) $</p><ul><li>Others</li></ul><p>Example: <code>\operatorname{function}</code><br>$ \operatorname{sgn} x $</p><h3 id="Limits"><a href="#Limits" class="headerlink" title="Limits"></a>Limits</h3><p><code>\min x, \max y, \inf a, \sup b</code><br>$ \min x, \max y, \inf a, \sup b $</p><p><code>\lim x, \liminf y, \limsup z</code><br>$ \lim x, \liminf y, \limsup z $</p><p><code>\dim p, \deg q, \det m, \ker\phi</code><br>​$ \dim p, \deg q, \det m, \ker\phi $</p><h3 id="Projection"><a href="#Projection" class="headerlink" title="Projection"></a>Projection</h3><p><code>\Pr j, \hom l, \lVert z \rVert, \arg z</code><br>$ \Pr j, \hom l, \lVert z \rVert, \arg z $</p><h3 id="Differential-and-derivative"><a href="#Differential-and-derivative" class="headerlink" title="Differential and derivative"></a>Differential and derivative</h3><blockquote><p>Treatment of non-italic derivative $ \mathrm{d}x $ with <code>\mathrm{d}x</code></p></blockquote><p><code>dx, \mathrm{d}x, \partial t, \nabla\psi</code><br>​$ dx, \mathrm{d}x, \partial t, \nabla\psi $</p><p><code>\mathrm{d}y/\mathrm{d}x, \frac{\mathrm{d}y}{\mathrm{d}x}, \frac{\partial^2}{\partial x \partial y}z</code><br>$ \mathrm{d}y/\mathrm{d}x, \frac{\mathrm{d}y}{\mathrm{d}x}, \frac{\partial^2}{\partial x \partial y}z $</p><p><code>', \prime, \backprime, f^\prime, f', f'', f^{(3)}, \dot y, \ddot y</code><br>$ ‘, \prime, \backprime, f^\prime, f’, f’’, f^{(3)}, \dot y, \ddot y$</p><h3 id="Special-symbols"><a href="#Special-symbols" class="headerlink" title="Special symbols"></a>Special symbols</h3><p><code>\infty, \aleph, \complement, \backepsilon, \eth, \Finv, \hbar</code><br>$ \infty, \aleph, \complement, \backepsilon, \eth, \Finv, \hbar $</p><p><code>\imath, \jmath, \Bbbk, \ell, \mho, \wp, \Re, \circledS​</code><br>$ \imath, \jmath, \Bbbk, \ell, \mho, \wp, \Re, \circledS​ $</p><h3 id="Mod"><a href="#Mod" class="headerlink" title="Mod"></a>Mod</h3><p><code>\pmod{m}, a \bmod b</code><br>$ \pmod{m}, a \bmod b $</p><p><code>\gcd(m,n), \operatorname{lcm}(m,n)</code><br>$ \gcd(m,n), \operatorname{lcm}(m,n) $​</p><p><code>\mid, \nmid, \shortmid, \nshortmid</code><br>$ \mid, \nmid, \shortmid, \nshortmid $</p><h3 id="Sqrt"><a href="#Sqrt" class="headerlink" title="Sqrt"></a>Sqrt</h3><p><code>\surd, \sqrt{2}, \sqrt[n]{}, \sqrt[3]{x^2+y^2}</code><br>$ \surd, \sqrt{2}, \sqrt[n]{}, \sqrt[3]{x+y} $</p><h3 id="Operations"><a href="#Operations" class="headerlink" title="Operations"></a>Operations</h3><p><code>+, -, \pm, \mp, \dotplus</code><br>$ +, -, \pm, \mp, \dotplus$ </p><p><code>*, /, \times, \div, \divideontimes, \cdot, \ast, \backslash</code><br>$ *, /, \times, \div, \divideontimes, \cdot, \ast, \backslash $</p><p><code>\star, \circ, \bullet</code><br>$ \star, \circ, \bullet $</p><p><code>\boxplus, \boxminus, \boxtimes, \boxdot</code><br>$ \boxplus, \boxminus, \boxtimes, \boxdot $</p><p><code>\oplus, \ominus, \otimes, \oslash, \odot</code><br>$ \oplus, \ominus, \otimes, \oslash, \odot $</p><p><code>\circleddash, \circledcirc, \circledast</code><br>$ \circleddash, \circledcirc, \circledast $<br>​<br><code>\bigoplus, \bigotimes, \bigodot</code><br>$ \bigoplus, \bigotimes, \bigodot $</p><h3 id="Sets"><a href="#Sets" class="headerlink" title="Sets"></a>Sets</h3><p><code>\{, \}, \emptyset, \varnothing</code><br>​$ {, }, \empty, \varnothing $</p><p><code>\in, \notin, \not\in, \ni, \not\ni</code><br>​​$ \in, \notin, \not\in, \ni, \not\ni $</p><p><code>\cap, \Cap, \sqcap, \bigcap</code><br>​$ \cap, \Cap, \sqcap, \bigcap $</p><p><code>\cup, \Cup, \sqcup, \bigcup, \bigsqcup, \uplus, \biguplus</code><br>$ \cup, \Cup, \sqcup, \bigcup, \bigsqcup, \uplus, \biguplus $</p><p><code>\setminus, \smallsetminus</code><br>$ \setminus, \smallsetminus $</p><p><code>\subset, \Subset, \sqsubset</code><br>$ \subset, \Subset, \sqsubset $</p><p><code>\supset, \Supset, \sqsupset</code><br>$ \supset, \Supset, \sqsupset $</p><p><code>\subseteq, \nsubseteq, \subsetneq, \varsubsetneq, \sqsubseteq</code><br>$ \subseteq, \nsubseteq, \subsetneq, \varsubsetneq, \sqsubseteq $</p><p><code>\supseteq, \nsupseteq, \supsetneq, \varsupsetneq, \sqsupseteq</code><br>$ \supseteq, \nsupseteq, \supsetneq, \varsupsetneq, \sqsupseteq $</p><p><code>\subseteqq, \nsubseteqq, \subsetneqq, \varsubsetneqq</code><br>$ \subseteqq, \nsubseteqq, \subsetneqq, \varsubsetneqq $</p><h3 id="Relationship-symbol"><a href="#Relationship-symbol" class="headerlink" title="Relationship symbol"></a>Relationship symbol</h3><p><code>=, \ne, \neq, \equiv, \not\equiv</code><br>$ =, \ne, \neq, \equiv, \not\equiv $</p><p><code>\doteq, \doteqdot, :=, \overset{\underset{\mathrm{def} } {} } {=}</code><br>$ \doteq, \doteqdot, :=, \overset{\underset{\mathrm{def} } {} } {=} $</p><p><code>\sim, \nsim, \backsim, \thicksim, \simeq, \backsimeq, \eqsim, \cong, \ncong</code><br>$ \sim, \nsim, \backsim, \thicksim, \simeq, \backsimeq, \eqsim, \cong, \ncong $</p><p><code>\approx, \thickapprox, \approxeq, \asymp, \propto, \varpropto</code><br>$ \approx, \thickapprox, \approxeq, \asymp, \propto, \varpropto $</p><p><code>&lt;, \nless, \ll, \not\ll, \lll, \not\lll, \lessdot</code><br>$ &lt;, \nless, \ll, \not\ll, \lll, \not\lll, \lessdot $</p><p><code>&gt;, \ngtr, \gg, \not\gg, \ggg, \not\ggg, \gtrdot</code><br>$ &gt;, \ngtr, \gg, \not\gg, \ggg, \not\ggg, \gtrdot $</p><p><code>\le, \leq, \lneq, \leqq, \nleq, \nleqq, \lneqq, \lvertneqq</code><br>$ \le, \leq, \lneq, \leqq, \nleq, \nleqq, \lneqq, \lvertneqq $</p><p><code>\ge, \geq, \gneq, \geqq, \ngeq, \ngeqq, \gneqq, \gvertneqq</code><br>$ \ge, \geq, \gneq, \geqq, \ngeq, \ngeqq, \gneqq, \gvertneqq $</p><p><code>\lessgtr, \lesseqgtr, \lesseqqgtr, \gtrless, \gtreqless, \gtreqqless</code><br>$ \lessgtr, \lesseqgtr, \lesseqqgtr, \gtrless, \gtreqless, \gtreqqless $</p><p><code>\leqslant, \nleqslant, \eqslantless</code><br>$ \leqslant, \nleqslant, \eqslantless $</p><p><code>\geqslant, \ngeqslant, \eqslantgtr</code><br>$ \geqslant, \ngeqslant, \eqslantgtr $</p><p><code>\lesssim, \lnsim, \lessapprox, \lnapprox</code><br>$ \lesssim, \lnsim, \lessapprox, \lnapprox $</p><p><code>\gtrsim, \gnsim, \gtrapprox, \gnapprox</code><br>$ \gtrsim, \gnsim, \gtrapprox, \gnapprox $</p><p><code>\prec, \nprec, \preceq, \npreceq, \precneqq</code><br>​$ \prec, \nprec, \preceq, \npreceq, \precneqq $</p><p><code>\succ, \nsucc, \succeq, \nsucceq, \succneqq</code><br>$ \succ, \nsucc, \succeq, \nsucceq, \succneqq $</p><p><code>\preccurlyeq, \curlyeqprec</code><br>$ \preccurlyeq, \curlyeqprec $</p><p><code>\succcurlyeq, \curlyeqsucc</code><br>$ \succcurlyeq, \curlyeqsucc $</p><p><code>\precsim, \precnsim, \precapprox, \precnapprox</code><br>$ \precsim, \precnsim, \precapprox, \precnapprox $</p><p><code>\succsim, \succnsim, \succapprox, \succnapprox</code><br>$ \succsim, \succnsim, \succapprox, \succnapprox $</p><h3 id="Geometric-symbols"><a href="#Geometric-symbols" class="headerlink" title="Geometric symbols"></a>Geometric symbols</h3><p><code>\parallel, \nparallel, \shortparallel, \nshortparallel</code><br>$ \parallel, \nparallel, \shortparallel, \nshortparallel $</p><p><code>\perp, \angle, \sphericalangle, \measuredangle, 45^\circ</code><br>$ \perp, \angle, \sphericalangle, \measuredangle, 45^\circ$</p><p><code>\Box, \blacksquare, \diamond, \Diamond, \lozenge, \blacklozenge, \bigstar, \bigcirc</code><br>​$ \Box, \blacksquare, \diamond, \Diamond, \lozenge, \blacklozenge, \bigstar, \bigcirc $</p><p><code>\triangle, \triangledown ,\bigtriangleup, \bigtriangledown, \vartriangle</code><br>​$ \triangle, \triangledown ,\bigtriangleup, \bigtriangledown, \vartriangle $</p><p><code>\blacktriangle, \blacktriangledown, \blacktriangleleft, \blacktriangleright</code><br>$ \blacktriangle, \blacktriangledown, \blacktriangleleft, \blacktriangleright $</p><h3 id="Logical-symbols"><a href="#Logical-symbols" class="headerlink" title="Logical symbols"></a>Logical symbols</h3><p><code>\forall, \not\forall, \exists, \nexists</code><br>​$ \forall, \not\forall, \exists, \nexists $</p><p><code>\because, \therefore, \And</code><br>$ \because, \therefore, \And $</p><p><code>\lor, \vee, \curlyvee, \bigvee</code><br>$ \lor, \vee, \curlyvee, \bigvee $<br>​<br><code>\land, \wedge, \curlywedge, \bigwedge</code><br>$ \land, \wedge, \curlywedge, \bigwedge $</p><blockquote><p>Use <code>\lor, \land</code> instead of <code>\or, \and</code></p></blockquote><p><code>\bar{x}, \bar{abc}, \overline{x}, \overline{abc}</code><br>$ \bar{x}, \bar{abc}, \overline{x}, \overline{abc} $</p><p><code>\lnot, \neg, \not\operatorname{R}, \bot, \top</code><br>$ \lnot, \neg, \not\operatorname{R}, \bot, \top $</p><p><code>\vdash, \dashv, \vDash, \Vdash, \Vvdash, \models</code><br>​​$ \vdash, \dashv, \vDash, \Vdash, \Vvdash, \models $</p><p><code>\nvdash, \nVdash, \nvDash, \nVDash</code><br>$ \nvdash, \nVdash, \nvDash, \nVDash $</p><p><code>\ulcorner, \urcorner, \llcorner, \lrcorner</code><br>$ \ulcorner, \urcorner, \llcorner, \lrcorner $</p><h3 id="Arrowhead"><a href="#Arrowhead" class="headerlink" title="Arrowhead"></a>Arrowhead</h3><p><code>\to, \rightarrow, \nrightarrow, \longrightarrow</code><br>$ \to, \rightarrow, \nrightarrow, \longrightarrow $</p><p><code>\gets, \leftarrow, \nleftarrow, \longleftarrow</code><br>$ \gets, \leftarrow, \nleftarrow, \longleftarrow $</p><p><code>\leftrightarrow, \nleftrightarrow, \longleftrightarrow</code><br>$ \leftrightarrow, \nleftrightarrow, \longleftrightarrow $ </p><p><code>\uparrow, \downarrow, \updownarrow</code><br>$ \uparrow, \downarrow, \updownarrow $</p><p><code>\Rightarrow, \nRightarrow, \Longrightarrow, \implies</code><br>$ \Rightarrow, \nRightarrow, \Longrightarrow, \implies $</p><p><code>\Leftarrow, \nLeftarrow, \Longleftarrow</code><br>$ \Leftarrow, \nLeftarrow, \Longleftarrow $</p><p><code>\Leftrightarrow, \nLeftrightarrow, \Longleftrightarrow, \iff</code><br>$ \Leftrightarrow, \nLeftrightarrow, \Longleftrightarrow, \iff $</p><p><code>\Uparrow, \Downarrow, \Updownarrow</code><br>$ \Uparrow, \Downarrow, \Updownarrow $</p><p><code>\Rrightarrow, \Lleftarrow</code><br>$ \Rrightarrow, \Lleftarrow $</p><p><code>\nearrow, \swarrow, \nwarrow, \searrow</code><br>$ \nearrow, \swarrow, \nwarrow, \searrow $</p><p><code>\mapsto, \longmapsto</code><br>$ \mapsto, \longmapsto $</p><p><code>\rightharpoonup, \rightharpoondown, \leftharpoonup, \leftharpoondown, \upharpoonleft, \upharpoonright, \downharpoonleft, \downharpoonright, \rightleftharpoons, \leftrightharpoons</code><br>$ \rightharpoonup, \rightharpoondown, \leftharpoonup, \leftharpoondown, \upharpoonleft, \upharpoonright, \downharpoonleft, \downharpoonright, \rightleftharpoons, \leftrightharpoons $</p><p><code>\curvearrowleft, \circlearrowleft, \Lsh, \upuparrows, \rightrightarrows, \rightleftarrows, \rightarrowtail, \looparrowright</code><br>$ \curvearrowleft, \circlearrowleft, \Lsh, \upuparrows, \rightrightarrows, \rightleftarrows, \rightarrowtail, \looparrowright $</p><p><code>\curvearrowright, \circlearrowright, \Rsh, \downdownarrows, \leftleftarrows, \leftrightarrows, \leftarrowtail, \looparrowleft</code><br>$ \curvearrowright, \circlearrowright, \Rsh, \downdownarrows, \leftleftarrows, \leftrightarrows, \leftarrowtail, \looparrowleft $</p><p><code>\hookrightarrow, \hookleftarrow, \multimap, \leftrightsquigarrow, \rightsquigarrow, \twoheadrightarrow, \twoheadleftarrow</code><br>$ \hookrightarrow, \hookleftarrow, \multimap, \leftrightsquigarrow, \rightsquigarrow, \twoheadrightarrow, \twoheadleftarrow $</p><h3 id="Ellipsis"><a href="#Ellipsis" class="headerlink" title="Ellipsis"></a>Ellipsis</h3><p><code>\cdots, \ldots, \vdots, \ddots</code><br>$ \cdots, \ldots, \vdots, \ddots $</p><h3 id="Others"><a href="#Others" class="headerlink" title="Others"></a>Others</h3><p><code>\amalg, \%, \&amp;, \dagger, \ddagger</code><br>​​​$ \amalg, \%, \&amp;, \dagger, \ddagger $</p><p><code>\smile, \frown, \wr, \triangleleft, \triangleright</code><br>$ \smile, \frown, \wr, \triangleleft, \triangleright $</p><p><code>\diamondsuit, \heartsuit, \clubsuit, \spadesuit, \Game, \flat, \natural, \sharp</code><br>$ \diamondsuit, \heartsuit, \clubsuit, \spadesuit, \Game, \flat, \natural, \sharp $</p><p><code>\diagup, \diagdown, \centerdot, \ltimes, \rtimes, \leftthreetimes, \rightthreetimes</code><br>$ \diagup, \diagdown, \centerdot, \ltimes, \rtimes, \leftthreetimes, \rightthreetimes $</p><p><code>\eqcirc, \circeq, \triangleq, \bumpeq, \Bumpeq, \doteqdot, \risingdotseq, \fallingdotseq</code><br>$ \eqcirc, \circeq, \triangleq, \bumpeq, \Bumpeq, \doteqdot, \risingdotseq, \fallingdotseq $</p><p><code>\intercal, \barwedge, \veebar, \doublebarwedge, \between, \pitchfork</code><br>$ \intercal, \barwedge, \veebar, \doublebarwedge, \between, \pitchfork $</p><p><code>\vartriangleleft, \ntriangleleft, \vartriangleright, \ntriangleright</code><br>$ \vartriangleleft, \ntriangleleft, \vartriangleright, \ntriangleright $</p><p><code>\trianglelefteq, \ntrianglelefteq, \trianglerighteq, \ntrianglerighteq</code><br>$ \trianglelefteq, \ntrianglelefteq, \trianglerighteq, \ntrianglerighteq $</p><h3 id="Vector"><a href="#Vector" class="headerlink" title="Vector"></a>Vector</h3><p><code>\vec{a}, \boldsymbol{b}, \overleftarrow{ab}, \overrightarrow{cd}, \overleftrightarrow{ab}, \widehat{abc}</code></p><p>$ \vec{a}, \boldsymbol{b}, \overleftarrow{ab}, \overrightarrow{cd}, \overleftrightarrow{ab}, \widehat{abc} $<br>​​</p><h3 id="Up-and-down-lines"><a href="#Up-and-down-lines" class="headerlink" title="Up and down lines"></a>Up and down lines</h3><p><code>\overset{\frown} {AB}, \overline {abc}, \underline{def}</code><br>$ \overset{\frown} {AB}, \overline {abc}, \underline{def} $</p><p><code>\overbrace{1+2+\cdots+n} \quad \overbrace{1+2+\cdots+n}^{n}</code><br>$ \overbrace{1+2+\cdots+n} \quad \overbrace{1+2+\cdots+n}^{n} $</p><p><code>\begin{matrix} n \\ \overbrace{1+2+\cdots+n} \end{matrix}</code><br>$ \begin{matrix} n \ \overbrace{1+2+\cdots+n} \end{matrix} $</p><p><code>\underbrace{a+b+\cdots+z} \quad \underbrace{a+b+\cdots+z}_{26}</code><br>$ \underbrace{a+b+\cdots+z} \quad \underbrace{a+b+\cdots+z}_{26} $</p><p><code>\begin{matrix} \underbrace{a+b+\cdots+z} \\ 26 \end{matrix}</code><br>$ \begin{matrix} \underbrace{a+b+\cdots+z} \ 26 \end{matrix} $ </p><h3 id="Big-operations"><a href="#Big-operations" class="headerlink" title="Big operations"></a>Big operations</h3><blockquote><p>Inlines formulas and formula blocks are different.</p></blockquote><script type="math/tex; mode=display">\sum_{i=1}^{n} i^2</script><p>$ \sum_{i=1}^{n} i^2 $</p><figure class="highlight plaintext"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\sum_{i=1}^{n} i^2</span><br><span class="line">$$</span><br></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">\sum_{i=1}^{n} i^2</script><p>To display an inline formula as positive top and bottom, you can use the limits command to follow the operator:</p><script type="math/tex; mode=display">\sum\limits_{i=1}^{n} i^2</script><p>$ \sum\limits_{i=1}^{n} i^2 $</p><p>To display the formula block as top-right-right, you can use the first-order frameless matrix form or use the nolimits command:</p><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\begin</span>{matrix} <span class="keyword">\sum</span><span class="built_in">_</span>{i=1}<span class="built_in">^</span>{n} i<span class="built_in">^</span>2 <span class="keyword">\end</span>{matrix}</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">\begin{matrix} \sum_{i=1}^{n} i^2 \end{matrix}</script><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\sum</span><span class="keyword">\nolimits</span><span class="built_in">_</span>{i=1}<span class="built_in">^</span>{n} i<span class="built_in">^</span>2</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">\sum\nolimits_{i=1}^{n} i^2</script><ul><li>Accumulate and multiply</li></ul><p><code>\sum_{i=1}^{n} i^2 \quad \prod_{i=1}^{n} x_i</code></p><script type="math/tex; mode=display">\sum_{i=1}^{n} i^2 \quad \prod_{i=1}^{n} x_i</script><ul><li>Limit</li></ul><p><code>\lim_{x \to \infty} (1+\frac{1}{x})^x = e</code></p><script type="math/tex; mode=display">\lim_{x \to \infty} (1+\frac{1}{x})^x = e</script><ul><li>Ordinary integration</li></ul><p><code>\int_{a}^{b} e^x \, \mathrm{d}x</code></p><script type="math/tex; mode=display">\int_{a}^{b} e^x \, \mathrm{d}x</script><ul><li>Multiple integration</li></ul><p><code>\iint_{D} f(x,y) \, \mathrm{d}\sigma \quad \iiint_{\Omega} f(x,y,z) \, \mathrm{d}V</code></p><script type="math/tex; mode=display">\iint_{D} f(x,y) \, \mathrm{d}\sigma \quad \iiint_{\Omega} f(x,y,z) \, \mathrm{d}V</script><ul><li>Closure curve integral</li></ul><p><code>\oint_{L} f(x,y) \, \mathrm{d}s</code></p><script type="math/tex; mode=display">\oint_{L} f(x,y) \, \mathrm{d}s</script><ul><li>Others</li></ul><p><code>\int, \iint, \iiint, \oint</code><br>$ \int, \iint, \iiint, \oint $</p><ul><li>Intersection, union and reunion</li></ul><p><code>\bigcap_{i=1}^{n} A_i \quad , \bigcup_{j=1}^{m} B_j , \coprod_{i \in I} A_i</code></p><script type="math/tex; mode=display">\bigcap_{i=1}^{n} A_i \quad , \bigcup_{j=1}^{m} B_j , \coprod_{i \in I} A_i</script><h2 id="Fractional"><a href="#Fractional" class="headerlink" title="Fractional"></a>Fractional</h2><h3 id="Basic-operations-1"><a href="#Basic-operations-1" class="headerlink" title="Basic operations"></a>Basic operations</h3><blockquote><p>You can use <code>\over</code> and <code>{}</code></p></blockquote><p><code>x = { {-b \pm \sqrt{b^2-4ac} } \over {2a} }</code></p><script type="math/tex; mode=display">x = { {-b \pm \sqrt{b^2-4ac} } \over {2a} }</script><h3 id="Typesetting"><a href="#Typesetting" class="headerlink" title="Typesetting"></a>Typesetting</h3><blockquote><p>Normal fractions are automatically scaled down in in-line formulas and displayed as full size in formula blocks.</p></blockquote><script type="math/tex; mode=display">\frac{1}{2}=0.5</script><p>$ \frac{1}{2}=0.5 $</p><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\frac</span>{1}{2}=0.5</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">\frac{1}{2}=0.5</script><p>​</p><ul><li><p>The <code>\tfrac</code> command is used to make fractions appear as inline formula styles.</p><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\tfrac</span>{1}{2}=0.5</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">\tfrac{1}{2}=0.5</script></li><li><p>The <code>\dfrac</code> command is used to make fractions appear as formula block styles.</p></li></ul><script type="math/tex; mode=display">\dfrac{1}{2}=0.5</script><p>$ \dfrac{1}{2}=0.5 $</p><p>​</p><ul><li>Attention</li></ul><p>In scenarios such as exponential functions, limits, and integrals, try not to use the frac command, and use / express as horizontal fractions.</p><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line">e<span class="built_in">^</span>{<span class="keyword">\frac</span>{i<span class="keyword">\pi</span>}{2} } <span class="keyword">\quad</span> <span class="keyword">\int</span><span class="built_in">_</span>{-<span class="keyword">\frac</span>{<span class="keyword">\pi</span>}{2} }<span class="built_in">^</span>{<span class="keyword">\frac</span>{<span class="keyword">\pi</span>}{2} } <span class="keyword">\sin</span> x <span class="keyword">\,</span> <span class="keyword">\mathrm</span>{d}x</span><br><span class="line"><span class="comment">% Bad</span></span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">e^{\frac{i\pi}{2} } \quad \int_{-\frac{\pi}{2} }^{\frac{\pi}{2} } \sin x \, \mathrm{d}x% Bad</script><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line">e<span class="built_in">^</span>{i<span class="keyword">\pi</span>/2} <span class="keyword">\quad</span> <span class="keyword">\int</span><span class="built_in">_</span>{-<span class="keyword">\pi</span>/2}<span class="built_in">^</span>{<span class="keyword">\pi</span>/2} <span class="keyword">\sin</span> x <span class="keyword">\,</span> <span class="keyword">\mathrm</span>{d}x</span><br><span class="line"><span class="comment">% Good</span></span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">e^{i\pi/2} \quad \int_{-\pi/2}^{\pi/2} \sin x \, \mathrm{d}x% Good</script><h3 id="Continuous-fractions"><a href="#Continuous-fractions" class="headerlink" title="Continuous fractions"></a>Continuous fractions</h3><blockquote><p>Enter the conjunction with the <code>\cfrac</code> command, which automatically handles the height of the numerator and denominator.</p></blockquote><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\cfrac</span>{1}{2 + <span class="keyword">\cfrac</span>{1}{2 + <span class="keyword">\cfrac</span>{1}{2 + <span class="keyword">\cdots</span>} } }</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">\cfrac{1}{2 + \cfrac{1}{2 + \cfrac{1}{2 + \cdots} } }</script><h3 id="Binomial-coefficients"><a href="#Binomial-coefficients" class="headerlink" title="Binomial coefficients"></a>Binomial coefficients</h3><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\mathrm</span>{C}<span class="built_in">_</span>n<span class="built_in">^</span>r = <span class="keyword">\binom</span>{n}{r}</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">\mathrm{C}_n^r = \binom{n}{r}</script><blockquote><p>Enter with the binom command, tbinom to display binomial coefficients as inline formula styles, and dbinom to display binomial coefficients as formula block styles</p></blockquote><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\tbinom</span>{n}{r} = <span class="keyword">\tbinom</span>{n}{n-r}</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">\tbinom{n}{r} = \tbinom{n}{n-r}</script><script type="math/tex; mode=display">\dbinom{n}{r} = \dfrac{n!}{k!\,(n-k)!}</script><p>$ \dbinom{n}{r} = \dfrac{n!}{k!\,(n-k)!} $<br>​</p><h2 id="Matrices-conditional-expressions-and-equations"><a href="#Matrices-conditional-expressions-and-equations" class="headerlink" title="Matrices, conditional expressions and equations"></a>Matrices, conditional expressions and equations</h2><ul><li>Grammar</li></ul><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\begin</span>{type}</span><br><span class="line">content</span><br><span class="line"><span class="keyword">\end</span>{type}</span><br><span class="line">type: matrix、pmatrix、bmatrix、Bmatrix、vmatrix、Vmatrix;</span><br><span class="line">coditional cases;</span><br><span class="line">equations aligned、alignedat.</span><br></pre></td></tr></tbody></table></figure><blockquote><p>In content, the <code>&amp;</code> symbol indicates the aligned content of each line, and <code>\\</code> indicates a line break at the end.</p></blockquote><h3 id="Frameless-matrix"><a href="#Frameless-matrix" class="headerlink" title="Frameless matrix"></a>Frameless matrix</h3><ul><li>Separate matrix columns with <code>&amp;</code> and matrix rows with <code>\\</code></li></ul><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\begin</span>{matrix}</span><br><span class="line">a <span class="built_in">&amp;</span> b <span class="keyword">\\</span></span><br><span class="line">c <span class="built_in">&amp;</span> d</span><br><span class="line"><span class="keyword">\end</span>{matrix}</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">\begin{matrix}a & b \\c & d\end{matrix}</script><h3 id="Box-matrix"><a href="#Box-matrix" class="headerlink" title="Box matrix"></a>Box matrix</h3><ul><li><p><code>pmatrix</code> is parentheses, <code>bmatrix</code> is square brackets, <code>Bmatrix</code> is curly braces, <code>vmatrix</code> is vertical (determinant), and <code>Vmatrix</code> is double vertical bar.</p></li><li><p>Enter ellipses using <code>cdots</code>, <code>ddots</code> and <code>vdots</code>.</p></li></ul><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\begin</span>{pmatrix}</span><br><span class="line">0 <span class="built_in">&amp;</span> <span class="keyword">\cdots</span> <span class="built_in">&amp;</span> 0 <span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\vdots</span> <span class="built_in">&amp;</span> <span class="keyword">\ddots</span> <span class="built_in">&amp;</span> <span class="keyword">\vdots</span> <span class="keyword">\\</span></span><br><span class="line">0 <span class="built_in">&amp;</span> <span class="keyword">\cdots</span> <span class="built_in">&amp;</span> 0 <span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\end</span>{pmatrix}</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">\begin{pmatrix}0 & \cdots & 0 \\\vdots & \ddots & \vdots \\0 & \cdots & 0 \\\end{pmatrix}</script><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\begin</span>{bmatrix}</span><br><span class="line">a <span class="built_in">&amp;</span> b <span class="keyword">\\</span></span><br><span class="line">c <span class="built_in">&amp;</span> d</span><br><span class="line"><span class="keyword">\end</span>{bmatrix}</span><br><span class="line"><span class="keyword">\quad</span></span><br><span class="line"><span class="keyword">\begin</span>{Bmatrix}</span><br><span class="line">a <span class="built_in">&amp;</span> b <span class="keyword">\\</span></span><br><span class="line">c <span class="built_in">&amp;</span> d</span><br><span class="line"><span class="keyword">\end</span>{Bmatrix}</span><br><span class="line"><span class="keyword">\quad</span></span><br><span class="line"><span class="keyword">\begin</span>{vmatrix}</span><br><span class="line">a <span class="built_in">&amp;</span> b <span class="keyword">\\</span></span><br><span class="line">c <span class="built_in">&amp;</span> d</span><br><span class="line"><span class="keyword">\end</span>{vmatrix}</span><br><span class="line"><span class="keyword">\quad</span></span><br><span class="line"><span class="keyword">\begin</span>{Vmatrix}</span><br><span class="line">a <span class="built_in">&amp;</span> b <span class="keyword">\\</span></span><br><span class="line">c <span class="built_in">&amp;</span> d</span><br><span class="line"><span class="keyword">\end</span>{Vmatrix}</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">\begin{bmatrix}a & b \\c & d\end{bmatrix}\quad\begin{Bmatrix}a & b \\c & d\end{Bmatrix}\quad\begin{vmatrix}a & b \\c & d\end{vmatrix}\quad\begin{Vmatrix}a & b \\c & d\end{Vmatrix}</script><h3 id="Matrix-segmentation"><a href="#Matrix-segmentation" class="headerlink" title="Matrix segmentation"></a>Matrix segmentation</h3><ul><li>Add <code>|</code> to the definition where it needs to be divided.</li></ul><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\left</span>[</span><br><span class="line"><span class="keyword">\begin</span>{array}{cc|c}</span><br><span class="line">1 <span class="built_in">&amp;</span> 2 <span class="built_in">&amp;</span> 3 <span class="keyword">\\</span></span><br><span class="line">4 <span class="built_in">&amp;</span> 5 <span class="built_in">&amp;</span> 6</span><br><span class="line"><span class="keyword">\end</span>{array}</span><br><span class="line"><span class="keyword">\right</span>]</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">\left[\begin{array}{cc|c}1 & 2 & 3 \\4 & 5 & 6\end{array}\right]</script><h3 id="Conditional-expressions"><a href="#Conditional-expressions" class="headerlink" title="Conditional expressions"></a>Conditional expressions</h3><ul><li>Use <code>&amp;</code> to separate formulas from conditions.</li></ul><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line">f(n)=</span><br><span class="line"><span class="keyword">\begin</span>{cases}</span><br><span class="line">n/2, <span class="built_in">&amp;</span> <span class="keyword">\text</span>{if } n <span class="keyword">\text</span>{ is even} <span class="keyword">\\</span></span><br><span class="line">3n+1, <span class="built_in">&amp;</span> <span class="keyword">\text</span>{if } n <span class="keyword">\text</span>{ is odd}</span><br><span class="line"><span class="keyword">\end</span>{cases}</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">f(n)=\begin{cases}n/2, & \text{if } n \text{ is even} \\3n+1, & \text{if } n \text{ is odd}\end{cases}</script><blockquote><p>Use <code>\text</code> to distinguish between text and mathematical characters</p></blockquote><h3 id="Multi-line-equation"><a href="#Multi-line-equation" class="headerlink" title="Multi-line equation"></a>Multi-line equation</h3><ul><li>Use <code>\alignedat</code> to perform it<figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\begin</span>{aligned}</span><br><span class="line">f(x) <span class="built_in">&amp;</span> = (m+n)<span class="built_in">^</span>2 <span class="keyword">\\</span></span><br><span class="line"><span class="built_in">&amp;</span> = m<span class="built_in">^</span>2+2mn+n<span class="built_in">^</span>2 <span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\end</span>{aligned}</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">\begin{aligned}f(x) & = (m+n)^2 \\& = m^2+2mn+n^2 \\\end{aligned}</script></li></ul><h3 id="Equations"><a href="#Equations" class="headerlink" title="Equations"></a>Equations</h3><ul><li><code>\case</code> is used to indicate left-alignment.</li></ul><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\begin</span>{cases}</span><br><span class="line">x+2y3z=0 <span class="keyword">\\</span></span><br><span class="line">4x-5y+6z=0 <span class="keyword">\\</span></span><br><span class="line">-7x+8y+9z=0 <span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\end</span>{cases}</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">\begin{cases}x+2y3z=0 \\4x-5y+6z=0 \\-7x+8y+9z=0 \\\end{cases}</script><ul><li>Aligned  according to the equal sign is indicated by <code>\aligned</code>.</li></ul><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\begin</span>{cases}</span><br><span class="line">x+2y3z=0 <span class="keyword">\\</span></span><br><span class="line">4x-5y+6z=0 <span class="keyword">\\</span></span><br><span class="line">-7x+8y+9z=0 <span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\end</span>{cases}</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">\left\{ \begin{aligned}x+2y3z=0 \\4x-5y+6z=0 \\-7x+8y+9z=0 \\\end{aligned} \right.</script><h2 id="Arrays-and-tables"><a href="#Arrays-and-tables" class="headerlink" title="Arrays and tables"></a>Arrays and tables</h2><h3 id="Basic"><a href="#Basic" class="headerlink" title="Basic"></a>Basic</h3><ul><li>Arrays and tables begin with <code>begin{array}{definite}</code> and end with <code>end{array}</code>. Define the alignment of each column in the definition, and <code>l</code>, <code>c</code> and <code>r</code> can be used to represent left, center, and right, respectively. If you insert a horizontal dividing line, insert <code>\hline</code> between the line contents; If you insert a vertical dividing line, insert <code>|</code>. The table content is separated by <code>&amp;</code> columns and rows by <code>\\</code>.</li></ul><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\begin</span>{array}{c|lcr}</span><br><span class="line">x <span class="built_in">&amp;</span> 1<span class="keyword">\text</span>{(left)} <span class="built_in">&amp;</span> 2<span class="keyword">\text</span>{(center)} <span class="built_in">&amp;</span> 3<span class="keyword">\text</span>{(right)} <span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\hline</span></span><br><span class="line">f(x) <span class="built_in">&amp;</span> 0 <span class="built_in">&amp;</span> 1 <span class="built_in">&amp;</span> 2 <span class="keyword">\\</span></span><br><span class="line">g(x) <span class="built_in">&amp;</span> 3 <span class="built_in">&amp;</span> 4 <span class="built_in">&amp;</span> 5 <span class="keyword">\\</span></span><br><span class="line">h(x) <span class="built_in">&amp;</span> 6+i <span class="built_in">&amp;</span> 7-i <span class="built_in">&amp;</span> 1+10i</span><br><span class="line"><span class="keyword">\end</span>{array}</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">\begin{array}{c|lcr}x & 1\text{(left)} & 2\text{(center)} & 3\text{(right)} \\\hlinef(x) & 0 & 1 & 2 \\g(x) & 3 & 4 & 5 \\h(x) & 6+i & 7-i & 1+10i\end{array}</script><ul><li>You can use arrays and tables to implement similar functions as aligned.</li></ul><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\begin</span>{array}{lcr}</span><br><span class="line">z <span class="built_in">&amp;</span> = <span class="built_in">&amp;</span> a <span class="keyword">\\</span></span><br><span class="line">f(x,y,z) <span class="built_in">&amp;</span> = <span class="built_in">&amp;</span> x+y+z</span><br><span class="line"><span class="keyword">\end</span>{array}</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">\begin{array}{lcr}z & = & a \\f(x,y,z) & = & x+y+z\end{array}</script><h3 id="Nesting-of-arrays-and-tables"><a href="#Nesting-of-arrays-and-tables" class="headerlink" title="Nesting of arrays and tables"></a>Nesting of arrays and tables</h3><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="comment">% outer</span></span><br><span class="line"><span class="keyword">\begin</span>{array}{c}</span><br><span class="line"><span class="comment">% inner row 1</span></span><br><span class="line"><span class="keyword">\begin</span>{array}{cc}</span><br><span class="line"><span class="comment">% inner row 1 column 1</span></span><br><span class="line"><span class="keyword">\begin</span>{array}{c|cccc}</span><br><span class="line"><span class="keyword">\min</span> <span class="built_in">&amp;</span> 0 <span class="built_in">&amp;</span> 1 <span class="built_in">&amp;</span> 2 <span class="built_in">&amp;</span> 3 <span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\hline</span></span><br><span class="line">0 <span class="built_in">&amp;</span> 0 <span class="built_in">&amp;</span> 0 <span class="built_in">&amp;</span> 0 <span class="built_in">&amp;</span> 0 <span class="keyword">\\</span></span><br><span class="line">1 <span class="built_in">&amp;</span> 0 <span class="built_in">&amp;</span> 1 <span class="built_in">&amp;</span> 1 <span class="built_in">&amp;</span> 1 <span class="keyword">\\</span></span><br><span class="line">2 <span class="built_in">&amp;</span> 0 <span class="built_in">&amp;</span> 1 <span class="built_in">&amp;</span> 2 <span class="built_in">&amp;</span> 2 <span class="keyword">\\</span></span><br><span class="line">3 <span class="built_in">&amp;</span> 0 <span class="built_in">&amp;</span> 1 <span class="built_in">&amp;</span> 2 <span class="built_in">&amp;</span> 3</span><br><span class="line"><span class="keyword">\end</span>{array}</span><br><span class="line"><span class="built_in">&amp;</span></span><br><span class="line"><span class="comment">% inner row 1 column 2</span></span><br><span class="line"><span class="keyword">\begin</span>{array}{c|cccc}</span><br><span class="line"><span class="keyword">\max</span> <span class="built_in">&amp;</span> 0 <span class="built_in">&amp;</span> 1 <span class="built_in">&amp;</span> 2 <span class="built_in">&amp;</span> 3 <span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\hline</span></span><br><span class="line">0 <span class="built_in">&amp;</span> 0 <span class="built_in">&amp;</span> 1 <span class="built_in">&amp;</span> 2 <span class="built_in">&amp;</span> 3 <span class="keyword">\\</span></span><br><span class="line">1 <span class="built_in">&amp;</span> 1 <span class="built_in">&amp;</span> 1 <span class="built_in">&amp;</span> 2 <span class="built_in">&amp;</span> 3 <span class="keyword">\\</span></span><br><span class="line">2 <span class="built_in">&amp;</span> 2 <span class="built_in">&amp;</span> 2 <span class="built_in">&amp;</span> 2 <span class="built_in">&amp;</span> 3 <span class="keyword">\\</span></span><br><span class="line">3 <span class="built_in">&amp;</span> 3 <span class="built_in">&amp;</span> 3 <span class="built_in">&amp;</span> 3 <span class="built_in">&amp;</span> 3</span><br><span class="line"><span class="keyword">\end</span>{array}</span><br><span class="line"><span class="keyword">\end</span>{array}</span><br><span class="line"><span class="keyword">\\</span></span><br><span class="line"><span class="comment">% inner row 2</span></span><br><span class="line"><span class="keyword">\begin</span>{array}{c|cccc}</span><br><span class="line"><span class="keyword">\Delta</span> <span class="built_in">&amp;</span> 0 <span class="built_in">&amp;</span> 1 <span class="built_in">&amp;</span> 2 <span class="built_in">&amp;</span> 3 <span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\hline</span></span><br><span class="line">0 <span class="built_in">&amp;</span> 0 <span class="built_in">&amp;</span> 1 <span class="built_in">&amp;</span> 2 <span class="built_in">&amp;</span> 3 <span class="keyword">\\</span></span><br><span class="line">1 <span class="built_in">&amp;</span> 1 <span class="built_in">&amp;</span> 0 <span class="built_in">&amp;</span> 1 <span class="built_in">&amp;</span> 2 <span class="keyword">\\</span></span><br><span class="line">2 <span class="built_in">&amp;</span> 2 <span class="built_in">&amp;</span> 1 <span class="built_in">&amp;</span> 0 <span class="built_in">&amp;</span> 1 <span class="keyword">\\</span></span><br><span class="line">3 <span class="built_in">&amp;</span> 3 <span class="built_in">&amp;</span> 2 <span class="built_in">&amp;</span> 1 <span class="built_in">&amp;</span> 0</span><br><span class="line"><span class="keyword">\end</span>{array}</span><br><span class="line"><span class="keyword">\end</span>{array}</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">% outer\begin{array}{c}    % inner row 1    \begin{array}{cc}        % inner row 1 column 1        \begin{array}{c|cccc}        \min & 0 & 1 & 2 & 3 \\        \hline        0 & 0 & 0 & 0 & 0 \\        1 & 0 & 1 & 1 & 1 \\        2 & 0 & 1 & 2 & 2 \\        3 & 0 & 1 & 2 & 3        \end{array}    &        % inner row 1 column 2        \begin{array}{c|cccc}        \max & 0 & 1 & 2 & 3 \\        \hline        0 & 0 & 1 & 2 & 3 \\        1 & 1 & 1 & 2 & 3 \\        2 & 2 & 2 & 2 & 3 \\        3 & 3 & 3 & 3 & 3        \end{array}    \end{array}\\    % inner row 2    \begin{array}{c|cccc}    \Delta & 0 & 1 & 2 & 3 \\    \hline    0 & 0 & 1 & 2 & 3 \\    1 & 1 & 0 & 1 & 2 \\    2 & 2 & 1 & 0 & 1 \\    3 & 3 & 2 & 1 & 0    \end{array}\end{array}</script><h2 id="Fonts"><a href="#Fonts" class="headerlink" title="Fonts"></a>Fonts</h2><ul><li>Use Large and Small to control font size</li></ul><script type="math/tex; mode=display">A, \large{A}, \small{A}</script><p>$ A, \large{A}, \small{A} $</p><h3 id="Greek-symbols"><a href="#Greek-symbols" class="headerlink" title="Greek symbols"></a>Greek symbols</h3><p><code>$\digamma, \varepsilon, \vartheta, \varkappa, \varpi, \varrho, \varsigma, \varphi $</code><br>$\digamma, \varepsilon, \vartheta, \varkappa, \varpi, \varrho, \varsigma, \varphi $</p><script type="math/tex; mode=display">\begin{array}{c|l|c|l}A \alpha & \verb|A \alpha| & N \nu & \verb|N \nu| \\\hlineB \beta & \verb|B \beta| & \Xi \xi & \verb|\Xi \xi| \\\hline\Gamma \gamma & \verb|\Gamma \gamma| & O \omicron & \verb|O \omicron| \\\hline\Delta \delta & \verb|\Delta \delta| & \Pi \pi & \verb|\Pi \pi| \\\hlineE \epsilon & \verb|E \epsilon| & P \rho & \verb|P \rho| \\\hlineZ \zeta & \verb|Z \zeta| & \Sigma \sigma & \verb|\Sigma \sigma| \\\hlineH \eta & \verb|H \eta| & T \tau & \verb|T \tau| \\\hline\Theta \theta & \verb|\Theta \theta| & \Upsilon \upsilon & \verb|\Upsilon \upsilon| \\\hlineI \iota & \verb|I \iota| & \Phi \phi & \verb|\Phi \phi| \\\hlineK \kappa & \verb|K \kappa| & X \chi & \verb|X \chi| \\\hline\Lambda \lambda & \verb|\Lambda \lambda| & \Psi \psi & \verb|\Psi \psi| \\\hlineM \mu & \verb|M \mu| & \Omega \omega & \verb|\Omega \omega| \\\end{array}</script><h3 id="Hebrew-symbols"><a href="#Hebrew-symbols" class="headerlink" title="Hebrew symbols"></a>Hebrew symbols</h3><script type="math/tex; mode=display">\aleph, \beth, \gimel, \daleth</script><p>$\aleph, \beth, \gimel, \daleth$</p><h3 id="Special-font-form"><a href="#Special-font-form" class="headerlink" title="Special font form"></a>Special font form</h3><h4 id="Bold"><a href="#Bold" class="headerlink" title="Bold"></a>Bold</h4><ul><li>Use <code>\mathbf{text}</code> or <code>{\bf text}</code>, <code>\mathbb{text}</code> or <code>\Bbb{text}</code>. However, it is not valid for special symbols.</li></ul><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\begin</span>{array}{c|ccc}</span><br><span class="line"><span class="keyword">\text</span>{defalut} <span class="built_in">&amp;</span> SAMPLE <span class="built_in">&amp;</span> sample <span class="built_in">&amp;</span> 0123 <span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\hline</span></span><br><span class="line"><span class="keyword">\text</span>{mathbf} <span class="built_in">&amp;</span> <span class="keyword">\mathbf</span>{SAMPLE} <span class="built_in">&amp;</span> <span class="keyword">\mathbf</span>{sample} <span class="built_in">&amp;</span> <span class="keyword">\mathbf</span>{0123} <span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\hline</span></span><br><span class="line"><span class="keyword">\text</span>{bf} <span class="built_in">&amp;</span> {<span class="keyword">\bf</span> SAMPLE} <span class="built_in">&amp;</span> {<span class="keyword">\bf</span> sample} <span class="built_in">&amp;</span> {<span class="keyword">\bf</span> 0123} <span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\hline</span></span><br><span class="line"><span class="keyword">\text</span>{mathbb} <span class="built_in">&amp;</span> <span class="keyword">\mathbb</span>{SAMPLE} <span class="built_in">&amp;</span> <span class="keyword">\mathbb</span>{sample} <span class="built_in">&amp;</span> <span class="keyword">\mathbb</span>{0123} <span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\hline</span></span><br><span class="line"><span class="keyword">\text</span>{Bbb} <span class="built_in">&amp;</span> <span class="keyword">\Bbb</span>{SAMPLE} <span class="built_in">&amp;</span> <span class="keyword">\Bbb</span>{sample} <span class="built_in">&amp;</span> <span class="keyword">\Bbb</span>{0123}</span><br><span class="line"><span class="keyword">\end</span>{array}</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span> </span><br></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">\begin{array}{c|ccc}\text{defalut} & SAMPLE & sample & 0123 \\\hline\text{mathbf} & \mathbf{SAMPLE} & \mathbf{sample} & \mathbf{0123} \\\hline\text{bf} & {\bf SAMPLE} & {\bf sample} & {\bf 0123} \\\hline\text{mathbb} & \mathbb{SAMPLE} & \mathbb{sample} & \mathbb{0123} \\\hline\text{Bbb} & \Bbb{SAMPLE} & \Bbb{sample} & \Bbb{0123}\end{array}</script><h4 id="Bold-symbols"><a href="#Bold-symbols" class="headerlink" title="Bold symbols"></a>Bold symbols</h4><ul><li>Use <code>\boldsymbol{text}</code>, which is valid for special symbols.</li></ul><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\begin</span>{array}{c|cccccc}</span><br><span class="line"><span class="keyword">\text</span>{defalut} <span class="built_in">&amp;</span> SAMPLE <span class="built_in">&amp;</span> sample <span class="built_in">&amp;</span> 0123 <span class="built_in">&amp;</span> <span class="keyword">\delta</span><span class="keyword">\theta</span><span class="keyword">\sigma</span><span class="keyword">\omega</span> <span class="built_in">&amp;</span> <span class="keyword">\Delta</span><span class="keyword">\Theta</span><span class="keyword">\Sigma</span><span class="keyword">\Omega</span> <span class="built_in">&amp;</span> <span class="keyword">\sin</span><span class="keyword">\in</span><span class="keyword">\to</span> <span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\hline</span></span><br><span class="line"><span class="keyword">\text</span>{blodsymbol} <span class="built_in">&amp;</span> <span class="keyword">\boldsymbol</span>{SAMPLE} <span class="built_in">&amp;</span> <span class="keyword">\boldsymbol</span>{sample} <span class="built_in">&amp;</span> <span class="keyword">\boldsymbol</span>{0123} <span class="built_in">&amp;</span> <span class="keyword">\boldsymbol</span>{<span class="keyword">\delta</span><span class="keyword">\theta</span><span class="keyword">\sigma</span><span class="keyword">\omega</span>} <span class="built_in">&amp;</span> <span class="keyword">\boldsymbol</span>{<span class="keyword">\Delta</span><span class="keyword">\Theta</span><span class="keyword">\Sigma</span><span class="keyword">\Omega</span>} <span class="built_in">&amp;</span> <span class="keyword">\boldsymbol</span>{<span class="keyword">\sin</span><span class="keyword">\in</span><span class="keyword">\to</span>} <span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\end</span>{array}</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">\begin{array}{c|cccccc}\text{defalut} & SAMPLE & sample & 0123 & \delta\theta\sigma\omega & \Delta\Theta\Sigma\Omega & \sin\in\to \\\hline\text{blodsymbol} & \boldsymbol{SAMPLE} & \boldsymbol{sample} & \boldsymbol{0123} & \boldsymbol{\delta\theta\sigma\omega} & \boldsymbol{\Delta\Theta\Sigma\Omega} & \boldsymbol{\sin\in\to} \\\end{array}</script><h4 id="Italian-font"><a href="#Italian-font" class="headerlink" title="Italian font"></a>Italian font</h4><ul><li>Use <code>\mathit{text}</code> or <code>{\it text}</code></li></ul><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\begin</span>{array}{c|ccccc}</span><br><span class="line"><span class="keyword">\text</span>{defalut} <span class="built_in">&amp;</span> SAMPLE <span class="built_in">&amp;</span> sample <span class="built_in">&amp;</span> 0123 <span class="built_in">&amp;</span> <span class="keyword">\delta</span><span class="keyword">\theta</span><span class="keyword">\sigma</span><span class="keyword">\omega</span> <span class="built_in">&amp;</span> <span class="keyword">\Delta</span><span class="keyword">\Theta</span><span class="keyword">\Sigma</span><span class="keyword">\Omega</span> <span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\hline</span></span><br><span class="line"><span class="keyword">\text</span>{mathit} <span class="built_in">&amp;</span> <span class="keyword">\mathit</span>{SAMPLE} <span class="built_in">&amp;</span> <span class="keyword">\mathit</span>{sample} <span class="built_in">&amp;</span> <span class="keyword">\mathit</span>{0123} <span class="built_in">&amp;</span> <span class="keyword">\mathit</span>{<span class="keyword">\delta</span><span class="keyword">\theta</span><span class="keyword">\sigma</span><span class="keyword">\omega</span>} <span class="built_in">&amp;</span> <span class="keyword">\mathit</span>{<span class="keyword">\Delta</span><span class="keyword">\Theta</span><span class="keyword">\Sigma</span><span class="keyword">\Omega</span>} <span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\hline</span></span><br><span class="line"><span class="keyword">\text</span>{it} <span class="built_in">&amp;</span> {<span class="keyword">\it</span> SAMPLE} <span class="built_in">&amp;</span> {<span class="keyword">\it</span> sample} <span class="built_in">&amp;</span> {<span class="keyword">\it</span> 0123} <span class="built_in">&amp;</span> {<span class="keyword">\it</span> <span class="keyword">\delta</span><span class="keyword">\theta</span><span class="keyword">\sigma</span><span class="keyword">\omega</span>} <span class="built_in">&amp;</span> {<span class="keyword">\it</span> <span class="keyword">\Delta</span><span class="keyword">\Theta</span><span class="keyword">\Sigma</span><span class="keyword">\Omega</span>} <span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\hline</span></span><br><span class="line"><span class="keyword">\end</span>{array}</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">\begin{array}{c|ccccc}\text{defalut} & SAMPLE & sample & 0123 & \delta\theta\sigma\omega & \Delta\Theta\Sigma\Omega \\\hline\text{mathit} & \mathit{SAMPLE} & \mathit{sample} & \mathit{0123} & \mathit{\delta\theta\sigma\omega} & \mathit{\Delta\Theta\Sigma\Omega} \\\hline\text{it} & {\it SAMPLE} & {\it sample} & {\it 0123} & {\it \delta\theta\sigma\omega} & {\it \Delta\Theta\Sigma\Omega} \\\hline\end{array}</script><h4 id="Roman-font"><a href="#Roman-font" class="headerlink" title="Roman font"></a>Roman font</h4><ul><li>Use <code>\mathrm{text}</code> or <code>{\rm text}</code></li></ul><script type="math/tex; mode=display">\begin{array}{c|ccccc}\text{defalut} & SAMPLE & sample & 0123 & \delta\theta\sigma\omega & \Delta\Theta\Sigma\Omega \\\hline\text{mathrm} & \mathrm{SAMPLE} & \mathrm{sample} & \mathrm{0123} & \mathrm{\delta\theta\sigma\omega} & \mathrm{\Delta\Theta\Sigma\Omega} \\\hline\text{rm} & {\rm SAMPLE} & {\rm sample} & {\rm 0123} & {\rm \delta\theta\sigma\omega} & {\rm \Delta\Theta\Sigma\Omega} \\\end{array}</script><blockquote><p>Tips: Lowercase Greek letters do not support Roman script; For Arabic numerals and uppercase Greek letters, the default font is <code>\rm</code>.</p></blockquote><h4 id="Others-1"><a href="#Others-1" class="headerlink" title="Others"></a>Others</h4><script type="math/tex; mode=display">\begin{array}{c|ccccc}\text{defalut} & SAMPLE & sample & 0123 & \delta\theta\sigma\omega & \Delta\Theta\Sigma\Omega \\\hline\text{mathsf} & \mathsf{SAMPLE} & \mathsf{sample} & \mathsf{0123} & \mathsf{\delta\theta\sigma\omega} & \mathsf{\Delta\Theta\Sigma\Omega} \\\hline\text{sf} & {\sf SAMPLE} & {\sf sample} & {\sf 0123} & {\sf \delta\theta\sigma\omega} & {\sf \Delta\Theta\Sigma\Omega} \\\hline\text{mathscr} & \mathscr{SAMPLE} & \mathscr{sample} & \mathscr{0123} & \mathscr{\delta\theta\sigma\omega} & \mathscr{\Delta\Theta\Sigma\Omega} \\\hline\text{mathcal} & \mathcal{SAMPLE} & \mathcal{sample} & \mathcal{0123} & \mathcal{\delta\theta\sigma\omega} & \mathcal{\Delta\Theta\Sigma\Omega} \\\hline\text{cal} & {\cal SAMPLE} & {\cal sample} & {\cal 0123} & {\cal \delta\theta\sigma\omega} & {\cal \Delta\Theta\Sigma\Omega} \\\hline\text{mathtt} & \mathtt{SAMPLE} & \mathtt{sample} & \mathtt{0123} & \mathtt{\delta\theta\sigma\omega} & \mathtt{\Delta\Theta\Sigma\Omega} \\\hline\text{tt} & {\tt SAMPLE} & {\tt sample} & {\tt 0123} & {\tt \delta\theta\sigma\omega} & {\tt \Delta\Theta\Sigma\Omega} \\\hline\text{mathfrak} & \mathfrak{SAMPLE} & \mathfrak{sample} & \mathfrak{0123} & \mathfrak{ \delta\theta\sigma\omega} & \mathfrak{\Delta\Theta\Sigma\Omega} \\\hline\text{frak} & {\frak SAMPLE} & {\frak sample} & {\frak 0123} & \frak{ \delta\theta\sigma\omega} & \frak{\Delta\Theta\Sigma\Omega} \\\hline\text{scriptstyle} & {\scriptstyle SAMPLE} & {\scriptstyle sample} & {\scriptstyle 0123} & \scriptstyle{ \delta\theta\sigma\omega} & \scriptstyle{\Delta\Theta\Sigma\Omega}  \\\hline\text{scriptstyle+text} & {\scriptstyle \text{SAMPLE} } & {\scriptstyle \text{sample} } & {\scriptstyle \text{0123} } \\\end{array}</script><h4 id="Mix-fonts"><a href="#Mix-fonts" class="headerlink" title="Mix fonts"></a>Mix fonts</h4><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line">f(n)=</span><br><span class="line"><span class="keyword">\begin</span>{cases}</span><br><span class="line">n/2, <span class="built_in">&amp;</span> <span class="keyword">\text</span>{if <span class="built_in">$</span>n<span class="built_in">$</span> is even} <span class="keyword">\\</span></span><br><span class="line">3n+1, <span class="built_in">&amp;</span> <span class="keyword">\text</span>{if <span class="built_in">$</span>n<span class="built_in">$</span> is odd}</span><br><span class="line"><span class="keyword">\end</span>{cases}</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">f(n)=\begin{cases}n/2, & \text{if $n$ is even} \\3n+1, & \text{if $n$ is odd}\end{cases}</script><ul><li>Attention block</li></ul><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\begin</span>{matrix}</span><br><span class="line"><span class="keyword">\text</span>{if} n <span class="keyword">\text</span>{is even} <span class="keyword">\\</span> <span class="comment">% Bad</span></span><br><span class="line"><span class="keyword">\text</span>{if } n <span class="keyword">\text</span>{ is even} <span class="keyword">\\</span> <span class="comment">% Good</span></span><br><span class="line"><span class="keyword">\text</span>{if}~n~<span class="keyword">\text</span>{is even} <span class="keyword">\\</span> <span class="comment">% Good</span></span><br><span class="line"><span class="keyword">\text</span>{if}<span class="keyword">\ </span>n<span class="keyword">\ </span><span class="keyword">\text</span>{is even} <span class="keyword">\\</span> <span class="comment">% Good</span></span><br><span class="line"><span class="keyword">\end</span>{matrix}</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></tbody></table></figure><script type="math/tex; mode=display">\begin{matrix}\text{if} n \text{is even} \\ % Bad\text{if } n \text{ is even} \\ % Good\text{if}~n~\text{is even} \\ % Good\text{if}\ n\ \text{is even} \\ % Good\end{matrix}</script><h2 id="Space"><a href="#Space" class="headerlink" title="Space"></a>Space</h2><blockquote><p>$Latex$ automatically ignores spaces, and the space control from wide to narrow is:</p></blockquote><ul><li>Double quad space: 2 characters wide</li></ul><script type="math/tex; mode=display">\alpha \qquad \beta</script><p>$ \alpha \qquad \beta $</p><ul><li>Quad space: 1 character wide</li></ul><script type="math/tex; mode=display">\alpha \quad \beta</script><p>$ \alpha \quad \beta $<br>​</p><ul><li>Space: 1/3 character wide</li></ul><script type="math/tex; mode=display">\alpha \ \beta ~ \gamma</script><p>$ \alpha \ \beta ~ \gamma $</p><ul><li>Medium space: 2/7 characters wide</li></ul><script type="math/tex; mode=display">\alpha \; \beta</script><p>$ \alpha \; \beta $<br>​</p><ul><li>Small space: 1/6 character width</li></ul><script type="math/tex; mode=display">\alpha \, \beta</script><p>$ \alpha \, \beta $<br>​</p><ul><li>No spaces: 0 characters wide</li></ul><script type="math/tex; mode=display">\alpha \beta</script><p>$ \alpha \beta $<br>​</p><ul><li>Snap: -1/6 character width</li></ul><script type="math/tex; mode=display">\alpha \! \beta</script><p>$ \alpha ! \beta $<br>​</p><h2 id="Color"><a href="#Color" class="headerlink" title="Color"></a>Color</h2><ul><li>Use <code>{\color{color}{text} }</code> to control color of text.</li></ul><script type="math/tex; mode=display">\color{red}{text} \quad \color{yellow}{text} \quad \color{blue}{text} \quad \color{green}{text} \quad \color{purple}{text}</script><p>$ \color{red}{text} \quad \color{yellow}{text} \quad \color{blue}{text} \quad \color{green}{text} \quad \color{purple}{text} $<br>​</p><ul><li>You can also use capital initials to represent complex colors.</li></ul><script type="math/tex; mode=display">\color{Red}{text} \quad \color{Orange}{text} \quad \color{RoyalBlue}{text} \quad \color{Violet}{text} \quad \color{LimeGreen}{text}</script><p>$ \color{Red}{text} \quad \color{Orange}{text} \quad \color{RoyalBlue}{text} \quad \color{Violet}{text} \quad \color{LimeGreen}{text} $</p><ul><li>Use <code>{\color{ #rgb}{text} }</code> to control more complex colors. However, this is not possible in some renderings, so it is not shown here.</li></ul><script type="math/tex; mode=display">\color{ #0FF}{text} \quad \color{ #00F}{text} \quad \color{ #F0F}{text} \quad \color{ #0F0}{text} \quad \color{ #6CF}{text}</script><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><ul><li>Use the <code>\boxed</code> command or with the border of a 1*1 table</li></ul><script type="math/tex; mode=display">\boxed {E=mc^2}</script><p>$ \boxed {E=mc^2} $<br></p><figure class="highlight latex"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\begin</span>{array}{|c|}</span><br><span class="line"><span class="keyword">\hline</span></span><br><span class="line">E=mc<span class="built_in">^</span>2 <span class="keyword">\\</span></span><br><span class="line"><span class="keyword">\hline</span></span><br><span class="line"><span class="keyword">\end</span>{array}</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br></pre></td></tr></tbody></table></figure><p></p><script type="math/tex; mode=display">\begin{array}{|c|}\hlineE=mc^2 \\\hline\end{array}</script><ul><li>Some useful $ Latex $ websites.</li></ul><ol><li><a href="https://www.tablesgenerator.com">Tables Generator</a></li><li><a href="http://detexify.kirelabs.org/classify.html">Classify Symbols</a></li><li><a href="http://www.codecogs.com/latex/eqneditor.php">Equation Editor</a></li></ol>]]></content>
    
    
    <summary type="html">&lt;p&gt;$LaTeX$ (/ˈlɑːtɛx/ LAH-tekh or /ˈleɪtɛx/ LAY-tekh, often stylized as LATEX) is a &lt;strong&gt;software system&lt;/strong&gt; for document preparation. When writing, the writer uses plain text as opposed to the formatted text found in WYSIWYG word processors like Microsoft Word, LibreOffice Writer and Apple Pages. The writer uses &lt;strong&gt;markup tagging conventions&lt;/strong&gt; to define the general structure of a document to stylise text throughout a document (such as bold and italics), and to add citations and cross-references. A TeX distribution such as TeX Live or MiKTeX is used to produce an output file (such as PDF or DVI) suitable for printing or digital distribution.&lt;/p&gt;</summary>
    
    
    
    <category term="Summary" scheme="https://boom1999.github.io/categories/Summary/"/>
    
    
    <category term="Latex" scheme="https://boom1999.github.io/tags/Latex/"/>
    
  </entry>
  
</feed>
